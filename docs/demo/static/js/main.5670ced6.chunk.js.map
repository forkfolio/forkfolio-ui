{"version":3,"sources":["views/dialogs/ConfirmRemoveTransactionDialog.jsx","web3/CoinGeckoPrices.js","utils/FormatUtils.js","views/dialogs/AddTradeDialog.jsx","views/dialogs/CommonTradeDialog.jsx","views/dialogs/EditTradeDialog.jsx","components/CustomButton/CustomButton.jsx","web3/common.js","components/Card/Card.jsx","assets/img/full-screen-image-3.jpg","views/PositionsView.jsx","web3/Uniswap.js","web3/dYdXLong.js","web3/dYdXShort.js","web3/GammaOptions.js","web3/Manual.js","web3/UniswapV3.js","web3/templates/positions.js","views/positions/AddSubpositionCard.jsx","views/positions/subpositions/UniswapV2Card.jsx","views/positions/subpositions/DYDXLongCard.jsx","views/positions/subpositions/DYDXShortCard.jsx","views/positions/subpositions/GammaOptionsCard.jsx","views/positions/PositionChartCard.jsx","model/CurrencyPair.js","model/Transaction.js","views/common/InsightsCard.jsx","views/common/HelpCard.jsx","views/dialogs/CommonFundingDialog.jsx","views/dialogs/AddFundingDialog.jsx","model/Portfolio.js","utils/DateUtils.js","model/UserModel.js","model/init/ResModelInit.js","model/ResModel.js","views/PortfolioView.jsx","views/TradesView.jsx","views/dialogs/EditFundingDialog.jsx","views/FundingView.jsx","views/common/PortfolioPie.jsx","views/PerformanceView.jsx","routes/dashboard.jsx","components/Input/InputFiles.js","components/Sidebar/Sidebar.jsx","components/Header/HeaderLinks.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","model/Ticker.js","model/Currency.js","config/Config.js","views/dialogs/ConfirmNewPortfolioDialog.jsx","views/common/DemoCard.jsx","routes/index.jsx","layouts/Dashboard/Dashboard.jsx","index.js"],"names":["ConfirmRemoveTransactionDialog","this","props","removedTransaction","isTrade","toShortString","time","toISOString","split","comment","_this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","fluid","md","show","isDialogShown","onHide","hideDialog","Header","closeButton","Title","Body","getType","getDescription","getDate","getComment","Footer","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_7__","simple","onClick","bsStyle","fill","wd","type","removeTransaction","Component","CoinGeckoPrices","address","url","toLowerCase","fetch","response","json","myJson","Number","usd","formatUtils","value","digits","toLocaleString","minimumFractionDigits","maximumFractionDigits","balance","short","adder","formatNumber","slice","length","style1","Math","abs","react__WEBPACK_IMPORTED_MODULE_2___default","name","userModel","portfolios","tradeCount","transactions","AddTradeDialog","Object","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","getInitialState","console","log","window","location","pathname","ReactGA","modalview","nextProps","title","buttonText","buyAmount","buyAmountError","buyCurrency","buyCurrencyError","sellAmount","sellAmountError","sellCurrency","sellCurrencyError","date","Date","dateError","buyCurrencies","getBuyCurrencies","sellCurrencies","getSellCurrencies","buyRank","rank","isFiat","sellRank","pair","CurrencyPair","isBuy","isValidBuyAmount","isValidBuyCurrency","isValidSellAmount","isValidSellCurrency","isValidDate","pairBuy","getPair","parseFloat","tx","Transaction","addTransaction","setState","CommonTradeDialog","isValidNumber","isInvalid","_step","_iterator","_createForOfIteratorHelper","resModel","dailyTickers","keys","s","n","done","c","push","label","code","err","e","f","_step2","_iterator2","balances","strValue","numValue","isNaN","current","isAfter","isBefore","Datetime","moment","placeholder","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","controlId","componentClass","ControlLabel","sm","smOffset","min","onChange","event","target","react_select__WEBPACK_IMPORTED_MODULE_6__","options","_this2","_this3","react_datetime__WEBPACK_IMPORTED_MODULE_8___default","isEnabledDate","dateFormat","timeFormat","closeOnSelect","inputProps","toDate","_this4","_this5","defaultActiveKey","editedTransaction","Container","id","eventKey","Content","animation","Pane","horizontal","getBuyFormGroup","getSellFormGroup","getDateFormGroup","getCommentFormGroup","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_10__","handleSaveButtonClick","bind","EditTradeDialog","baseAmount","toString","getSelectObject","base","counterAmount","counter","currency","updateTransaction","CustomButton","_this$props","special","speciallarge","table","pullRight","block","round","icon","neutral","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","rest","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","btnClasses","cx","btn-special","btn-special-large","btn-table","btn-fill","btn-simple","pull-right","btn-block","btn-wd","btn-round","btn-icon","btn-neutral","btn-social btn-twitter","btn-social btn-facebook","btn-social btn-google","btn-social btn-linkedin","btn-social btn-pinterest","btn-social btn-youtube","btn-social btn-tumblr","btn-social btn-github","btn-social btn-behance","btn-social btn-dribbble","btn-social btn-reddit","btn-social btn-stumbleupon","react__WEBPACK_IMPORTED_MODULE_6___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","assign","usdcAddress","wbtcAddress","getContractInstance","web3","abi","eth","Contract","debalanceETH","currentPrice","startBASE","ethTokens","daiTokens","debalanceDAI","startUNDER","clone","original","create","getPrototypeOf","OptionMath","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","PutCallFlag","S","X","T","r","v","d1","sqrt","d2","CND","exp","x","k","PI","Card","hidden","calendar","plain","wizard","undefined","category","textCenter","rightSection","ctAllIcons","ctFullWidth","ctTextCenter","tableFullWidth","content","stats","legend","ftTextCenter","module","exports","__webpack_require__","p","PositionsView","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","displayDescription","description","text","displayLinks","links","map","link","react__WEBPACK_IMPORTED_MODULE_9___default","href","anchor","hideConfirmDialog","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","hideChartDialog","loadWeb3","loadWeb3Account","addService","isConfirmDialogShown","isChartDialogShown","web3DataLoaded","selectedPosition","hash","pageview","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","on","accounts","chainId","info","error","account","global","ethereum","currentProvider","providers","HttpProvider","enable","getAccounts","_context2","t0","getMessage","positions","Array","isArray","appendedPositions","uniswapv3Test","loadWeb3Data","prepareTableData","tableData","data","i","pos","j","subpositions","subpos","service","Uniswap","marketAddress","under","liq","start","dYdXLong","borrowedBASE","boughtUNDER","openingPrice","dYdXShort","borrowedUNDER","boughtBASE","GammaOptions","isCall","isLong","quantity","strike","daysToExpiry","iv","Manual","extra","UniswapV3","entryPrice","minPrice","maxPrice","feeInPercent","getMarketData","uniswapTableSet","startDate","daysSinceStart","market","getPrice","getTokenPriceInUSD","priceBASEUSD","priceUNDERUSD","totalInBASE","totalOutBASE","extraBASE","getCurrentValue","profitPerMonthTodayToken","profitTodayToken","aprToday","targetPriceUNDER","targetProfitUNDER","profitPerMonthTargetUNDER","aprTargetUNDER","priceAndProfitUNDER","findMaxUNDER","targetHodlUNDER","targetPriceBASE","targetProfitBASE","profitPerMonthTargetBASE","aprTargetBASE","priceAndProfitBASE","findMaxBASE","targetHodlBASE","profitTargetETHUSD","profitTargetTokenUSD","symbol","profitPerMonthTargetETHUSD","profitPerMonthTargetTokenUSD","maxProfitTargetUSD","max","maxProfitPerMonthTargetUSD","position","sizedays","size","days","toFixed","price","lower","higher","totalprofit","monthlyprofit","apr","actions","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_13__","maxBalanceBASE","maxProfitBASE","maxTotalHodlBASE","debalanced","maxBalanceUNDER","maxProfitUNDER","maxTotalHodlUNDER","totalOutUNDER","extraUNDER","sumA","rows","columnName","subName","index","total","accessor","maxWidth","style","whiteSpace","filterMethod","filter","row","indexOf","Cell","float","filterable","getSumFooter","sortMethod","b","getTotalProfitSum","getMonthlyProfitSum","minWidth","sortable","addTradeDialog","_dialogs_AddTradeDialog__WEBPACK_IMPORTED_MODULE_14__","isAddTradeDialogShown","hideAddTradeDialog","editTradeDialog","_dialogs_EditTradeDialog__WEBPACK_IMPORTED_MODULE_15__","isEditTradeDialogShown","hideEditTradeDialog","confirmRemoveTransactionDialog","_dialogs_ConfirmRemoveTransactionDialog__WEBPACK_IMPORTED_MODULE_16__","tooltipHelpText1","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","components_Card_Card_jsx__WEBPACK_IMPORTED_MODULE_12__","showAddTradeDialog","placement","overlay","react_table__WEBPACK_IMPORTED_MODULE_10__","columns","getTableColumns","defaultPageSize","noDataText","getNoDataText","_positions_PositionChartCard__WEBPACK_IMPORTED_MODULE_26__","addressBASE","addressUNDER","myLIQ","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","myBASE","myUNDER","poolBASE","poolUNDER","poolLIQ","marketInstance","uniswapABI","baseInstance","daiABI","underInstance","getBalance","ethBalance","methods","totalSupply","balanceOf","pow","getDecimals","newPrice","oldPrice","setMarketPrice","myShare","exactUNDER","exactBASE","exactLIQ","exactUNDERWithFees","exactBASEWithFees","inputAmount","inputPool","outputPool","collateralUNDER","positionBASE","collateralBASE","optionMath","currentValueBASE","blackScholes","openingTotalBASE","token1V2","token2V2","L","L2","H","maxToken2","maxToken1","LP_a","LP_b","LP","multiplier","d","__webpack_exports__","dai","AddSubpositionCard","classCallCheck","possibleConstructorReturn","selectedType","types","react_default","es","react_select_es","getTypes","addSubposition","UniswapV2Card","newValue","subposition","updateSubposition","tooltipHelpText","removeSubposition","onChangeStartBase","onChangeExtraBase","onChangeStartUnder","onChangeExtraUnder","onChangeStartLiq","onChangeExtraLiq","customMin","DYDXLongCard","onChangeBorrowedBase","onChangeBoughtUnder","DYDXShortCard","onChangeBorrowedUnder","onChangeBoughtBase","GammaOptionsCard","onChangeIsCall","onChangeQuantity","onChangeStrike","onChangeDaysToExpiry","onChangeIV","PositionChartCard","chartLoaded","chartData","random","customMax","assertThisInitialized","prevProps","prevState","userModelLoaded","customPosition","refreshChart","chartWindow","getChartWindow","startPrice","step","endPrice","right","aprsBASE","profitsBASE","profitsUNDER","profitBASE","profitUNDER","y","rangeEdgesBASE","getRangePoints","rangeEdgesUNDER","chartData1","chartData2","chartData3","left","pivot","profits","maxProfit","prevPoint","firstPoint","leftPoint","rightPoint","chart","height","xAxis","plotLines","color","width","plotBands","from","to","yAxis","opposite","series","tooltip","valueSuffix","turboThreshold","shared","valueDecimals","credits","enabled","newSubpos","updatedPosition","splice","subpositions_UniswapV2Card","subpositions_DYDXLongCard","subpositions_DYDXShortCard","subpositions_GammaOptionsCard","displayCard","tooltipHelpText2","highcharts_react_official_default","highcharts","Highcharts","getPerformanceChartOptions","getSubpositionCards","positions_AddSubpositionCard","denomination","priceThen","priceNow","getLastPrice","profit","InsightsCard","getTradingProfit","totalProfit","getProfit","totalDeposits","totalWithdrawals","lastPrice","getPastPrice","currentPortfolio","totalBalance","getTotalCryptoBalance","toShortFormat","addon","getTotalBalance","tradingProfit","fundings","getTotalFundings","holdingProfit","exposureToCrypto","getExposureToCryptoPercentage","react_bootstrap_es","toDecimalFormatStyled","toShortFormatStyled","HelpCard","isHelpPanelShown","lg","xs","class","danger","showAddFundingDialog","src","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","mdOffset","hideHelpPanel","CommonFundingDialog","handleTabSelect","amountError","currencyError","currencies","CommonFundingDialog_createForOfIteratorHelper","selected","amount","isValidAmount","isValidCurrency","DateTime_default","isDeposit","getDepositCurrencies","getWithdrawalCurrencies","activeKey","onSelect","getBuySellFormGroup","AddFundingDialog","isInitialDeposit","Portfolio","previous","genesisTx","Map","calculateTradeCount","calculateCurrencyBalances","count","isNotFunding","get","set","toConsumableArray","entries","sort","getCurrencyBalance","priceInDenomination","Portfolio_createForOfIteratorHelper","currencyBalance","getTime","pastPortfolio","getPastPortfolio","_step3","totalPastBalance","_iterator3","getPastCurrencyBalance","prev","dateUtils","sinceDate","diff","UserModel","arguments","preparePortfolios","empty","sortBalances","UserModel_createForOfIteratorHelper","portfolio","unshift","firstDate","getDaysSince","ResModel","recentTickers","newModel","percentChange24h","getFullYear","getMonth","ResModel_createForOfIteratorHelper","t","sameDay","rangeSelectorModel","inputPosition","align","buttonPosition","buttons","userFriendlyText","PortfolioView","getTableColumnsDesktop","getTableColumnsMobile","getTableData","getLogoURL","innerWidth","addEventListener","updateWidth","PortfolioView_createForOfIteratorHelper","originalLogoURL","replace","downsizeTokenLogo","alt","toGreenRedPercentStyle","substr","meta","logo","_ref3","_ref2","slicedToArray","getPercentChange24h","share","_step4","serie","_iterator4","balanceInDenominated","plotOptions","stacking","lineColor","lineWidth","marker","rangeSelector","assetCount","showPagination","isMobile","addFundingDialog","dialogs_AddFundingDialog","isAddFundingDialogShown","hideAddFundingDialog","common_HelpCard","react_table_es","showPageSizeOptions","common_InsightsCard","Highstock","constructorType","TradesView","mapTradesToState","newestFirst","TradesView_createForOfIteratorHelper","volume","cost","profitPercent","getProfitPercent","prop","profitpercentage","setEditedTransaction","showEditTradeDialog","getTotalCost","getTotalVolume","pairStr","findCurrencyByCode","totalCostInUsd","getTotalProfit","getTypeFooter","_step5","_iterator5","isOnePair","getTotalPrice","getTotalProfitPercentage","getPairFooter","getVolumeFooter","getPriceFooter","getCostFooter","getProfitPercentageFooter","EditFundingDialog","FundingView","FundingView_createForOfIteratorHelper","showEditFundingDialog","fundingCount","editFundingDialog","dialogs_EditFundingDialog","isEditFundingDialogShown","hideEditFundingDialog","PortfolioPie","chartOptions","getPieOptions","PortfolioPie_createForOfIteratorHelper","PerformanceView","rangeClickHandler","daysSince","getDaysSinceFirstTx","getBestCurrentWorstPortfolio","bestPortfolio","best","worstPortfolio","worst","performanceChartOptions","since","setHours","portfoliosSince","getPortfoliosSince","PerformanceView_createForOfIteratorHelper","getPastTotalBalance","getPortfolioSeries","externalCaller","_loop","events","click","common_PortfolioPie","dashboardRoutes","path","component","collapse","views","mini","redirect","pathTo","InputFiles","onInputRef","node","input","preventDefault","files","children","accept","react","onKeyPress","role","tabIndex","objectSpread","display","react_portal_es","ref","React","defaultProps","ps","Sidebar","onOpenClick","isWindows","navigator","platform","routeName","updateDimensions","PerfectScrollbar","refs","sidebarWrapper","suppressScrollX","suppressScrollY","setTimeout","update","destroy","document","getElementById","changeCount","data-color","data-image","image","st","activeRoute","getChangeCount","in","newPortfolio","downloadPortfolio","Input_InputFiles","uploadPortfolioFromFile","activeClassName","rel","showHelpPanel","HeaderLinks","handleMinimizeSidebar","mobileSidebarToggle","body","classList","toggle","documentElement","Brand","makeBrand","Toggle","Header_HeaderLinks","transparent","getYear","packageJson","version","Ticker","Currency","config","host","ConfirmNewPortfolioDialog","createNew","saveCurrentAndCreateNew","DemoCard","aria-hidden","indexRoutes","Dashboard","handleNotificationClick","hideConfirmNewPortfolioDialog","fetchRecentPrices","fetchCurrencies","getCurrenciesToFetch","fetchAllAndRender","fetchHistoday","fetchMeta","isDemo","updateUserModel","openPortfolio","savePortfolio","saveCurrentAndCreateNewPortfolio","_notificationSystem","isConfirmNewPortfolioDialogShown","str","Dashboard_createForOfIteratorHelper","Promise","reject","then","res","out","catch","toTokensString","tickers","JSON","parse","l","parseInt","promises","all","newResModel","newUserModel","repacked","m","notificationSystem","history","action","scrollTop","scrollingElement","mainPanel","demofolio","cookie","load","save","maxAge","portfolioJson","localStorage","getItem","portfolioObject","setInterval","level","floor","addNotification","data-notify","message","autoDismiss","isOldest","hasNewBalance","has","newChangeCount","setItem","getPortfolioJson","_this6","newTransactions","item","fileFormatPortfolio","stringifiedToObjectsTransactions","_this7","reader","FileReader","result","portfolioObj","readAsText","file","File","FileSaver","saveAs","_step6","fileTransactions","_iterator6","trade","portfolioFile","credit","stringify","fileFormatTransactions","_step7","_iterator7","_this8","confirmNewPortfolioDialog","dialogs_ConfirmNewPortfolioDialog","NotificationSystem_default","components_Sidebar_Sidebar","components_Header_Header","common_DemoCard","render","routeProps","handleClick","components_Footer_Footer","initialize","ReactDOM"],"mappings":"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","file":"static/js/main.5670ced6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\n\r\nclass ConfirmRemoveTransactionDialog extends Component {\r\n\r\n  getType() {\r\n    if (this.props.removedTransaction != null) {\r\n      return this.props.removedTransaction.isTrade ? \"trade\" : \"funding\";\r\n    }\r\n  }\r\n\r\n  getDescription() {\r\n    if (this.props.removedTransaction != null) {\r\n      return (this.props.removedTransaction.isTrade ? \"Trade\" : \"Funding\") + \": \" + this.props.removedTransaction.toShortString();\r\n    }\r\n  }\r\n\r\n  getDate() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Date: \" + this.props.removedTransaction.time.toISOString().split('T')[0];\r\n    }\r\n  }\r\n\r\n  getComment() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Comment: \" + this.props.removedTransaction.comment;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm remove</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                    Are you sure you want to remove this {this.getType()}?\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    {this.getDescription()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getDate()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getComment()}\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.removeTransaction()}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmRemoveTransactionDialog;\r\n","\r\n\t\t\r\nclass CoinGeckoPrices {\t\t\r\n    // gets usd prices from coingecko api\r\n\tstatic async getTokenPriceInUSD(address) {\t\r\n\t\tlet url = \"https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=\" + address.toLowerCase() + \"&vs_currencies=USD\";\r\n\t\tconst response = await fetch(url);\r\n\t\tconst myJson = await response.json();\r\n\t\tif(myJson[address.toLowerCase()]) {\r\n\t\t\treturn Number(myJson[address.toLowerCase()].usd);\r\n\t\t}\r\n\t\t\t\r\n\t\treturn 1;\r\n\t}\r\n}\t\t\r\n\r\nexport { CoinGeckoPrices };\r\n","/*jshint esversion: 6 */\r\nimport React  from 'react';\r\n\r\nclass FormatUtils {\r\n  formatNumber(value, digits) {\r\n    if (value != null) {\r\n      return value.toLocaleString('en-US', { minimumFractionDigits: digits, maximumFractionDigits: digits });\r\n    }\r\n\r\n    return \"0\";\r\n  }\r\n\r\n  toShortFormat(balance) {\r\n    let short = balance;\r\n    let adder = \"\";\r\n    if(balance > 10000000000) {\r\n      short = balance / 1000000000;\r\n      adder = \"B\";\r\n    } else if(balance > 10000000) {\r\n      short = balance / 1000000;\r\n      adder = \"M\";\r\n    } else if(balance > 10000) {\r\n      short = balance / 1000;\r\n      adder = \"K\";\r\n    }\r\n\r\n    // special case if portfolio is negative\r\n    if(balance < 0) {\r\n      let value = formatUtils.formatNumber(short, 2) + adder;\r\n      return \"-$\" + value.slice(1, value.length);\r\n    }\r\n\r\n    return \"$\" + formatUtils.formatNumber(short, 2) + adder;\r\n  }\r\n\r\n  toGreenRedPercentStyle(value) {\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.formatNumber(value, 2) + \"%\"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>navigate to the Funding page,</li>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n}\r\n\r\nexport let formatUtils = new FormatUtils();","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/addTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // track ga\r\n    /*if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addTrade');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(nextProps) {\r\n    return {\r\n      isDialogShown: nextProps.isDialogShown,\r\n      title: \"Add trade\",\r\n      buttonText: \"Add\",\r\n      buyAmount: \"\",\r\n      buyAmountError: null,\r\n      buyCurrency: null,\r\n      buyCurrencyError: null,\r\n      sellAmount: \"\",\r\n      sellAmountError: null,\r\n      sellCurrency: null,\r\n      sellCurrencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: \"\",\r\n      buyCurrencies: this.getBuyCurrencies(nextProps),\r\n      sellCurrencies: this.getSellCurrencies(nextProps),\r\n    }\r\n  }\r\n\r\n  getPair(buyCurrency, sellCurrency, buyAmount, sellAmount) {\r\n    let buyRank = buyCurrency.rank + (buyCurrency.isFiat ? -1000000 : 0);\r\n    let sellRank = sellCurrency.rank + (sellCurrency.isFiat ? -1000000 : 0);\r\n    // reverse if needed for ranks, or in special case where ETH/ETH and 0\r\n    if(buyRank < sellRank || (buyRank === sellRank && buyAmount === 0)) {\r\n      return {\r\n        pair: new CurrencyPair(sellCurrency, buyCurrency),\r\n        isBuy: false,\r\n        buyAmount: sellAmount,\r\n        sellAmount: buyAmount\r\n      }\r\n    }\r\n\r\n    return {\r\n      pair: new CurrencyPair(buyCurrency, sellCurrency),\r\n      isBuy: true,\r\n      buyAmount: buyAmount,\r\n      sellAmount: sellAmount\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n      \r\n\r\n      let pairBuy = this.getPair(this.state.buyCurrency.value, this.state.sellCurrency.value, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount));\r\n      let pair = pairBuy.pair;\r\n      let isBuy = pairBuy.isBuy;\r\n      let buyAmount = pairBuy.buyAmount;\r\n      let sellAmount = pairBuy.sellAmount;\r\n\r\n      let tx = new Transaction(true, isBuy, pair, buyAmount, sellAmount, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.setState(this.getInitialState(this.props));\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddTradeDialog;","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Nav,\r\n  NavItem,\r\n  Tab\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonTradeDialog extends Component {\r\n\r\n  isValidBuyAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ buyAmountError: null }) : this.setState({\r\n      buyAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidBuyCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      buyCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ buyCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidSellAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ sellAmountError: null }) : this.setState({\r\n      sellAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidSellCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      sellCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ sellCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n      })\r\n    : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getBuyCurrencies(nextProps) {\r\n    let buyCurrencies = [];\r\n    for(let c of nextProps.resModel.dailyTickers.keys()) {\r\n      buyCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return buyCurrencies;\r\n  }\r\n\r\n  getSellCurrencies(nextProps) {\r\n    let currentPortfolio = nextProps.userModel.portfolios.slice(-1)[0];\r\n    let sellCurrencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      sellCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return sellCurrencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  /*isAllowedAmount(strValue, sellCurrency) {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let numValue = parseFloat(strValue);\r\n    //console.log(sellCurrency.value)\r\n    if(sellCurrency != null) {\r\n      console.log(sellCurrency.value)\r\n      console.log(currentPortfolio.balances.get(sellCurrency.value));\r\n    }\r\n    let isAllowed = sellCurrency != null ? numValue <= currentPortfolio.balances.get(sellCurrency.value) : true;\r\n    return isAllowed;\r\n  }\r\n\r\n  getMaxSellValueAndCurrency(sellCurrency) {\r\n    if(sellCurrency != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.balances.get(sellCurrency.value) + \" \" + sellCurrency.value.code;\r\n    }\r\n\r\n    return \"\";\r\n  }*/\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuyFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          min={0}\r\n          name=\"buyAmount\"\r\n          value={this.state.buyAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              buyAmount: event.target.value\r\n            });\r\n            this.isValidBuyAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.buyAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"buyCurrency\"\r\n          value={this.state.buyCurrency}\r\n          options={this.state.buyCurrencies}\r\n          onChange={value => {\r\n            this.setState({ buyCurrency: value });\r\n            this.isValidBuyCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.buyCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getSellFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"sellAmount\"\r\n          min={0}\r\n          value={this.state.sellAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              sellAmount: event.target.value\r\n            });\r\n            this.isValidSellAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.sellAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"sellCurrency\"\r\n          value={this.state.sellCurrency}\r\n          options={this.state.sellCurrencies}\r\n          onChange={value => {\r\n            this.setState({ sellCurrency: value });\r\n            this.isValidSellCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.sellCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate()});\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let defaultActiveKey = \"buy\";\r\n    if(this.props.editedTransaction != null && !this.props.editedTransaction.isBuy) {\r\n      defaultActiveKey = \"sell\";\r\n    }\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tab.Container id=\"tabs-with-dropdown\" defaultActiveKey={defaultActiveKey}>\r\n                    <Row className=\"clearfix\">\r\n                      <Col sm={12}>\r\n                        <Nav bsStyle=\"tabs\">\r\n                          <NavItem eventKey=\"buy\">Buy</NavItem>\r\n                          <NavItem eventKey=\"sell\">Sell</NavItem>\r\n                        </Nav>\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <Tab.Content animation>\r\n                          <Tab.Pane eventKey=\"buy\">\r\n                            <Form horizontal>  \r\n                              {this.getBuyFormGroup(\"Buy amount\", \"How much to buy?\")}\r\n                              {this.getSellFormGroup(\"Cost\", \"How much is cost?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                          <Tab.Pane eventKey=\"sell\">\r\n                            <Form horizontal>  \r\n                              {this.getSellFormGroup(\"Sell amount\", \"How much to sell?\")}\r\n                              {this.getBuyFormGroup(\"Proceeds\", \"How much to receive?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                        </Tab.Content>\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonTradeDialog;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update trade\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      buyAmount: props.editedTransaction.baseAmount.toString(),\r\n      buyAmountError: null,\r\n      buyCurrency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      buyCurrencyError: null,\r\n      buyCurrencies: this.getBuyCurrencies(props),\r\n      sellAmount: props.editedTransaction.counterAmount.toString(),\r\n      sellAmountError: null,\r\n      sellCurrency: this.getSelectObject(props.editedTransaction.pair.counter),\r\n      sellCurrencyError: null,\r\n      sellCurrencies: this.getSellCurrencies(props),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/editTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        buyAmount: nextProps.editedTransaction.baseAmount.toString(),\r\n        buyAmountError: null,\r\n        buyCurrency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        buyCurrencyError: null,\r\n        buyCurrencies: this.getBuyCurrencies(nextProps),\r\n        sellAmount: nextProps.editedTransaction.counterAmount.toString(),\r\n        sellAmountError: null,\r\n        sellCurrency: this.getSelectObject(nextProps.editedTransaction.pair.counter),\r\n        sellCurrencyError: null,\r\n        sellCurrencies: this.getSellCurrencies(nextProps),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editTrade');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.buyCurrency.value, this.state.sellCurrency.value);\r\n      let tx = new Transaction(true, this.state.editedTransaction.isBuy, pair, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount), this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditTradeDialog;","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n// used to make this component's props into classes\r\nimport cx from \"classnames\";\r\n// used for making the props of this component to bool\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CustomButton extends Component {\r\n  render() {\r\n    const {\r\n      special,\r\n      speciallarge,\r\n      table,\r\n      fill,\r\n      simple,\r\n      pullRight,\r\n      block,\r\n      wd,\r\n      round,\r\n      icon,\r\n      neutral,\r\n      twitter,\r\n      facebook,\r\n      google,\r\n      linkedin,\r\n      pinterest,\r\n      youtube,\r\n      tumblr,\r\n      github,\r\n      behance,\r\n      dribbble,\r\n      reddit,\r\n      stumbleupon,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const btnClasses = cx({\r\n      \"btn-special\": special,\r\n      \"btn-special-large\": speciallarge,\r\n      \"btn-table\": table,\r\n      \"btn-fill\": fill,\r\n      \"btn-simple\": simple,\r\n      \"pull-right\": pullRight,\r\n      \"btn-block\": block,\r\n      \"btn-wd\": wd,\r\n      \"btn-round\": round,\r\n      \"btn-icon\": icon,\r\n      \"btn-neutral\": neutral,\r\n      \"btn-social btn-twitter\": twitter,\r\n      \"btn-social btn-facebook\": facebook,\r\n      \"btn-social btn-google\": google,\r\n      \"btn-social btn-linkedin\": linkedin,\r\n      \"btn-social btn-pinterest\": pinterest,\r\n      \"btn-social btn-youtube\": youtube,\r\n      \"btn-social btn-tumblr\": tumblr,\r\n      \"btn-social btn-github\": github,\r\n      \"btn-social btn-behance\": behance,\r\n      \"btn-social btn-dribbble\": dribbble,\r\n      \"btn-social btn-reddit\": reddit,\r\n      \"btn-social btn-stumbleupon\": stumbleupon\r\n    });\r\n\r\n    return <Button className={btnClasses} {...rest} />;\r\n  }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n  special: PropTypes.bool,\r\n  speciallarge: PropTypes.bool,\r\n  table: PropTypes.bool,\r\n  fill: PropTypes.bool,\r\n  simple: PropTypes.bool,\r\n  pullRight: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  wd: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  neutral: PropTypes.bool,\r\n  twitter: PropTypes.bool,\r\n  facebook: PropTypes.bool,\r\n  google: PropTypes.bool,\r\n  linkedin: PropTypes.bool,\r\n  pinterest: PropTypes.bool,\r\n  youtube: PropTypes.bool,\r\n  tumblr: PropTypes.bool,\r\n  github: PropTypes.bool,\r\n  behance: PropTypes.bool,\r\n  dribbble: PropTypes.bool,\r\n  reddit: PropTypes.bool,\r\n  stumbleupon: PropTypes.bool\r\n};\r\n\r\nexport default CustomButton;\r\n","\r\n\t\t\r\n\r\n\r\n// token addresses\r\nexport const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\r\nexport const cdaiAddress = \"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643\";\r\nexport const usdcAddress = \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\";\r\nexport const cusdcAddress = \"0x39aa39c021dfbae8fac545936693ac917d5e7563\";\r\nexport const batAddress = \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\";\r\nexport const sethAddress = \"0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb\";\r\nexport const wethAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\t\t\r\nexport const compAddress = \"0xc00e94cb662c3520282e6f5717214004a7f26888\";\r\nexport const sushiAddress = \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\";\r\nexport const alphaAddress = \"0xa1faa113cbe53436df28ff0aee54275c13b40975\";\r\nexport const ibethAddress = \"0x67B66C99D3Eb37Fa76Aa3Ed1ff33E8e39F0b9c7A\";\r\nexport const bacAddress = \"0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a\";\r\nexport const wbtcAddress = \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\";\r\n\r\nexport const ustAddress = \"0xa47c8bf37f92abed4a126bda807a7b7498661acd\";\r\nexport const mmsftAddress = \"0x41bbedd7286daab5910a1f15d12cbda839852bd7\";\r\nexport const mgoogAddress = \"0x59a921db27dd6d4d974745b7ffc5c33932653442\";\r\nexport const mtwtrAddress = \"0xedb0414627e6f1e3f082de65cd4f9c693d78cca9\";\r\n\r\n\r\n\r\n// uniswap v2 exchange addresses\r\nexport const uniswapV2DAIWETHAddress = \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\";\r\nexport const uniswapV2USDCWETHAddress = \"0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc\";\r\nexport const uniswapV2BATWETHAddress = \"0xb6909b960dbbe7392d405429eb2b3649752b4838\";\r\nexport const uniswapV2DAIUSDCAddress = \"0xae461ca67b15dc8dc81ce7615e0320da1a9ab8d5\";\r\nexport const uniswapV2ALPHAIBETHAddress = \"0x411a9b902f364817a0f9c4261ce28b5566a42875\";\r\nexport const uniswapV2USTmMSFTAddress = \"0xeAfAD3065de347b910bb88f09A5abE580a09D655\";\r\nexport const uniswapV2USTmGOOGAddress = \"0x4b70ccD1Cf9905BE1FaEd025EADbD3Ab124efe9a\";\r\nexport const uniswapV2USTmTWTRAddress = \"0x34856be886A2dBa5F7c38c4df7FD86869aB08040\";\r\nexport const uniswapV2DAIBACAddress = \"0xd4405f0704621dbe9d4dea60e128e0c3b26bddbd\";\r\n\r\nexport const sushiswapV2COMPETHAddress = \"0x31503dcb60119a812fee820bb7042752019f2355\";\r\nexport const sushiswapV2SUSHIETHAddress = \"0x795065dcc9f64b5614c407a6efdc400da6221fb0\";\r\n\r\nexport const inchV2DAIETHAddress = \"0x7566126f2fd0f2dddae01bb8a6ea49b760383d5a\";\r\n\r\nexport function getContractInstance(web3, abi, address) {\t\t\t\r\n\t//console.log(\"Loading contract instance for address: \" + address)\r\n\treturn new web3.eth.Contract(abi, address);\r\n}\r\n\r\n/*export function checkBalances(market, balanceLPT) {\r\n    let balanceETH = balanceLPT * market.poolUNDER / market.poolLIQ;\r\n    let balanceToken = balanceLPT * market.poolBASE / market.poolLIQ;\r\n    return [balanceETH, balanceToken];\r\n}*/\r\n  \r\nexport function debalanceETH(currentPrice, startBASE, ethTokens, daiTokens) {\r\n    let diffDai = startBASE - daiTokens;\r\n    let newETH = ethTokens - diffDai / currentPrice;\r\n    \r\n    return [newETH, startBASE];\r\n  }\r\n  \r\nexport function debalanceDAI(currentPrice, startUNDER, ethTokens, daiTokens) {\r\n    let diffETH = startUNDER - ethTokens;\r\n    let newDAI = daiTokens - diffETH * currentPrice;\r\n    \r\n    return [startUNDER, newDAI];\r\n}\r\n\r\n/**\r\n * @function\r\n * @description Deep clone a class instance.\r\n * @param {object} instance The class instance you want to clone.\r\n * @returns {object} A new cloned instance.\r\n */\r\nexport function clone(original) {\r\n  var copied = Object.assign(\r\n    Object.create(\r\n      Object.getPrototypeOf(original)\r\n    ),\r\n    original\r\n  );\r\n  return copied;\r\n}\r\n\r\n//----------------- BLACK-SCHOLES -----------------------\r\n/*\r\n  PutCallFlag: Either \"put\" or \"call\"\r\n  S: Stock Price\r\n  X: Strike Price\r\n  T: Time to expiration (in years)\r\n  r: Risk-free rate\r\n  v: Volatility\r\n  This is the same one found in http://www.espenhaug.com/black_scholes.html\r\n  but written with proper indentation and a === instead of == because it's\r\n  faster, and it doesn't declare 5 useless variables (although if you really\r\n  want to do it to have more elegant code I left a commented CND function in\r\n  the end)\r\n*/\r\nexport class OptionMath {\r\n\tblackScholes(PutCallFlag, S, X, T, r, v) {\r\n\t  let d1 = (Math.log(S / X) + (r + v * v / 2) * T) / (v * Math.sqrt(T));\r\n\t  let d2 = d1 - v * Math.sqrt(T);\r\n\t  if (PutCallFlag === \"call\") {\r\n\t\treturn ( S * this.CND(d1)-X * Math.exp(-r * T) * this.CND(d2) );\r\n\t  } else {\r\n\t\treturn ( X * Math.exp(-r * T) * this.CND(-d2) - S * this.CND(-d1) );\r\n\t  }\r\n\t}\r\n\r\n\t/* The cummulative Normal distribution function: */\r\n\tCND(x){\r\n\t  if(x < 0) {\r\n\t\treturn ( 1-this.CND(-x) );\r\n\t  } else {\r\n\t\tlet k = 1 / (1 + .2316419 * x);\r\n\t\treturn ( 1 - Math.exp(-x * x / 2)/ Math.sqrt(2*Math.PI) * k * (.31938153 + k * (-.356563782 + k * (1.781477937 + k * (-1.821255978 + k * 1.330274429)))) );\r\n\t  }\r\n\t}\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"card\" +\r\n          (this.props.hidden ? \" card-hidden\" : \"\") +\r\n          (this.props.calendar ? \" card-calendar\" : \"\") +\r\n          (this.props.plain ? \" card-plain\" : \"\") +\r\n          (this.props.wizard ? \" card-wizard\" : \"\")\r\n        }\r\n      >\r\n        {this.props.title !== undefined || this.props.category !== undefined ? (\r\n          <div\r\n            className={\"header\" + (this.props.textCenter ? \" text-center\" : \"\")}\r\n          >\r\n            <div className=\"clearfix\">\r\n              <h4 className=\"title\">{this.props.title}</h4>      \r\n              <p className=\"rightsection\">{this.props.rightSection}</p>\r\n            </div>\r\n            <p className=\"category\">{this.props.category}</p>\r\n            <div className=\"clearboth\"></div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            \"content\" +\r\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\r\n            (this.props.ctFullWidth ? \" content-full-width\" : \"\") +\r\n            (this.props.ctTextCenter ? \" text-center\" : \"\") +\r\n            (this.props.tableFullWidth ? \" table-full-width\" : \"\")\r\n          }\r\n        >\r\n          {this.props.content}\r\n        </div>\r\n        {this.props.stats !== undefined || this.props.legend !== undefined ? (\r\n          <div\r\n            className={\r\n              \"footer\" + (this.props.ftTextCenter ? \" text-center\" : \"\")\r\n            }\r\n          >\r\n            {this.props.legend !== undefined ? (\r\n              <div className=\"legend\">{this.props.legend}</div>\r\n            ) : null}\r\n            {this.props.stats !== undefined ? <hr /> : null}\r\n            {this.props.stats !== undefined ? (\r\n              <div className=\"stats\">{this.props.stats}</div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","module.exports = __webpack_public_path__ + \"static/media/full-screen-image-3.ef9c8d65.jpg\";","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from '../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\nimport Web3 from 'web3';\r\nimport Uniswap from '../web3/Uniswap';\r\nimport dYdXLong from '../web3/dYdXLong';\r\nimport dYdXShort from '../web3/dYdXShort';\r\nimport GammaOptions from '../web3/GammaOptions';\r\nimport Manual from '../web3/Manual';\r\nimport UniswapV3 from '../web3/UniswapV3';\r\nimport PositionChartCard from \"./positions/PositionChartCard\";\r\nimport { clone, debalanceETH, debalanceDAI } from '../web3/common.js';\r\nimport { CoinGeckoPrices } from '../web3/CoinGeckoPrices.js';\r\nimport { \r\n  uniswapdYdXTest, \r\n  dydxShortTest, \r\n  callOptionTest, \r\n  putOptionTest,\r\n  uniswapv3Test\r\n } from '../web3/templates/positions.js';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nclass PositionsView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.hideChartDialog = this.hideChartDialog.bind(this);\r\n    this.loadWeb3 = this.loadWeb3.bind(this);\r\n    this.loadWeb3Account = this.loadWeb3Account.bind(this);\r\n    this.addService = this.addService.bind(this);\r\n\r\n    // OLD WAY: load web3\r\n    //let web3;\r\n    //if (typeof window.web3 !== \"undefined\") {\r\n    //  web3 = this.loadWeb3();\r\n    //}\r\n\r\n\r\n\r\n    this.state = {\r\n      //data: null,\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null,\r\n      isChartDialogShown: false,\r\n      web3DataLoaded: false,\r\n      selectedPosition: null\r\n    };\r\n  }\r\n  \r\n  async componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n\r\n    // OLD WAY: load account\r\n    //const web3 = this.state.web3;\r\n    //if (web3) {\r\n    //  const userAccount = await this.loadWeb3Account(web3);\r\n    //  this.setState({\r\n    //    account: userAccount\r\n    //  });\r\n    //}\r\n\r\n    const providerOptions = {\r\n      /* See Provider Options Section */\r\n      walletconnect: {\r\n        package: WalletConnectProvider, // required\r\n        options: {\r\n          infuraId: \"1e22b4bd561c46ada64b5690d1fbb261\" // required\r\n        }\r\n      }\r\n    };\r\n    \r\n    const web3Modal = new Web3Modal({\r\n      network: \"mainnet\", // optional\r\n      cacheProvider: true, // optional\r\n      providerOptions // required\r\n    });\r\n    \r\n    const provider = await web3Modal.connect();\r\n    \r\n    const web3 = new Web3(provider);\r\n\r\n    // Subscribe to accounts change\r\n    provider.on(\"accountsChanged\", (accounts: string[]) => {\r\n      console.log(\"accountsChanged: \" + accounts);\r\n    });\r\n\r\n    // Subscribe to chainId change\r\n    provider.on(\"chainChanged\", (chainId: number) => {\r\n      console.log(\"chainChanged: \" + chainId);\r\n    });\r\n\r\n    // Subscribe to provider connection\r\n    provider.on(\"connect\", (info: { chainId: number }) => {\r\n      console.log(\"connect: \" + info);\r\n    });\r\n\r\n    // Subscribe to provider disconnection\r\n    provider.on(\"disconnect\", (error: { code: number; message: string }) => {\r\n      console.log(\"disconnect: \" + error);\r\n    });\r\n\r\n    console.log(\"web3\")\r\n    console.log(web3)\r\n    this.setState({\r\n      web3: web3,\r\n      account: await this.loadWeb3Account(web3)\r\n    });\r\n  }\r\n\r\n  loadWeb3() {\r\n    let web3;\r\n    if (typeof global.window !== \"undefined\") {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        web3 = new Web3(window.ethereum);\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (typeof global.window.web3 !== \"undefined\") {\r\n        // Use Mist/MetaMask's provider\r\n        web3 = new Web3(window.web3.currentProvider);\r\n      } else {\r\n        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\r\n        web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\r\n      }\r\n    }\r\n\r\n    return web3;\r\n  };\r\n  \r\n  async loadWeb3Account(web3) {\r\n    try {\r\n      await window.ethereum.enable();\r\n      const accounts = await web3.eth.getAccounts();\r\n      return accounts[0];\r\n    } catch (e) {\r\n      console.error(\"Unable to load web3 account. Please enable web3 wallet in your browser. Message: \" + e.getMessage());\r\n    }\r\n  };\r\n\r\n  async componentDidUpdate() {\r\n    if (this.props.userModel && this.props.userModel.positions && Array.isArray(this.props.userModel.positions) && this.state.web3) {\r\n      // call only once\r\n      if (!this.state.web3DataLoaded) {\r\n        console.log(\"Loading web3 data and setting up data for table\")\r\n        this.setState({\r\n          web3DataLoaded: true\r\n        });\r\n        // NOTE: here I can create JSON objects and append to positions\r\n        let appendedPositions = [...this.props.userModel.positions, uniswapv3Test];\r\n        //let appendedPositions = [this.props.userModel.positions[6], uniswapv3Test];\r\n        //let appendedPositions = [callOptionTest, uniswapdYdXTest, dydxShortTest, this.props.userModel.positions[0]];\r\n\r\n        // get live market data from smart contracts via web3\r\n        await this.loadWeb3Data(appendedPositions);\r\n\r\n        // calculate data for table\r\n        let tableData = await this.prepareTableData(appendedPositions);\r\n\r\n        // update table\r\n        this.setState({\r\n          data: tableData,\r\n          selectedPosition: appendedPositions[0]\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadWeb3Data(positions) {\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        await this.addService(pos, subpos);\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  async addService(pos, subpos) {\r\n    let service;\r\n    switch (subpos.type) {\r\n      case \"uniswap\":\r\n        service = new Uniswap(subpos.marketAddress, pos.base.address, pos.under.address, subpos.liq.start);\r\n        break;\r\n      case \"dydx-long\":\r\n        service = new dYdXLong(subpos.under.start, subpos.borrowedBASE, subpos.boughtUNDER, subpos.openingPrice);\r\n        break;\r\n      case \"dydx-short\":\r\n        service = new dYdXShort(subpos.base.start, subpos.borrowedUNDER, subpos.boughtBASE, subpos.openingPrice);\r\n        break;\r\n      case \"option\":\r\n        service = new GammaOptions(subpos.isCall, subpos.isLong, subpos.quantity, subpos.strike, subpos.daysToExpiry, subpos.iv);\r\n        break;\r\n      case \"manual\":\r\n        service = new Manual(subpos.base.start, subpos.base.extra, subpos.under.start, subpos.under.extra);\r\n        break;\r\n      case \"uniswapv3\":\r\n        service = new UniswapV3(subpos.base.start, subpos.under.start, pos.entryPrice, subpos.minPrice, subpos.maxPrice, subpos.feeInPercent);\r\n        break;\r\n    }\r\n\r\n    await service.getMarketData(this.state.web3, pos);\r\n    console.log(service)\r\n    // todo: dirty adding to position\r\n    subpos.service = service;\r\n  }\r\n\r\n  async prepareTableData(positions) {\r\n    let uniswapTableSet = [];\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      // time \r\n      let startDate = new Date(pos.startDate);\r\n      let daysSinceStart = (new Date() - startDate) / (1000 * 60 * 60 * 24);\r\n\r\n      // find uniswap market\r\n      let market, currentPrice;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        if(subpos.type === \"uniswap\") {\r\n          market = clone(subpos.service);\r\n          currentPrice = market.getPrice();\r\n        }\r\n      }\r\n\r\n      // if there is no uniswap market, use coingecko api\r\n      if(!market) {\r\n        //let priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address);\r\n        //let priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address);\r\n        //console.log(priceUNDERUSD)\r\n        market = {\r\n          priceBASEUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address),\r\n          priceUNDERUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address)\r\n        }\r\n        currentPrice = market.priceUNDERUSD / market.priceBASEUSD;\r\n      }\r\n\r\n\r\n      let totalInBASE = 0, totalOutBASE = 0;//, startBASE = 0, startUNDER = 0;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        // calculate Ins\r\n        totalInBASE += subpos.base.start + subpos.under.start * currentPrice;\r\n\r\n        // calculate Outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * currentPrice;\r\n        totalOutBASE += subpos.service.getCurrentValue(currentPrice)[0] + extraBASE; \r\n      }\r\n\r\n      // today\r\n      let profitTodayToken = totalOutBASE - totalInBASE;\t\t\t\t\r\n      let profitPerMonthTodayToken = profitTodayToken * 30.4167 / daysSinceStart;\t\t\t\t\t\t\r\n      let aprToday = profitTodayToken / totalInBASE / daysSinceStart * 365 * 100;\t\r\n\r\n      let subpos = pos.subpositions[0];\r\n\r\n      // target UNDER\r\n      // default is if there is only one asset on opening\r\n      let targetPriceUNDER = currentPrice;\r\n      let targetProfitUNDER = profitTodayToken / currentPrice;\r\n      let profitPerMonthTargetUNDER = profitPerMonthTodayToken / currentPrice;\r\n      let aprTargetUNDER = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitUNDER = this.findMaxUNDER(pos);\r\n        targetPriceUNDER = priceAndProfitUNDER[0];\r\n        targetProfitUNDER = priceAndProfitUNDER[1];\r\n        let targetHodlUNDER = priceAndProfitUNDER[2];\r\n        profitPerMonthTargetUNDER = targetProfitUNDER * 30.4167 / daysSinceStart;\t\r\n        aprTargetUNDER = targetProfitUNDER / targetHodlUNDER / daysSinceStart * 365 * 100;\r\n      } \r\n\r\n      // target BASE\r\n      // default is if there is only one asset on opening\r\n      let targetPriceBASE = currentPrice;\r\n      let targetProfitBASE = profitTodayToken;\r\n      let profitPerMonthTargetBASE = profitPerMonthTodayToken;\r\n      let aprTargetBASE = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitBASE = this.findMaxBASE(pos);\r\n        targetPriceBASE = priceAndProfitBASE[0];\r\n        targetProfitBASE = priceAndProfitBASE[1];\r\n        let targetHodlBASE = priceAndProfitBASE[2];\r\n        console.log(\"targetHodlBASE: \" + targetHodlBASE)\r\n        profitPerMonthTargetBASE = targetProfitBASE * 30.4167 / daysSinceStart;\t\r\n        aprTargetBASE = targetProfitBASE / targetHodlBASE / daysSinceStart * 365 * 100;\r\n      } \r\n            \r\n      // profits in (USD)\r\n      let profitTargetETHUSD = targetProfitUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? targetProfitBASE * market.priceBASEUSD : targetProfitBASE / targetPriceBASE * market.priceUNDERUSD;\r\n      let profitPerMonthTargetETHUSD = profitPerMonthTargetUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitPerMonthTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? profitPerMonthTargetBASE * market.priceBASEUSD : profitPerMonthTargetBASE / targetPriceBASE * market.priceUNDERUSD;\r\n\r\n      pos.maxProfitTargetUSD = Math.max(profitTargetETHUSD, profitTargetTokenUSD);\r\n      pos.maxProfitPerMonthTargetUSD = Math.max(profitPerMonthTargetTokenUSD, profitPerMonthTargetETHUSD);\r\n\r\n      // prepare dataset for table\r\n      uniswapTableSet.push({\r\n        id: pos,\r\n        position: [pos.name, pos.description, pos.address], \r\n        sizedays: {\r\n          size: [totalOutBASE * market.priceBASEUSD, \"USD\"],\r\n          days: [daysSinceStart.toFixed(0), \"days\"],\r\n        },\r\n        price: {\r\n          lower: [targetPriceUNDER, pos.base.symbol],\r\n          current: [currentPrice, pos.base.symbol],\r\n          higher: [targetPriceBASE, pos.base.symbol]\r\n        },\r\n        totalprofit: {\r\n          lower: [targetProfitUNDER, pos.under.symbol, profitTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitTodayToken, \"USD\", market.priceBASEUSD * profitTodayToken],\r\n          higher: [targetProfitBASE, pos.base.symbol, profitTargetTokenUSD]\r\n        },\r\n        monthlyprofit: {\r\n          lower: [profitPerMonthTargetUNDER, pos.under.symbol, profitPerMonthTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitPerMonthTodayToken, \"USD\", market.priceBASEUSD * profitPerMonthTodayToken],\r\n          higher: [profitPerMonthTargetBASE, pos.base.symbol, profitPerMonthTargetTokenUSD]\r\n        },\r\n        apr: {\r\n          lower: [aprTargetUNDER, \"%\"],\r\n          current: [aprToday, \"%\"],\r\n          higher: [aprTargetBASE, \"%\"]\r\n        },\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isChartDialogShown: false, // todo: maybe enable later\r\n                  selectedPosition: positions[i]\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fas fa-chart-area\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                //this.props.setEditedTransaction(this.state.data[key].id);\r\n                //this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  //removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n    return uniswapTableSet;\r\n  }\r\n\r\n  findMaxBASE(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceBASE = -100000000000;\r\n    let maxProfitBASE = -100000000000;\r\n    let maxTotalHodlBASE = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutBASE = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        totalOutBASE += subpos.service.getCurrentValue(i)[0] + extraBASE;\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalanced = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" UNDER + \" + debalanced[1].toFixed(4) + \" BASE\");\r\n      if(maxBalanceBASE < debalanced[1]) {\r\n        maxBalanceBASE = debalanced[1];\r\n        maxProfitBASE = debalanced[1] - startBASE;\r\n        maxPrice = i;\r\n        maxTotalHodlBASE = startBASE + startUNDER * maxPrice;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitBASE, maxTotalHodlBASE];\r\n  }\r\n\r\n  findMaxUNDER(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceUNDER = -100000000000;\r\n    let maxProfitUNDER = -100000000000;\r\n    let maxTotalHodlUNDER = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraUNDER = subpos.under.extra + subpos.base.extra / i;\r\n        totalOutUNDER += subpos.service.getCurrentValue(i)[1] + extraUNDER;\r\n      }\r\n\r\n      // debalance for max UNDER\r\n      let debalanced = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" ETH + \" + debalanced[1].toFixed(4) + \" COMP\");\r\n      if(maxBalanceUNDER < debalanced[0]) {\r\n        maxBalanceUNDER = debalanced[0];\r\n        maxProfitUNDER = debalanced[0] - startUNDER;\r\n        maxPrice = i;\r\n        maxTotalHodlUNDER = startBASE / maxPrice + startUNDER;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitUNDER, maxTotalHodlUNDER];\r\n  }\r\n\r\n  getTotalProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitTargetUSD;\r\n      } \r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getMonthlyProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitPerMonthTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitPerMonthTargetUSD;\r\n      }\r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getSumFooter(rows, columnName, subName, index) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row[columnName][subName][index];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  displayDescription = (description) => {\r\n    return (description ? description.text : null)\r\n  };\r\n\r\n  displayLinks = (description) => {\r\n    if(description) {\r\n      return (\r\n        description.links.map((link, key) => {\r\n          return (\r\n            <span key={key}>\r\n              <a href={link.link}>{link.anchor}</a>{\" \"}\r\n            </span>\r\n          );\r\n        })\r\n      )\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { \r\n        Header: \"Position\", accessor: \"position\", maxWidth: 550, style: { 'whiteSpace': 'unset' },\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Cell: row => {\r\n          return (\r\n            <span style={{ float: \"left\" }}>\r\n              <b>{row.value[0]}</b><br></br>\r\n              {this.displayDescription(row.value[1])}<br></br>\r\n              {this.displayLinks(row.value[1])}\r\n              <a href={\"https://zapper.fi/dashboard?address=\" + row.value[2]}>Zap</a>\r\n            </span>\r\n          )\r\n        },\r\n      },\r\n      { \r\n        Header: \"Size/Days\", accessor: \"sizedays\", maxWidth: 120, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {\"$\" + formatUtils.formatNumber(row.value.size[0], 0)}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.days[0], 0) + \" \" + row.value.days[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"sizedays\", \"size\", 0), 0) + \" \" + rows.data[0][\"sizedays\"][\"size\"][1]}\r\n            </strong>\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }\r\n      },\r\n      { \r\n        Header: \"Price\", accessor: \"price\", maxWidth: 130, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \" \" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \" \" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \" \" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              @current\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              @target\r\n              </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Total Profit\", accessor: \"totalprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"totalprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getTotalProfitSum(), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Monthly Profit\", accessor: \"monthlyprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum(), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"APR\", accessor: \"apr\", maxWidth: 70, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \"\" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \"\" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \"\" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b - a; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0) * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum() * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false \r\n      }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  hideChartDialog() {\r\n    this.setState({\r\n      isChartDialogShown: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      123 help\r\n    </Tooltip>;\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my opened positions?\"\r\n                rightSection={\r\n                  <span>\r\n                    <Button\r\n                      // was like this for without color\r\n                      //simple\r\n                      bsStyle=\"info\"\r\n                      fill\r\n                      special   \r\n                      onClick={() => this.props.showAddTradeDialog()}\r\n                    >\r\n                      <i className={\"fa fa-plus\"} /> Add trade\r\n                    </Button>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                      <Button\r\n                        bsStyle=\"default\"\r\n                        special // for share button: fa fa-share-alt\r\n                        //speciallarge \r\n                        //pullRight\r\n                        simple\r\n                      >\r\n                        <i className={\"fa fa-question-circle\"} /> Help \r\n                      </Button> \r\n                    </OverlayTrigger>\r\n                  </span>\r\n                }\r\n                category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n                content={this.state.data ? \r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                : null}\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <PositionChartCard \r\n                selectedPosition={this.state.selectedPosition}\r\n                userModel={this.props.userModel}\r\n                resModel={this.props.resModel}\r\n                addService={this.addService}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionsView;\r\n","import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\nimport uniswapABI from \"../abis/uniswapABI.json\";\r\nimport daiABI from \"../abis/daiABI.json\";\r\nimport { usdcAddress, wbtcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class Uniswap {\t\t\r\n\tconstructor(marketAddress, addressBASE, addressUNDER, myLIQ) {\r\n\t\tthis.marketAddress = marketAddress;\r\n\t\tthis.addressBASE = addressBASE;\r\n\t\tthis.addressUNDER = addressUNDER;\r\n\t\tthis.feeInPercent = 0.3;\r\n\r\n\t\t// my position\r\n\t\tthis.myBASE = 0;\r\n\t\tthis.myUNDER = 0;\r\n\t\tthis.myLIQ = myLIQ;\r\n\r\n\t\t// pool \r\n\t\tthis.poolBASE = 0;\r\n\t\tthis.poolUNDER = 0;\r\n\t\tthis.poolLIQ = 0;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tlet marketInstance = getContractInstance(web3, uniswapABI, this.marketAddress);\r\n\t\tlet baseInstance = getContractInstance(web3, daiABI, this.addressBASE);\r\n\t\tlet underInstance = getContractInstance(web3, daiABI, this.addressUNDER);\r\n\r\n\t\tlet ethBalance = await web3.eth.getBalance(this.marketAddress);\r\n\t\tlet poolLIQ = await marketInstance.methods.totalSupply().call();\r\n\t\tlet poolBASE = await baseInstance.methods.balanceOf(this.marketAddress).call();\r\n\t\tlet poolUNDER = await underInstance.methods.balanceOf(this.marketAddress).call();\r\n\r\n\t\t// if pool is using eth instead of weth\r\n\t\tif(poolUNDER / 10 ** 18 === 0 && ethBalance / 10 ** 18 > 0) {\r\n\t\t\tpoolUNDER = ethBalance;\r\n\t\t}\r\n\r\n\t\t// save to position\r\n\t\tthis.poolUNDER = poolUNDER / 10 ** this.getDecimals(this.addressUNDER); \r\n\t\tthis.poolLIQ = poolLIQ / 10 ** 18; \r\n\t\tthis.poolBASE = poolBASE / (this.addressBASE !== usdcAddress ? 10 ** 18 : 10 ** 6);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\t//this.priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\t//this.priceLIQBASE = this.poolBASE / this.poolLIQ;\r\n\t\t//this.priceUNDERBASE = this.poolBASE / this.poolUNDER;\r\n\r\n\t\tthis.priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressBASE);\r\n\t\tthis.priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressUNDER);\r\n\r\n\t\tconsole.log(\"AMM market data loaded. \" + position.base.symbol + \": \" + this.priceBASEUSD + \" USD, \" + position.under.symbol + \": \" + this.priceUNDERUSD + \" USD\");\r\n\t}\r\n\r\n\tgetDecimals() {\r\n\t\tif(this.addressUNDER === usdcAddress) {\r\n\t\t\treturn 6;\r\n\t\t} else if (this.addressUNDER === wbtcAddress) {\r\n\t\t\treturn 8;\r\n\t\t}\r\n\r\n\t\treturn 18;\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price. \r\n\t// Moves price to newPrice, calculates, and later returns market to \r\n\tgetCurrentValue(newPrice) {\r\n\t\t// get old price, move to new price\r\n\t\tlet oldPrice = this.getPrice();\r\n\t\tthis.setMarketPrice(newPrice);\r\n\r\n\t\tlet myShare = this.myLIQ / this.poolLIQ;\r\n\t\tlet myBASE = this.poolBASE * myShare + this.poolUNDER * myShare * newPrice;\r\n\t\tlet myUNDER = myBASE / newPrice;\r\n\r\n\t\t// back to old price\r\n\t\tthis.setMarketPrice(oldPrice);\r\n\r\n\t\treturn [myBASE, myUNDER];\r\n\t}\r\n\r\n\taddLiquidity(exactUNDER, exactBASE) {\r\n\t\tlet exactLIQ = exactUNDER * (this.poolLIQ / this.poolUNDER);\r\n\t\t//console.log(\"Pool before: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.poolLIQ += exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\treturn exactLIQ;\r\n\t}\r\n\t\r\n\tremoveLiquidity(exactLIQ) {\r\n\t\tlet priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\tlet priceLIQDAI = this.poolBASE / this.poolLIQ;\r\n\t\tlet exactUNDER = exactLIQ * priceLIQUNDER;\r\n\t\tlet exactBASE = exactLIQ * priceLIQDAI;\r\n\t\t//console.log(\"Pool before: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\tthis.poolUNDER -= exactUNDER;\r\n\t\tthis.poolBASE -= exactBASE;\r\n\t\tthis.poolLIQ -= exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\treturn [exactUNDER, exactBASE];\r\n\t}\r\n\r\n\tbuyUNDER(exactBASE) {\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactUNDER = Math.abs(this.k / (this.poolBASE + exactBASE) - this.poolUNDER);\r\n\t\t\t\t\t\t\r\n\t\t// apply fee\r\n\t\tlet exactUNDERWithFees = exactUNDER * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER -= exactUNDERWithFees;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactUNDERWithFees;\r\n\t}\r\n\r\n\tsellUNDER(exactUNDER) {\t\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactBASE = Math.abs(this.k / (this.poolUNDER + exactUNDER) - this.poolBASE);\r\n\t\t\r\n\t\t// apply fee\r\n\t\tlet exactBASEWithFees = exactBASE * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE -= exactBASEWithFees;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactBASEWithFees;\r\n\t}\r\n\r\n\tgetInputPrice(inputAmount, inputPool, outputPool) {\r\n\t\treturn (inputAmount * outputPool) / (inputPool + inputAmount);\r\n\t}\r\n\r\n\t// helper method to set new price\r\n\tsetMarketPrice(newPrice) {\r\n\t\tlet k = this.poolBASE * this.poolUNDER;\r\n\t\tthis.poolUNDER = Math.sqrt(k / newPrice);\r\n\t\tthis.poolBASE = Math.sqrt(k * newPrice);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t}\r\n\r\n\tgetPrice() {\r\n\t\treturn this.poolBASE / this.poolUNDER;\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXLong {\t\t\r\n\tconstructor(collateralUNDER, borrowedBASE, boughtUNDER, openingPrice) {\r\n\t\tthis.collateralUNDER = collateralUNDER;\r\n\t\tthis.borrowedBASE = borrowedBASE;\r\n\t\tthis.boughtUNDER = boughtUNDER;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXLong market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = (this.collateralUNDER + this.boughtUNDER) * currentPrice - this.borrowedBASE;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXShort {\t\t\r\n\tconstructor(collateralBASE, borrowedUNDER, boughtBASE, openingPrice) {\r\n\t\tthis.collateralBASE = collateralBASE;\r\n\t\tthis.borrowedUNDER = borrowedUNDER;\r\n\t\tthis.boughtBASE = boughtBASE;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXShort market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.collateralBASE + this.boughtBASE - this.borrowedUNDER * currentPrice;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","import { OptionMath } from './common.js'\r\nexport default class GammaOptions {\t\t\r\n\tconstructor(isCall, isLong, quantity, strike, daysToExpiry, iv) {\r\n\t\tthis.isCall = isCall;\r\n\t\tthis.isLong = isLong;\r\n\t\tthis.quantity = quantity;\r\n\t\tthis.strike = strike;\r\n\t\tthis.daysToExpiry = daysToExpiry;\r\n\t\tthis.iv = iv;\r\n\t\tthis.optionMath = new OptionMath(); \r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"GammaOptions market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet currentValueBASE = this.quantity * this.optionMath.blackScholes(this.isCall ? 'call' : 'put', currentPrice, this.strike, this.daysToExpiry / 365, 0.02, this.iv / 100);\r\n\t\t//console.log(\"optionBASE: \" + optionBASE);\r\n\t\treturn [currentValueBASE, currentValueBASE / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class Manual {\t\t\r\n\tconstructor(startBASE, extraBASE, startUNDER, extraUNDER) {\r\n\t\tthis.startBASE = startBASE;\r\n\t\tthis.extraBASE = extraBASE;\r\n\t\tthis.startUNDER = startUNDER;\r\n\t\tthis.extraUNDER = extraUNDER;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"Manual market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.startBASE + this.startUNDER * currentPrice;\r\n\t\treturn [positionBASE, positionBASE / currentPrice];\r\n\t}\r\n}\t\t\r\n","//import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\n//import uniswapABI from \"../abis/uniswapABI.json\";\r\n//import daiABI from \"../abis/daiABI.json\";\r\n//import { usdcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class UniswapV3 {\t\t\r\n\tconstructor(myBASE, myUNDER, openingPrice, minPrice, maxPrice, feeInPercent) {\r\n\t\tthis.myBASE = myBASE;             // user invested in BASE\r\n\t\tthis.myUNDER = myUNDER;           // user invested in UNDER\r\n\t\tthis.openingPrice = openingPrice; // price when liq position is opened\r\n\t\tthis.minPrice = minPrice;\r\n\t\tthis.maxPrice = maxPrice;\r\n\t\tthis.feeInPercent = feeInPercent;\r\n\r\n\t\t// total in BASE amd total in UNDER\r\n\t\tthis.openingTotalBASE = myBASE + myUNDER * openingPrice;\r\n\r\n\t\tthis.token1V2 = this.openingTotalBASE / 2;\r\n\t\tthis.token2V2 = this.token1V2 / openingPrice;\r\n\t\tthis.L = Math.sqrt(this.token1V2 * this.token2V2);\r\n\t\tthis.L2 = this.token1V2 * this.token2V2;\r\n\t\tthis.T = this.L * Math.sqrt(minPrice);\r\n\t\tthis.H = this.L / Math.sqrt(maxPrice);\r\n\t\tthis.maxToken2 = this.L2 / this.H - this.T;\r\n\t\tthis.maxToken1 = this.L2 / this.T - this.H;\r\n\t\tthis.LP_a = openingPrice > maxPrice ? 0 : (this.L / Math.sqrt(openingPrice) - this.H) * openingPrice;\r\n\t\tthis.LP_b = openingPrice > maxPrice ? this.maxToken2 : this.L * Math.sqrt(openingPrice) - this.T;\r\n\t\tthis.LP = this.LP_a + this.LP_b;\r\n\t\tthis.multiplier = openingPrice > minPrice ? this.openingTotalBASE / this.LP : this.openingTotalBASE / (openingPrice * this.maxToken1);\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tconsole.log(\"UniswapV3 market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price \r\n\tgetCurrentValue(newPrice) {\r\n\t\tlet x, y, value; // x is BASE. y is UNDER\r\n\t\tif (newPrice < this.minPrice) {\r\n\t\t\tx = this.maxToken1 * this.multiplier;\r\n\t\t\ty = 0;\r\n\t\t\tvalue = x * newPrice;\r\n\t\t} else if (newPrice >= this.minPrice && newPrice <= this.maxPrice) {\r\n\t\t\tx = (this.L / Math.sqrt(newPrice) - this.H) * this.multiplier;\r\n\t\t\ty = (this.L * Math.sqrt(newPrice) - this.T) * this.multiplier;\r\n\t\t\tvalue = x * newPrice + y;\r\n\t\t} else if (newPrice > this.maxPrice) {\r\n\t\t\tx = 0;\r\n\t\t\ty = this.maxToken2 * this.multiplier;\r\n\t\t\tvalue = y;\r\n\t\t}\r\n\r\n\t\treturn [value, value / newPrice];\r\n\t}\r\n}\t\t\r\n","const dai = {\r\n  address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n  symbol: \"DAI\"\r\n}\r\nconst eth = {\r\n  address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n  symbol: \"ETH\"\r\n}\r\n\r\nexport const uniswapdYdXTest = {\r\n  name: \"(T) Uniswap + DYDX LONG 1x\",\r\n  startDate: \"2021-02-14T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 1800,\r\n  subpositions: [\r\n    {\r\n      type: \"uniswap\",\r\n      marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n      base: {\r\n        start: 1800,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 1,\r\n        extra: 0\r\n      },\r\n      liq: {\r\n        start: 30.67,\r\n        extra: 0\r\n      }\r\n    },\r\n    {\r\n      type: \"dydx-long\",\r\n      base: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 1,\r\n        extra: 0\r\n      },\r\n      borrowedBASE: 1800, \r\n      boughtUNDER: 1, \r\n      openingPrice: 1800\r\n    }\r\n  ]\r\n}\r\n\r\nexport const dydxShortTest = {\r\n  name: \"(T) DYDX SHORT 1x\",\r\n  startDate: \"2021-02-14T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 1800,\r\n  subpositions: [\r\n    {\r\n      type: \"dydx-short\",\r\n      base: {\r\n        start: 1800,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      borrowedUNDER: 1,\r\n      boughtBASE: 1800,\r\n      openingPrice: 1800\r\n    }\r\n  ]\r\n}\r\n\r\nexport const callOptionTest = {\r\n  name: \"(T) C3200 26 days\",\r\n  startDate: \"2021-05-01T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 2900,\r\n  subpositions: [\r\n    {\r\n      type: \"option\",\r\n      base: {\r\n        start: 183,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      isCall: true, \r\n      isLong: true, \r\n      quantity: 1, \r\n      strike: 3200,\r\n      daysToExpiry: 26,\r\n      iv: 86\r\n    },\r\n  ]\r\n}\r\n\r\nexport const putOptionTest = {\r\n  name: \"(T) P2000 Month away\",\r\n  startDate: \"2021-05-01T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 2800,\r\n  subpositions: [\r\n    {\r\n      type: \"option\",\r\n      base: {\r\n        start: 1000,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      isCall: false, \r\n      isLong: true, \r\n      quantity: 1, \r\n      strike: 2000,\r\n      daysToExpiry: 30,\r\n      iv: 90\r\n    },\r\n  ]\r\n}\r\n\r\nexport const uniswapv3Test = {\r\n  name: \"(T) Uniswap V3 + Puts\",\r\n  startDate: \"2021-05-03T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 3900,\r\n  subpositions: [\r\n    {\r\n      type: \"uniswapv3\",\r\n      base: {\r\n        start: 1000,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      minPrice: 3900 * 0.8, \r\n      maxPrice: 3900 * 1.2, \r\n      feeInPercent: 0.3\r\n    },\r\n    {\r\n      type: \"option\",\r\n      base: {\r\n        start: 107,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      isCall: false, \r\n      isLong: true, \r\n      quantity: 0.27, \r\n      strike: 3900,\r\n      daysToExpiry: 30,\r\n      iv: 90,\r\n      openingPrice: 3900,\r\n    }\r\n  ]\r\n}","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { \r\n  Col, \r\n  Row\r\n} from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass AddSubpositionCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedType: { value: 'uniswap', label: 'uniswap' }\r\n    }\r\n  }\r\n\r\n  getTypes() {\r\n    return this.props.types.map((type, index) => {\r\n      return { value: type, label: type };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={'Add New'}\r\n        content={\r\n          <div>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div className=\"table-responsive\">\r\n                  <h5>Select subposition</h5>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n              <Select\r\n                placeholder=\"Type\"\r\n                name=\"type\"\r\n                value={this.state.selectedType}\r\n                options={this.getTypes()}\r\n                onChange={value => {\r\n                  this.setState({ selectedType: value });\r\n                }}\r\n              />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Button\r\n                  bsStyle=\"info\"\r\n                  fill\r\n                  //special   \r\n                  onClick={() => this.props.addSubposition(this.state.selectedType.value)}\r\n                >\r\n                  <i className={\"fa fa-plus\"} /> Add subposition\r\n                </Button> \r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSubpositionCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass UniswapV2Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.start = Number(newValue);\r\n    subpos.service.myLIQ = Number(newValue) + subpos.liq.extra;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.extra = Number(newValue);\r\n    subpos.service.myLIQ = subpos.liq.start + Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'UniswapV2'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.extra}\r\n                onChange={(event) => this.onChangeExtraBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.extra}\r\n                onChange={(event) => this.onChangeExtraUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.start}\r\n                onChange={(event) => this.onChangeStartLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.extra}\r\n                onChange={(event) => this.onChangeExtraLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              APR [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"%\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={20}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    customMin: Number(event.target.value)\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default UniswapV2Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXLongCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    subpos.service.collateralUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedBASE = Number(newValue);\r\n    subpos.service.borrowedBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtUNDER = Number(newValue);\r\n    subpos.service.boughtUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'dYdX Long'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.borrowedBASE}\r\n                onChange={(event) => this.onChangeBorrowedBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.boughtUNDER}\r\n                onChange={(event) => this.onChangeBoughtUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXLongCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXShortCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    subpos.service.collateralBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedUNDER = Number(newValue);\r\n    subpos.service.borrowedUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtBASE = Number(newValue);\r\n    subpos.service.boughtBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'dYdX Short'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.borrowedUNDER}\r\n                onChange={(event) => this.onChangeBorrowedUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.boughtBASE}\r\n                onChange={(event) => this.onChangeBoughtBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXShortCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass GammaOptionsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIsCall(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.isCall = newValue === 'C';\r\n    subpos.service.isCall = newValue === 'C';\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeQuantity(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.quantity = Number(newValue);\r\n    subpos.service.quantity = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStrike(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.strike = Number(newValue);\r\n    subpos.service.strike = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeDaysToExpiry(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.daysToExpiry = Number(newValue);\r\n    subpos.service.daysToExpiry = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIV(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.iv = Number(newValue);\r\n    subpos.service.iv = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'Gamma Options'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Call or Put:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"text\"\r\n                value={this.props.subposition.isCall ? 'C' : 'P'}\r\n                onChange={(event) => this.onChangeIsCall(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Quantity:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.quantity}\r\n                onChange={(event) => this.onChangeQuantity(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Strike:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.strike}\r\n                onChange={(event) => this.onChangeStrike(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Days to expiry:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.daysToExpiry}\r\n                onChange={(event) => this.onChangeDaysToExpiry(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              IV [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.iv}\r\n                onChange={(event) => this.onChangeIV(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default GammaOptionsCard;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport { \r\n  Tooltip, \r\n  OverlayTrigger,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl\r\n } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport AddSubpositionCard from \"./AddSubpositionCard.jsx\";\r\nimport UniswapV2Card from \"./subpositions/UniswapV2Card.jsx\";\r\nimport DYDXLongCard from \"./subpositions/DYDXLongCard.jsx\";\r\nimport DYDXShortCard from \"./subpositions/DYDXShortCard.jsx\";\r\nimport GammaOptionsCard from \"./subpositions/GammaOptionsCard.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { debalanceETH, debalanceDAI, clone } from '../../web3/common.js';\r\n\r\nclass PositionChartCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chartLoaded: false,\r\n      chartData: [Math.random() * 5, 2, 1],\r\n      customMin: 100,\r\n      customMax: 3000\r\n    };\r\n\r\n    this.addSubposition = this.addSubposition.bind(this);\r\n    this.updateSubposition = this.updateSubposition.bind(this);\r\n    this.removeSubposition = this.removeSubposition.bind(this);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    \r\n    if (this.userModelLoaded() && this.props.selectedPosition) {\r\n      // set customPosition if there is a change in props\r\n      if(prevProps.selectedPosition !== this.props.selectedPosition) {\r\n        console.log(\"setting customPosition\")\r\n        this.setState({\r\n          customPosition: clone(this.props.selectedPosition)\r\n        });\r\n      } else {\r\n        // refresh chart if customPosition is updated\r\n        if(prevState.customPosition !== this.state.customPosition) {\r\n          console.log(\"refreshing chart\")\r\n          this.refreshChart();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  userModelLoaded() {\r\n    let userModel = this.props.userModel;\r\n    return userModel && userModel.positions && Array.isArray(userModel.positions);\r\n  }\r\n\r\n  refreshChart() {\r\n    console.log(\"Refreshing chart data. Position: \");\r\n    let pos = this.state.customPosition;   \r\n    console.log(pos)\r\n    \r\n    // time \r\n    let daysSinceStart = (new Date() - new Date(pos.startDate)) / (1000 * 60 * 60 * 24);\r\n    \r\n    let chartWindow = this.getChartWindow(pos);\r\n    let currentPrice = 0;\r\n    let startPrice = chartWindow.step * 25;\r\n    let endPrice = chartWindow.right;\t\r\n    let step = chartWindow.step;\t\r\n    let aprsBASE = [], profitsBASE = [], profitsUNDER = [];\r\n    for(let i = startPrice; i < endPrice; i += step) {\r\n      let totalOutBASE = 0, totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        totalOutBASE += subpos.service.getCurrentValue(i)[0] + extraBASE;\r\n\r\n        let extraUNDER = subpos.base.extra / i + subpos.under.extra;\r\n        totalOutUNDER += subpos.service.getCurrentValue(i)[1] + extraUNDER;\r\n\r\n        if(subpos.type === \"uniswap\") {\r\n          currentPrice = subpos.service.getPrice();\r\n        }\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalancedBASE = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced BASE @\" + i.toFixed(3) + \": \" + debalancedBASE[0].toFixed(4) + \" UNDER + \" + debalancedBASE[1].toFixed(4) + \" BASE\");\r\n      let profitBASE = debalancedBASE[1] - startBASE;\r\n      let hodlBASE = startBASE + startUNDER * i;\r\n      let aprTargetBASE = profitBASE / hodlBASE / daysSinceStart * 365 * 100;\r\n\r\n      // debalance for max UNDER\r\n      let debalancedUNDER = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced UNDER @\" + i.toFixed(3) + \": \" + debalancedUNDER[0].toFixed(4) + \" UNDER + \" + debalancedUNDER[1].toFixed(4) + \" BASE\");\r\n      let profitUNDER = debalancedUNDER[0] - startUNDER;\r\n      //let hodlUNDER = startBASE / i + startUNDER;\r\n      //let aprTargetUNDER = profitUNDER / hodlUNDER / daysSinceStart * 365 * 100;\r\n\r\n      aprsBASE.push({x: i, y: aprTargetBASE});\r\n      profitsBASE.push({x: i, y: profitBASE});\r\n      profitsUNDER.push({x: i, y: profitUNDER});\r\n    }\r\n\r\n    let rangeEdgesBASE = this.getRangePoints(profitsBASE);\r\n    let rangeEdgesUNDER = this.getRangePoints(profitsUNDER);\r\n\r\n\r\n    this.setState({\r\n      chartLoaded: true,\r\n      chartData1: aprsBASE,\r\n      chartData2: profitsBASE,\r\n      chartData3: profitsUNDER,\r\n      rangeEdgesBASE: rangeEdgesBASE, \r\n      rangeEdgesUNDER: rangeEdgesUNDER,\r\n      currentPrice: currentPrice,\r\n      customMin: chartWindow.left,\r\n      customMax: chartWindow.right\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns start, end prices for chart.\r\n   *\r\n   * @param {object}   pos       Position.\r\n   * @return {type} Return value description.\r\n   */\r\n  getChartWindow(pos) {\r\n    let pivot = pos.entryPrice;\r\n    let step;\r\n    if(pivot < 1) {\r\n      step = 0.001;\r\n    } else if(pivot < 10) {\r\n      step = 0.01;\r\n    } else if(pivot < 100) {\r\n      step = 0.1;\r\n    } else if(pivot < 1000) {\r\n      step = 1;\r\n    } else if(pivot < 10000) {\r\n      step = 10;\r\n    } else if(pivot < 100000) {\r\n      step = 100;\r\n    }\r\n\r\n    return {\r\n      left: Number(pivot / 3),\r\n      right: Number(pivot * 4),\r\n      step: step\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns points for range ploting (90%).\r\n   *\r\n   * @param {Array}   profits       Profit points on chart.\r\n   * @return {type} Return value description.\r\n   */\r\n  getRangePoints(profits) {\r\n    // find maximum profit\r\n    let maxProfit = -100000000000;\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(maxProfit < profits[i].y) {\r\n        maxProfit = profits[i].y;\r\n      }\r\n    }\r\n\r\n    console.log(\"maxProfit: \" + maxProfit)\r\n\r\n    let firstPoint = { x: profits[0].x, y: profits[0].y };\r\n    let leftPoint = firstPoint; \r\n    let rightPoint = null, prevPoint;\r\n    // find left and right range edge [90%]\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(leftPoint === firstPoint && profits[i].y >= maxProfit * 0.9) {\r\n        leftPoint = { x: profits[i].x, y: profits[i].y };\r\n      } \r\n      \r\n      if(leftPoint !== firstPoint && rightPoint === null && profits[i].y < maxProfit * 0.9) {\r\n        rightPoint = prevPoint;\r\n      }\r\n\r\n      prevPoint = { x: profits[i].x, y: profits[i].y };\r\n    }\r\n\r\n    if(rightPoint === null) {\r\n      rightPoint = prevPoint;\r\n    }\r\n\r\n    return [leftPoint, rightPoint]\r\n  }\r\n\r\n  getPerformanceChartOptions() {\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'line',\r\n        height: '600'\r\n      },\r\n      title: {\r\n        text: 'APR for position: ' + (this.state.customPosition != null ? this.state.customPosition.name : 'unknown')\r\n      },\r\n      xAxis: {\r\n        min: this.state.customMin,\r\n        max: this.state.customMax,\r\n        plotLines: [{\r\n          color: '#3D3D3D',\r\n          width: 2,\r\n          value: this.state.currentPrice ? this.state.currentPrice : 0,\r\n          label: {\r\n            text: \"Current price\"\r\n          }\r\n        }],\r\n        plotBands: [\r\n          {\r\n            from: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[0].x : 0,\r\n            to: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[1].x : 0,\r\n            color: 'rgba(165, 244, 151, 0.4)',\r\n            label: {\r\n                text: '90% UNDER',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          },\r\n          { \r\n            from: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[0].x : 0,\r\n            to: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[1].x : 0,\r\n            color: 'rgba(242, 240, 150, 0.4)',\r\n            label: {\r\n                text: '90% BASE',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      yAxis: [\r\n        {\r\n          title: {\r\n            text: 'APR [%]'\r\n          },\r\n          min: -100,\r\n          plotBands: [\r\n            {\r\n              from: 0,\r\n              to: -10000000000,\r\n              color: 'rgba(255, 33, 33, 0.06)',\r\n              label: {\r\n                  text: 'Red Zone',\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [BASE]'\r\n          },\r\n          opposite: true\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [UNDER]'\r\n          },\r\n          opposite: true\r\n        }\r\n      ],\r\n      series: [\r\n        { \r\n          name: \"APR [%] (BASE or UNDER)\", \r\n          data: this.state.chartData1,\r\n          tooltip: {\r\n            valueSuffix: '%'\r\n          },\r\n          turboThreshold: 10000\r\n        },\r\n        { \r\n          name: \"Profit [BASE]\", \r\n          data: this.state.chartData2,\r\n          yAxis: 1,\r\n          tooltip: {\r\n            valueSuffix: ' BASE' // todo\r\n          },\r\n          turboThreshold: 10000\r\n        },\r\n        { \r\n          name: \"Profit [UNDER]\", \r\n          data: this.state.chartData3,\r\n          yAxis: 2,\r\n          tooltip: {\r\n            valueSuffix: ' UNDER' // todo\r\n          },\r\n          turboThreshold: 10000\r\n        }\r\n      ],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  async addSubposition(type) {\r\n    let newSubpos;\r\n    if(type === 'uniswap') {\r\n      newSubpos = {\r\n        type: type,\r\n        marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n        base: {\r\n          start: 1800,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        liq: {\r\n          start: 30.67,\r\n          extra: 0\r\n        },\r\n      }\r\n    } else if(type === 'dydx-long') {\r\n      newSubpos = {\r\n        type: \"dydx-long\",\r\n        base: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        borrowedBASE: 2700, \r\n        boughtUNDER: 1, \r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'dydx-short') {\r\n      newSubpos = {\r\n        type: \"dydx-short\",\r\n        base: {\r\n          start: 2700,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        borrowedUNDER: 1,\r\n        boughtBASE: 2700,\r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'option') {\r\n      newSubpos = {\r\n        type: type,\r\n        base: {\r\n          start: 183,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        isCall: true, \r\n        isLong: true, \r\n        quantity: 1, \r\n        strike: 3200,\r\n        daysToExpiry: 26,\r\n        iv: 86\r\n      }\r\n    }\r\n    await this.props.addService(this.state.customPosition, newSubpos);\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions.push(newSubpos);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  updateSubposition(index, subpos) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions[index] = subpos;\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  removeSubposition(index) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions.splice(index, 1);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  displayCard(subpos, index) {\r\n\r\n    if(subpos.type === 'uniswap') {\r\n      return (\r\n        <UniswapV2Card\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-long') {\r\n      return (\r\n        <DYDXLongCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-short') {\r\n      return (\r\n        <DYDXShortCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'option') {\r\n      return (\r\n        <GammaOptionsCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  getSubpositionCards() {\r\n    if(this.state.customPosition) {\r\n      return this.state.customPosition.subpositions.map((subpos, index) => {\r\n        return (\r\n          <Col md={4}>\r\n            {this.displayCard(subpos, index)}\r\n          </Col>\r\n        )\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <Card\r\n        title=\"How does my position looks like?\"\r\n        //category=\"24 Hours performance\"\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special // for share button: fa fa-share-alt\r\n              //speciallarge \r\n              //pullRight\r\n              simple\r\n              >\r\n              <i className={\"fa fa-question-circle\"} /> Help \r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div className=\"main-content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col md={12}>\r\n                <HighchartsReact\r\n                  highcharts={Highcharts}\r\n                  options={this.getPerformanceChartOptions()}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={1}>\r\n                Min X:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Min X\"}\r\n                  type=\"number\"\r\n                  name=\"customMin\"\r\n                  min={0}\r\n                  value={this.state.customMin}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMin: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={3}>\r\n              </Col>\r\n              <Col md={1}>\r\n                Max X:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Max X\"}\r\n                  type=\"number\"\r\n                  name=\"customMax\"\r\n                  min={0}\r\n                  value={this.state.customMax}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMax: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={3}>\r\n              </Col>\r\n              {this.getSubpositionCards()}\r\n              <Col md={4}>\r\n                <AddSubpositionCard\r\n                  types={['uniswap', 'dydx-long', 'dydx-short', 'option']}\r\n                  addSubposition={this.addSubposition}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionChartCard;","/*jshint esversion: 6 */\r\n\r\nexport default class CurrencyPair {\r\n  constructor(base, counter) {\r\n    this.base = base;\r\n    this.counter = counter;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\n\r\nexport default class Transaction {\r\n  constructor(isTrade, isBuy, pair, baseAmount, counterAmount, time, comment) {\r\n    this.isTrade = isTrade; // trade or funding\r\n    this.isBuy = isBuy; // buy or sell\r\n    this.pair = pair;\r\n    this.baseAmount = baseAmount;\r\n    this.counterAmount = counterAmount;\r\n    this.time = time;\r\n    this.comment = comment;\r\n  }\r\n\r\n  getPrice() {\r\n    if(this.baseAmount > 0) {\r\n      return this.counterAmount / this.baseAmount; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getProfit(resModel, denomination) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n    let profit = this.baseAmount * (priceNow - priceThen) * (this.isBuy ? 1 : -1);\r\n\r\n    if(this.pair.counter !== denomination) {\r\n      let lastPrice = resModel.getLastPrice(this.pair.counter, denomination);\r\n      profit = profit * lastPrice;\r\n    }\r\n\r\n    return profit;\r\n  }\r\n\r\n  getProfitPercent(resModel) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n   \r\n    if(priceThen !== 0) {\r\n      return (priceNow - priceThen) / priceThen * 100 * (this.isBuy ? 1 : -1);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  toShortString() {\r\n\t\tlet base = \"\";\r\n\t\tif(this.isTrade) {\r\n      let tradeType = this.isBuy ? \"buy\" : \"sell\";\r\n      base += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code + \" @ \" ;\r\n      base += formatUtils.formatNumber(this.getPrice(), 6)+ this.pair.counter.code;\r\n    } else {\r\n      let tradeType = this.isBuy ? \"deposit\" : \"withdrawal\";\r\n\t\t\tbase += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code;\r\n\t\t}\r\n\t\t\r\n\t\treturn base;\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport { formatUtils } from '../../utils/FormatUtils';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass InsightsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTradingProfit = this.getTradingProfit.bind(this);\r\n  }\r\n\r\n  getTradingProfit(props) {\r\n    let totalProfit = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (tx.isTrade) {\r\n        totalProfit += tx.getProfit(props.resModel, props.resModel.usd);\r\n      }\r\n    }\r\n\r\n    return totalProfit;\r\n  }\r\n\r\n  getTotalFundings(props) {\r\n    // sum all deposits, and withdrawals on their transaction date\r\n    let totalDeposits = 0, totalWithdrawals = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (!tx.isTrade) {\r\n        let lastPrice = props.resModel.getPastPrice(tx.pair.base, props.resModel.usd, tx.time);\r\n        if (tx.isBuy) {\r\n          totalDeposits += tx.baseAmount * lastPrice;\r\n        } else {\r\n          totalWithdrawals += tx.baseAmount * lastPrice;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalDeposits: totalDeposits,\r\n      totalWithdrawals: totalWithdrawals\r\n    }\r\n  }\r\n\r\n  getExposureToCryptoPercentage(props, currentPortfolio, totalBalance) {\r\n    let totalCryptoBalance = currentPortfolio.getTotalCryptoBalance(props.resModel, props.resModel.usd);\r\n    return totalCryptoBalance / totalBalance * 100;\r\n  }\r\n\r\n  toShortFormatStyled(value) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.toShortFormat(value)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toDecimalFormatStyled(value, addon) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    return (\r\n      <div>\r\n        {formatUtils.formatNumber(value, 2) + addon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    let tradingProfit = this.getTradingProfit(this.props);\r\n    let fundings = this.getTotalFundings(this.props);\r\n    let totalProfit = totalBalance - fundings.totalDeposits + fundings.totalWithdrawals;\r\n    let holdingProfit = totalProfit - tradingProfit;\r\n    let tradeCount = this.props.userModel.portfolios.slice(-1)[0].tradeCount;\r\n    let exposureToCrypto = this.getExposureToCryptoPercentage(this.props, currentPortfolio, totalBalance);\r\n\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Hodling and trading profits are 2 components of the Total profit you made since you deposited your first currency. <br/><br/>\r\n      Trading profit is profit you made from trading, and includes all your trades. Go to Trades page to see more details on trades. <br/><br/>\r\n      Hodling profit is profit you made by just hodling your currencies, without trading. It's calculated by subtracting trading profit from total profit.\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category='All time'\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n            bsStyle=\"default\"\r\n            special // for share button: fa fa-share-alt\r\n            //speciallarge \r\n            //pullRight\r\n            simple\r\n          >\r\n            <i className={\"fa fa-question-circle\"} /> Help\r\n          </Button> \r\n        </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"table-responsive\">\r\n                <h5>How do I make profit?</h5>\r\n                <table className=\"table table-hover\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>by hodling</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(holdingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(holdingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>by trading</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(tradingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(totalProfit)}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive\">\r\n              <h5>What are my key insights?</h5>\r\n              <table className=\"table table-hover\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Average profit per trade</td>\r\n                    <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit / tradeCount)}</td>\r\n                  </tr>\r\n                  {/*<tr>\r\n                    <td>Most profitable pair</td>\r\n                    <td className=\"text-right\">ETH/USD</td>\r\n                  </tr>*/}\r\n                  <tr>\r\n                    <td>Withdrawn</td>\r\n                    <td className=\"text-right\">{formatUtils.toShortFormat(fundings.totalWithdrawals)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Exposure to crypto</td>\r\n                    <td className=\"text-right\">{this.toDecimalFormatStyled(exposureToCrypto, '%')}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n          }\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default InsightsCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass HelpCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n      {this.props.isHelpPanelShown ? (\r\n        <Card\r\n          title=\"Getting started\"\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={5} md={3} sm={0} xs={0}>\r\n                  <p>Welcome to Forkfolio app, a private-by-design crypto portfolio manager you \r\n                    can use to watch live crypto prices, track your trades, and get insights \r\n                    into your trading performance. </p>\r\n                  <p>If you haven't seen Forkfolio in action, visit <a href=\"https://forkfol.io/demo/\">demo app</a> loaded with public portfolio \r\n                    that showcases all features, or click on a play button to watch a short \r\n                    introductory video.</p>\r\n                  <h4 class=\"help-card-title\">Quick start</h4> \r\n                  <p class=\"help-card-paragraph\">Your portfolio is like a bank account - first, you need to deposit tokens to \r\n                    your portfolio to be able to trade them for another one. </p>\r\n                  <Button\r\n                    danger\r\n                    bsStyle=\"danger\"\r\n                    fill\r\n                    wd                    \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    Add Your First Deposit Now\r\n                  </Button>\r\n                </Col>\r\n                <Col lg={7} md={9} sm={12} xs={12} >\r\n                  <iframe title=\"Getting started with ForkFolio\" width=\"600\" height=\"370\" src=\"https://www.useloom.com/embed/87407d8535bd43b7b5c8a67da8c99d77\" frameBorder=\"0\" webkitallowfullscreen mozallowfullscreen allowFullScreen></iframe>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col md={2} mdOffset={11}>\r\n                <Button\r\n                  bsStyle=\"default\"\r\n                  fill\r\n                  onClick={() => this.props.hideHelpPanel()}\r\n                >\r\n                  Close\r\n                </Button>\r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        /> ) : (\"\") }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelpCard;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Tab,\r\n  Tabs\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonFundingDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTabSelect = this.handleTabSelect.bind(this);\r\n  }\r\n\r\n  isValidAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ amountError: null }) : this.setState({\r\n      amountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      currencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select currency.\r\n        </small>)\r\n    })\r\n      : this.setState({ currencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n    })\r\n      : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getDepositCurrencies() {\r\n    const currencies = [];\r\n    for (let c of this.props.resModel.dailyTickers.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  getWithdrawalCurrencies() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuySellFormGroup(name, placeholder) {\r\n    this.selected = name;\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          min={0}\r\n          value={this.state.amount}\r\n          onChange={event => {\r\n            this.setState({\r\n              amount: event.target.value\r\n            });\r\n            this.isValidAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.amountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"currency\"\r\n          value={this.state.currency}\r\n          options={this.state.currencies}\r\n          onChange={value => {\r\n            this.setState({ currency: value });\r\n            this.isValidCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.currencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate() });\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  handleTabSelect(key) {\r\n    this.setState({\r\n      isDeposit: key === \"deposit\",\r\n      currencies: key === \"deposit\" ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      currency: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tabs\r\n                    activeKey={this.state.isDeposit ? \"deposit\" : \"withdrawal\"}\r\n                    onSelect={this.handleTabSelect}\r\n                    id=\"controlled-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Deposit\", \"Deposit amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"withdrawal\" title=\"Withdrawal\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Withdrawal\", \"Withdrawal amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={/*() => */this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonFundingDialog;\r\n","import \"react-select/dist/react-select.css\";\r\n\r\nimport CurrencyPair from \"../../model/CurrencyPair\"\r\nimport Transaction from \"../../model/Transaction\"\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props.isInitialDeposit);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/addFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*this.setState(this.getInitialState());\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addFunding');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(isInitialDeposit) {\r\n    return {\r\n      title: \"Add funding\",\r\n      buttonText: \"Add\",\r\n      isDeposit: true,\r\n      amount: \"\",\r\n      amountError: null,\r\n      currency: null,\r\n      currencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: isInitialDeposit == null ? \"\" : \"It's my first deposit\",\r\n      currencies: this.getDepositCurrencies()\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddFundingDialog;\r\n","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\n\r\nexport default class Portfolio {\r\n    constructor(previous, genesisTx) {\r\n      this.previous = previous;\r\n      this.genesisTx = genesisTx;\r\n      this.balances = new Map();\r\n      this.tradeCount = this.calculateTradeCount();\r\n\r\n      this.calculateCurrencyBalances();\r\n    }\r\n\r\n    calculateTradeCount() {\r\n        let count = this.previous != null ? this.previous.tradeCount : 0;\r\n        if(this.genesisTx != null && this.genesisTx.isTrade) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    calculateCurrencyBalances() {\r\n        if(this.previous !== null) {\r\n            this.balances = new Map(this.previous.balances);\r\n        }\r\n        if(this.genesisTx !== null) {\r\n            // add usd to balances only if not funding\r\n            let isNotFunding = this.genesisTx.pair.counter.code !== 'USD' || \r\n            (this.genesisTx.pair.counter.code === 'USD' && this.genesisTx.isTrade);\r\n\r\n            // if no base and counter in map, add them first\r\n            if(this.balances.get(this.genesisTx.pair.base) === undefined) {\r\n                this.balances.set(this.genesisTx.pair.base, 0);\r\n            }\r\n            if(this.balances.get(this.genesisTx.pair.counter) === undefined) {\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, 0);\r\n                }\r\n            }\r\n\r\n            // then do the calculation\r\n            if(this.genesisTx.isBuy) {\r\n                //  add base and subtract counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) + this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) - this.genesisTx.counterAmount);\r\n                }\r\n            } else {\r\n                //  subtract base and add counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) - this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) + this.genesisTx.counterAmount);\r\n                }\r\n            }            \r\n        }\r\n    }\r\n\r\n    sortBalances(resModel) {\r\n        this.balances = new Map([...this.balances.entries()].sort(\r\n            (a, b) => this.getCurrencyBalance(resModel, b[0], resModel.usd) - this.getCurrencyBalance(resModel, a[0], resModel.usd)            \r\n        ));\r\n    }\r\n\r\n    getCurrencyBalance(resModel, currency, denomination) {\r\n        let priceInDenomination = 1;\r\n        if(currency !== denomination) {\r\n            let lastPrice = resModel.getLastPrice(currency, denomination);\r\n            if(lastPrice !== null) {\r\n                priceInDenomination = lastPrice;\r\n            }\r\n        }\r\n\r\n        return this.balances.get(currency) * priceInDenomination;\r\n    }\r\n\r\n    getTotalBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    getTotalCryptoBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            if(!k.isFiat) {\r\n                totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n            }\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    // returns balance of the currency on a date\r\n    getPastCurrencyBalance(currency, date) {\r\n        let currencyBalance = 0;\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return currencyBalance;\r\n    }\r\n\r\n    // returns total balance of portfolio in past for denominated\r\n    getPastTotalBalance(resModel, date, denomination) {\r\n        let totalPastBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            let pastPrice = resModel.getPastPrice(k, denomination, date);\r\n            totalPastBalance += pastPrice * this.getPastCurrencyBalance(k, date);\r\n        }\r\n\r\n        return totalPastBalance;\r\n\r\n        /*\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return totalPastBalance;*/\r\n    }\r\n\r\n    // returns portfolio was current at date\r\n    getPastPortfolio(date) {\r\n        let prev = this.previous;\r\n        while(prev !== null) {\r\n            if(prev.genesisTx == null || prev.genesisTx.time.getTime() < date.getTime()) {\r\n                return prev;\r\n            }\r\n            prev = prev.previous;\r\n        }\r\n\r\n        return null;\r\n    }\r\n  }","/*jshint esversion: 6 */\r\nimport moment from 'moment';\r\n\r\nclass DateUtils {\r\n  getDaysSince(sinceDate) {\r\n    return moment(new Date()).diff(moment(sinceDate), 'days');\r\n  }\r\n}\r\n\r\nexport let dateUtils = new DateUtils();","/*jshint esversion: 6 */\r\nimport Portfolio from './Portfolio';\r\nimport { dateUtils } from './../utils/DateUtils';\r\n\r\n\r\nexport default class UserModel {\r\n  constructor(transactions = [], positions = [], resModel) {\r\n    this.transactions = transactions;\r\n    this.positions = positions;\r\n    this.portfolios = [];\r\n\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  updateTransactions(transactions, resModel) {\r\n    this.transactions = transactions;\r\n    this.portfolios = [];\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  preparePortfolios(resModel) {\r\n    //console.log(\"Preparing portfolios..\");\r\n    let empty = new Portfolio(null, null);\r\n    empty.sortBalances(resModel);\r\n    this.portfolios.push(empty);\r\n\r\n    let previous = empty;\r\n    for(let tx of this.transactions) {\r\n      let portfolio = new Portfolio(previous, tx);\r\n      portfolio.sortBalances(resModel);\r\n      this.portfolios.push(portfolio);\r\n      previous = portfolio;\r\n    } \r\n  }\r\n\r\n  // returns all portfolios created after date\r\n  getPortfoliosSince(date) {\r\n    let selected = [];\r\n    for(let p of this.portfolios) {\r\n      if(p.genesisTx !== null && p.genesisTx.isTrade) {\r\n        if(p.genesisTx.time.getTime() > date.getTime() || p === this.portfolios[this.portfolios.length - 1]) {\r\n          selected.push(p);\r\n        }\r\n      }\r\n    }\r\n\r\n    // always add the one before the first one\r\n    if(selected.length > 0) {\r\n      selected.unshift(selected[0].previous);\r\n    }\r\n\r\n    return selected;\r\n  }\r\n\r\n  getDaysSinceFirstTx() {\r\n    if(this.transactions.length > 0) {\r\n      let firstDate = new Date(this.transactions[0].time);\r\n      return dateUtils.getDaysSince(firstDate);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","import UserModel from \"../UserModel\"\r\nimport ResModel from \"../ResModel\"\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nexport var resModel = new ResModel();\r\nexport let userModel = new UserModel([], resModel);\r\n\r\n\r\nexport const rangeSelectorModel = {\r\n    inputPosition: {\r\n        align: 'left',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buttonPosition: {\r\n        align: 'right',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    //selected: 2,\r\n    buttons: [ {\r\n        type: 'day',\r\n        count: 7,\r\n        text: '1w',\r\n        days: 7,\r\n        userFriendlyText: 'Last 7 days',\r\n    },{\r\n        type: 'month',\r\n        count: 1,\r\n        text: '1m',\r\n        days: 30,\r\n        userFriendlyText: 'Last 30 days',\r\n    }, {\r\n        type: 'month',\r\n        count: 3,\r\n        text: '3m',\r\n        days: 90,\r\n        userFriendlyText: 'Last 3 months',\r\n    }, {\r\n        type: 'ytd',\r\n        text: 'YTD',\r\n        days: dateUtils.getDaysSince(new Date(new Date().getFullYear(), 0, 0)),\r\n        userFriendlyText: 'Year-to-date',\r\n    }, {\r\n        type: 'year',\r\n        count: 1,\r\n        text: '1y',\r\n        days: 365,\r\n        userFriendlyText: 'Last year',\r\n    }, {\r\n        type: 'all',\r\n        text: 'All',\r\n        userFriendlyText: 'All time',\r\n    }]\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class ResModel {\r\n  constructor() {\r\n    this.usd = null;\r\n    this.dailyTickers = new Map();\r\n    this.recentTickers = new Map();\r\n  }\r\n\r\n  clone() {\r\n    let newModel = new ResModel();\r\n    newModel.usd = this.usd;\r\n    newModel.dailyTickers = this.dailyTickers;\r\n    newModel.recentTickers = this.recentTickers;\r\n    return newModel;\r\n  }\r\n\r\n  getLastPrice(base, counter) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      // counter usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null) {\r\n        return this.recentTickers.get(base.code).price;\r\n      }\r\n      // counter usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null) {\r\n        return this.dailyTickers.get(base).slice(-1)[0].price;\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null && \r\n          this.recentTickers.get(counter) != null) {\r\n        let baseUsd = this.recentTickers.get(base.code).price;\r\n        let counterUsd = this.recentTickers.get(counter.code).price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n\r\n      // counter not usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null && \r\n          this.dailyTickers.get(counter).slice(-1)[0] != null) {\r\n        let baseUsd = this.dailyTickers.get(base).slice(-1)[0].price;\r\n        let counterUsd = this.dailyTickers.get(counter).slice(-1)[0].price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getPercentChange24h(currency) {\r\n    if(this.recentTickers.get(currency) != null) {\r\n      return this.recentTickers.get(currency).percentChange24h;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  // returns the price of base denominated in counter on date\r\n  getPastPrice(base, counter, date) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      for(let t of this.dailyTickers.get(base)) {\r\n        if(this.sameDay(date, t.time)) {\r\n          return t.price;\r\n        }\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      // not implemented for now\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  findCurrencyByCode(code) {\r\n    for (const key of this.dailyTickers.keys()) {\r\n      if(key.code === code) {\r\n        return key;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport ReactTable from \"react-table\";\r\nimport Highstock from 'highcharts/highstock';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport InsightsCard from './common/InsightsCard';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport HelpCard from './common/HelpCard';\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass PortfolioView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getPerformanceChartOptions = this.getPerformanceChartOptions.bind(this);\r\n    this.getTotalBalance = this.getTotalBalance.bind(this);\r\n    this.getTableColumnsDesktop = this.getTableColumnsDesktop.bind(this);\r\n    this.getTableColumnsMobile = this.getTableColumnsMobile.bind(this);\r\n    this.getTableData = this.getTableData.bind(this);\r\n    this.getLogoURL = this.getLogoURL.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  getTotalBalance(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.total[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  downsizeTokenLogo(originalLogoURL) {\r\n    return originalLogoURL.replace(\"64x64\", \"32x32\");\r\n  }\r\n\r\n  getTableColumnsDesktop() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"name\", maxWidth: 180, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 120,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"24h\", accessor: \"percentChange24h\", maxWidth: 80,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Balance\", accessor: \"balance\", maxWidth: 160, sortable: false, \r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Share\", accessor: \"share\", maxWidth: 80, \r\n      Footer: (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>100%</strong>{\" \"}\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value, 2) + \"%\"}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Total\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getTableColumnsMobile() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"code\", maxWidth: 100, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 100,\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toGreenRedPercentStyle(row.value[1])}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      \r\n      { Header: \"Balance\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toShortFormat(row.value[1][0], 2).substr(1)}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getLogoURL(currency) {\r\n    if(currency.meta == null) {\r\n        return \"fiat-logos/\" + (currency.isFiat ? currency.code.toLowerCase() : \"empty\") + \".png\";\r\n    }\r\n\r\n    return currency.meta.logo;\r\n  }\r\n\r\n  // gets table data for desktop and mobile\r\n  getTableData(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(props.resModel, props.resModel.usd);\r\n\r\n    const tableData = [];\r\n    for (let [k, v] of currentPortfolio.balances) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, k, props.resModel.usd);\r\n      let name = [this.getLogoURL(k), k.name];\r\n      let code = [this.getLogoURL(k), k.code];\r\n      let percentChange24h = props.resModel.getPercentChange24h(k.code);\r\n      let price = [props.resModel.getLastPrice(k, props.resModel.usd), percentChange24h];\r\n      let balance = [v, k.code];\r\n      let share = (currencyBalance / totalBalance * 100);\r\n      let total = [currencyBalance, balance];\r\n      tableData.push({\r\n        id: tableData.length, \r\n        name: name, \r\n        code: code, \r\n        price: price,\r\n        percentChange24h: percentChange24h,\r\n        balance: balance,\r\n        share: share,\r\n        total: total\r\n      });\r\n    }\r\n\r\n    return tableData;\r\n  }\r\n\r\n  getPerformanceChartOptions(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n\r\n    // prepare portfolio performance chart\r\n    const series = [];\r\n    for (const currency of currentPortfolio.balances.keys()) {\r\n      const serie = [];\r\n      for(let t of props.resModel.dailyTickers.get(currency)) {       \r\n          let balanceInDenominated = t.price * currentPortfolio.getPastCurrencyBalance(t.pair.base, t.time);\r\n          serie.push([t.time.getTime(), balanceInDenominated]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {\r\n        serie.slice(-1)[0][1] = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd)\r\n        series.push({name: currency.code, data: serie});\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'area'\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          stacking: 'normal',\r\n          lineColor: '#666666',\r\n          lineWidth: 1,\r\n          marker: {\r\n              lineWidth: 1,\r\n              lineColor: '#666666'\r\n          }\r\n        }\r\n      },     \r\n      series: series,\r\n      rangeSelector: rangeSelectorModel,\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let assetCount = currentPortfolio.balances.size;\r\n    const showPagination = assetCount > 10;\r\n    const isMobile = window.innerWidth <= 992;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n        isInitialDeposit\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Balance sheet panel displays \r\n      all crypto and fiat currencies (coins) you own at this \r\n      moment. This is your portfolio. You can check live prices \r\n      of your currencies, total balance of a currency in USD, \r\n      and the total value in USD at the bottom. <br/><br/> \r\n      24H column displays a change in USD price in the last 24 hours.\r\n    </Tooltip>; \r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <HelpCard \r\n                isHelpPanelShown={this.props.isHelpPanelShown}\r\n                hideHelpPanel={this.props.hideHelpPanel}\r\n                showAddFundingDialog={this.props.showAddFundingDialog}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              <Card\r\n                title=\"What's my balance sheet today?\"\r\n                category={assetCount + \" asset\" + (assetCount === 1 ? \"\" : \"s\")}\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.getTableData(this.props)}\r\n                    columns={isMobile ? this.getTableColumnsMobile(this.props) : this.getTableColumnsDesktop(this.props)}\r\n                    defaultPageSize={10}\r\n                    showPageSizeOptions={false}\r\n                    showPagination={showPagination}\r\n                    noDataText={formatUtils.getNoDataText('assets', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <InsightsCard\r\n                title=\"Portfolio insights\"\r\n                portfolio={this.props.userModel.portfolios.slice(-1)[0]}\r\n                resModel={this.props.resModel}\r\n                userModel={this.props.userModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What's my portfolio history?\"\r\n                //category=\"24 Hours performance\"\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <HighchartsReact\r\n                    highcharts={Highstock}\r\n                    constructorType={'stockChart'}\r\n                    options={this.getPerformanceChartOptions(this.props)}\r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioView;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass TradesView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if (tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let pair = tx.pair.base.code + \"/\" + tx.pair.counter.code;\r\n        let type = tx.isBuy ? \"Buy\" : \"Sell\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        let price = [tx.getPrice(), tx.pair.counter.code];\r\n        let cost = [tx.counterAmount, tx.pair.counter.code];\r\n        let profitPercent = tx.getProfitPercent(props.resModel);\r\n        let profit = [tx.getProfit(props.resModel, props.resModel.usd), props.resModel.usd.code];\r\n        tableData.push([tx, date, pair, type, comment, volume, price, cost, profitPercent, profit]);\r\n      }\r\n    }\r\n\r\n    // second, map to state\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        pair: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        price: prop[6],\r\n        cost: prop[7],\r\n        profitpercentage: prop[8],\r\n        profit: prop[9],\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTotalVolume(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.volume[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalPrice(rows) {\r\n    return this.getTotalCost(rows) / this.getTotalVolume(rows);\r\n  }\r\n\r\n  getTotalCost(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.cost[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalProfitPercentage(rows) {\r\n    let pairStr = rows.data[0].pair.split('/');\r\n    let base = this.props.resModel.findCurrencyByCode(pairStr[0]);\r\n    let counter = this.props.resModel.findCurrencyByCode(pairStr[1]);\r\n    if(base !== null && counter !== null) {\r\n      let totalCost = this.getTotalCost(rows);\r\n      let totalCostInUsd = totalCost * this.props.resModel.getLastPrice(counter, this.props.resModel.usd);\r\n      let totalProfit = this.getTotalProfit(rows);\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      totalCostInUsd = totalCostInUsd * (isBuy ? 1 : -1);\r\n      // check eth/usd and rep/usd\r\n      return (totalProfit / Math.max(0, totalCostInUsd)) * 100; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getTotalProfit(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.profit[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  isOnePair(rows) {\r\n    for(let row of rows.data) {\r\n      if(row.pair !== rows.data[0].pair) {\r\n        return false;\r\n      }\r\n    }\r\n    return rows.data.length !== 0;\r\n  }\r\n\r\n  getPairFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return rows.data[0].pair;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTypeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return this.getTotalVolume(rows) >= 0 ? \"Buy\" : \"Sell\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getVolumeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(Math.abs(this.getTotalVolume(rows)), 2) + \" \" + rows.data[0].volume[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getPriceFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalPrice(rows), 6) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getCostFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      return formatUtils.formatNumber(this.getTotalCost(rows) * (isBuy ? 1 : -1), 2) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getProfitPercentageFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalProfitPercentage(rows), 2) + \"%\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Pair\", accessor: \"pair\", maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n        <span>\r\n          <strong>\r\n            {this.getPairFooter(rows)}\r\n          </strong>\r\n        </span>\r\n        )\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", maxWidth: 50,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n          <span>\r\n            <strong>\r\n              {this.getTypeFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", maxWidth: 300,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", maxWidth: 140, filterable: false,\r\n        Cell: row => (\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; \r\n        }, Footer: rows => (\r\n            <span style={{ float: \"right\" }}>\r\n              <strong>\r\n                {this.getVolumeFooter(rows)}\r\n              </strong>\r\n            </span>\r\n          )\r\n      },\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 6) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {this.getPriceFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Cost\", accessor: \"cost\", maxWidth: 140, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getCostFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit [%]\", accessor: \"profitpercentage\", maxWidth: 80, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getProfitPercentageFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit\", accessor: \"profit\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getTotalProfit(rows), 2) + \" USD\"}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Trades panel displays all your trades. A trade is when you exchange one currency for another. <br/><br/> \r\n      To add a trade, click on the Add trade button. To edit or remove a trade, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      PROFIT column will give you a trade's profit in USD for prices right now. There's also a total profit for all trades on the bottom. <br/><br/> \r\n      Trades can be sorted, and filtered in multiple ways. For example, to show all ETH/USD trades in 2018, enter ETH/USD in the PAIR filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent trades?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special   \r\n                    onClick={() => this.props.showAddTradeDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add trade\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                    <i className={\"fa fa-question-circle\"} /> Help \r\n                  </Button> \r\n                </OverlayTrigger>\r\n                </div>\r\n                }\r\n                category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TradesView;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update funding\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      isDeposit: props.editedTransaction.isBuy, \r\n      amount: props.editedTransaction.baseAmount.toString(),\r\n      amountError: null,\r\n      currency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      currencyError: null,\r\n      currencies: props.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    // track ga\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/editFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        isDeposit: nextProps.editedTransaction.isBuy, \r\n        amount: nextProps.editedTransaction.baseAmount.toString(),\r\n        amountError: null,\r\n        currency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        currencyError: null,\r\n        currencies: nextProps.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editFunding');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default EditFundingDialog;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport EditFundingDialog from \"./dialogs/EditFundingDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass FundingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n  \r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if(!tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let name = tx.pair.base.name;\r\n        let type = tx.isBuy ? \"Deposit\" : \"Withdrawal\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        tableData.push([tx, date, name, type, comment, volume]);\r\n      }\r\n    }\r\n\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        name: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        actions: (\r\n          // we've added some custom button actions\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditFundingDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, width: 160,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Name\", accessor: \"name\", minWidth: 120, width: 200,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", minWidth: 95, width: 120,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", minWidth: 100, width: 300, maxWidth: 500,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", minWidth: 120, width: 150, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }\r\n    },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 80, maxWidth: 80, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let fundingCount = this.props.userModel.transactions.length - currentPortfolio.tradeCount;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editFundingDialog = (\r\n      <EditFundingDialog\r\n        isDialogShown={this.props.isEditFundingDialogShown}\r\n        hideDialog={this.props.hideEditFundingDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Funding panel displays all your portfolio fundings: deposits and withdrawals. Deposit is when you add currency to your portfolio, and withdrawal is when you remove it. <br/><br/> \r\n      To add a funding, click on the Add funding button. To edit or remove a funding, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      Fundings can be sorted, and filtered in multiple ways. For example, to show all USD withdrawals in 2018, enter United States Dollar in the NAME filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent deposits and withdrawals?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special                   \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add funding\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                  </div>\r\n                }\r\n                category={fundingCount + \" funding\" + (fundingCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}                    \r\n                    noDataText={this.getNoDataText('deposits or withdrawals', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n              {this.props.isEditFundingDialogShown ? editFundingDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundingView;\r\n","import React, { Component } from \"react\";\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport Card from \"components/Card/Card.jsx\";\r\n\r\nclass PortfolioPie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartOptions: this.getPieOptions(props)\r\n    };\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n        chartOptions: this.getPieOptions(nextProps)\r\n    });\r\n  }\r\n\r\n  getPieOptions(props) {\r\n    let currentPortfolio = props.portfolio;\r\n\r\n    // prepare portfolio pie chart\r\n    const data = [];\r\n    for (let currency of currentPortfolio.balances.keys()) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd);\r\n      data.push({name: currency.code, y: currencyBalance});\r\n    }\r\n\r\n    const pieOptions = {\r\n      chart: {\r\n        type: \"pie\",\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      series: [{\r\n        name: \"Allocation\",\r\n        data: data\r\n      }],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return pieOptions;\r\n  }\r\n   render() {\r\n     let tradeCount = this.props.portfolio.tradeCount;\r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n        content={<HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={this.state.chartOptions}\r\n        />}\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioPie;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Highstock from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport PortfolioPie from './common/PortfolioPie'\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nclass PerformanceView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rangeClickHandler = this.rangeClickHandler.bind(this);\r\n\r\n    let daysSince = props.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(props, daysSince);\r\n    this.state = {\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(props, portfolios.best, portfolios.current, portfolios.worst)\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    rangeSelectorModel.days = this.props.userModel.getDaysSinceFirstTx();;\r\n    rangeSelectorModel.userFriendlyText = \"All time\";\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    let daysSince = nextProps.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(nextProps, daysSince); \r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(nextProps, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  rangeClickHandler() {\r\n    let portfolios = this.getBestCurrentWorstPortfolio(this.props, rangeSelectorModel.days);\r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(this.props, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  getBestCurrentWorstPortfolio(props, days) {\r\n\r\n    // TODO: what's this\r\n    let since = new Date(2018,4,28);\r\n    since.setHours(2,0,0,0);\r\n    //console.log(since)\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null && \r\n      props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0] != null) {\r\n      since = props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0].time;\r\n      //console.log(since)\r\n    }\r\n    //console.log(since)\r\n    let portfoliosSince = props.userModel.getPortfoliosSince(since);\r\n    //console.log(portfoliosSince);\r\n\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let bestPortfolio = currentPortfolio, worstPortfolio = currentPortfolio;\r\n    for(let p of portfoliosSince) {\r\n      let totalBalance = p.getTotalBalance(props.resModel, props.resModel.usd);\r\n      // best \r\n      if(totalBalance >= bestPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        bestPortfolio = p;\r\n      }\r\n      // worst\r\n      if(totalBalance <= worstPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        worstPortfolio = p;\r\n      }\r\n    }\r\n\r\n    // TODO: add future fundings here\r\n\r\n    return {\r\n      best: bestPortfolio, \r\n      current: currentPortfolio,\r\n      worst: worstPortfolio\r\n    };\r\n  }\r\n\r\n  getPortfolioSeries(props, portfolio) {\r\n    const serie = [];\r\n    // take usd tickers as template for dates\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null) {\r\n      for(let t of props.resModel.dailyTickers.get(props.resModel.usd)) {\r\n        let totalPastBalance = portfolio.getPastTotalBalance(props.resModel, t.time, props.resModel.usd);\r\n        serie.push([t.time.getTime(), totalPastBalance]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {     \r\n        serie.slice(-1)[0][1] = portfolio.getTotalBalance(props.resModel, props.resModel.usd)\r\n      }\r\n    }\r\n\r\n    return serie;\r\n  }\r\n\r\n  getPerformanceChartOptions(props, best, current, worst) {   \r\n    let series = [];\r\n    series.push({name: \"Best portfolio\", data: this.getPortfolioSeries(props, best)});\r\n    series.push({name: \"Current portfolio\", data: this.getPortfolioSeries(props, current)});    \r\n    series.push({name: \"Worst portfolio\", data: this.getPortfolioSeries(props, worst)});\r\n\r\n    var externalCaller = this.rangeClickHandler;\r\n    for(let i = 0; i < rangeSelectorModel.buttons.length; i++) {\r\n      rangeSelectorModel.buttons[i].events = {\r\n        click: function() {\r\n          rangeSelectorModel.days = rangeSelectorModel.buttons[i].days;\r\n          rangeSelectorModel.userFriendlyText = rangeSelectorModel.buttons[i].userFriendlyText;\r\n          externalCaller.call();\r\n        }\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      title: {\r\n        text: null\r\n      },\r\n      rangeSelector: rangeSelectorModel,\r\n      series: series, \r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      },\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Performance panel displays a chart of best, worst and current portfolio in a selected time period. Click on a zoom buttons to select time period. <br/><br/> \r\n      Chart is useful to evaluate your trading performance in selected time period. The closer your current is to the best portfolio, the better. <br/><br/> \r\n      Current portfolio is portfolio with all your trades, portfolio you have right now. <br/><br/> \r\n      Best/worst portfolio is portfolio with highest/lowest value in USD if you'd stopped trading altogether at some moment in selected time period. \r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"How does my current portfolio compare to past portfolios?\"\r\n                category={rangeSelectorModel.userFriendlyText != null ? rangeSelectorModel.userFriendlyText : \"All time\" }\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={<HighchartsReact\r\n                  highcharts={Highstock}\r\n                  constructorType={'stockChart'}\r\n                  options={this.state.performanceChartOptions}\r\n                />}\r\n                /*stats={\r\n                  <div>\r\n                    <i className=\"fa fa-history\" /> Updated 3 minutes ago\r\n                  </div>\r\n                }*/\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4}>\r\n            <PortfolioPie\r\n                title=\"Best portfolio\"\r\n                portfolio={this.state.bestPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Current portfolio\"\r\n                portfolio={this.state.currentPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Worst portfolio\"\r\n                portfolio={this.state.worstPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PerformanceView;\r\n","import PortfolioView from \"views/PortfolioView.jsx\";\r\nimport TradesView from \"views/TradesView.jsx\";\r\nimport PositionsView from \"views/PositionsView.jsx\";\r\nimport FundingView from \"views/FundingView.jsx\";\r\nimport PerformanceView from \"views/PerformanceView.jsx\";\r\n\r\nvar dashboardRoutes = [\r\n  {\r\n    path: \"/portfolio\",\r\n    name: \"Portfolio\",\r\n    icon: \"fa fa-pie-chart\",\r\n    component: PortfolioView\r\n  }, {\r\n    path: \"/trades\",\r\n    name: \"Trades\",\r\n    icon: \"fa fa-retweet\",\r\n    component: TradesView\r\n  }, {\r\n    path: \"/positions\",\r\n    name: \"Positions\",\r\n    icon: \"fa fa-piggy-bank\",\r\n    component: PositionsView\r\n  }, {\r\n    path: \"/funding\",\r\n    name: \"Funding\",\r\n    icon: \"fa fa-money\",\r\n    component: FundingView\r\n  }, {\r\n    path: \"/performance\",\r\n    name: \"Performance\",\r\n    icon: \"fa fa-line-chart\",//fa fa-calculator, fa fa-area-chart\r\n    component: PerformanceView\r\n  }, {\r\n    collapse: true,\r\n    path: \"/manage\",\r\n    name: \"Manage\",\r\n    state: \"openManage\",\r\n    icon: \"fa fa-folder\",\r\n    views: [\r\n      {\r\n        path: \"/placeholder\",\r\n        name: \"Placeholder\",\r\n        mini: \"P\",\r\n        component: null\r\n      }\r\n    ]\r\n  },\r\n  /*{\r\n    path: \"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\",\r\n    name: \"Feedback\",\r\n    icon: \"fa fa-comments\",\r\n    component: null\r\n  },*/\r\n  { redirect: true, path: \"/\", pathTo: \"/portfolio\", name: \"Portfolio\" }\r\n];\r\nexport default dashboardRoutes;\r\n","// @flow\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Portal } from 'react-portal';\r\n\r\nclass InputFiles extends React.Component<{\r\n  children: React.Node,\r\n  onChange: (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n  accept?: string,\r\n  style?: Object,\r\n}> {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onChange: PropTypes.func, // (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n    accept: PropTypes.string,\r\n    style: PropTypes.object,\r\n  };\r\n  static defaultProps = {\r\n    accept: 'image/*',\r\n  };\r\n  onInputRef = (node: any): void => {\r\n    this.input = node;\r\n  };\r\n  onClick = (e: SyntheticEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (this.input) this.input.click();\r\n  };\r\n  onChange = (e: Object) => {\r\n    this.props.onChange(e.target.files, e);\r\n    e.target.value=null;\r\n  };\r\n  input: ?React.ElementRef<'input'>;\r\n  render() {\r\n    const { children, accept, style } = this.props;\r\n    const { onInputRef, onClick, onChange } = this;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          onClick={onClick}\r\n          onKeyPress={onClick}\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n          style={{ display: 'inline-block', ...style }}\r\n        >\r\n          {children}\r\n        </div>\r\n\r\n        <Portal>\r\n          <input\r\n            ref={onInputRef}\r\n            type=\"file\"\r\n            accept={accept}\r\n            onChange={onChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFiles;","import React, { Component } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// this is used to create scrollbars on windows devices like the ones from apple devices\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// backgroundImage for Sidebar\r\nimport image from \"assets/img/full-screen-image-3.jpg\";\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n//import InputFiles from 'react-input-files';\r\nimport InputFiles from './../Input/InputFiles.js'\r\n\r\n//const bgImage = { backgroundImage: \"url(\" + image + \")\" };\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onOpenClick = this.onOpenClick.bind(this);\r\n    this.state = {\r\n      isWindows: navigator.platform.indexOf(\"Win\") > -1 ? true : false,\r\n      width: window.innerWidth\r\n    };\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  // if the windows width changes CSS has to make some changes\r\n  // this functions tell react what width is the window\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    // add event listener for windows resize\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebarWrapper, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      setTimeout(() => {\r\n        ps.update();\r\n      }, 350);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n\r\n  onOpenClick() {\r\n    document.getElementById('input-files').click();     \r\n    return false;\r\n  }\r\n\r\n  getChangeCount() {\r\n    return this.props.changeCount > 0 ? \" (\" + this.props.changeCount + \")\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\" data-color=\"black\" data-image={image}>\r\n        {/*<div className=\"sidebar-background\" style={bgImage} />*/}\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-mini\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              <i className=\"fa fa-book\"></i>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            ForkFolio\r\n          </a>\r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebarWrapper\">\r\n          <ul className=\"nav\">\r\n            {/* If we are on responsive, we want both links from navbar and sidebar\r\n                            to appear in sidebar, so we render here HeaderLinks */}\r\n            {/*this.state.width <= 992 ? <HeaderLinks {...this.props} /> : null*/}\r\n            {/*\r\n                            here we render the links in the sidebar\r\n                            if the link is simple, we make a simple link, if not,\r\n                            we have to create a collapsible group,\r\n                            with the speciffic parent button and with it's children which are the links\r\n                        */}\r\n            {dashboardRoutes.map((prop, key) => {\r\n              var st = {};\r\n              st[prop[\"state\"]] = !this.state[prop.state];\r\n              if (prop.collapse) {\r\n                return (\r\n                  <li className={this.activeRoute(prop.path)} key={key}>\r\n                    <a onClick={() => this.setState(st)}>\r\n                      <i className={prop.icon} />\r\n                      <p>\r\n                        {prop.name + (this.state[prop.state] ? \"\" : this.getChangeCount())}\r\n                        <b\r\n                          className={\r\n                            this.state[prop.state]\r\n                              ? \"caret rotate-180\"\r\n                              : \"caret\"\r\n                          }\r\n                        />\r\n                      </p>\r\n                    </a>\r\n                    <Collapse in={this.state[prop.state]}>\r\n                      <ul className=\"nav\">\r\n                        <li className={\"\"} key={5}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.newPortfolio()}>\r\n                              <i className={\"fa fa-file-text-o\"} />\r\n                              <p>New</p>\r\n                            </a>\r\n                        </li>                      \r\n                        <li className={\"\"} key={6}>\r\n                          <a className=\"nav-link\" onClick={() => this.onOpenClick()}>\r\n                              <i className={\"fa fa-folder-open\"} />\r\n                              <p>Open</p>\r\n                            </a>\r\n                        </li>\r\n                        <li className={\"\"} key={7}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.downloadPortfolio()}>\r\n                            <i className={\"fa fa-floppy-o\"} />\r\n                            <p>Save{this.getChangeCount()}</p>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </Collapse>\r\n                    <InputFiles \r\n                      onChange={this.props.uploadPortfolioFromFile}\r\n                      accept=\"application/json\">\r\n                      <a id=\"input-files\">\r\n                      </a>\r\n                    </InputFiles>\r\n                  </li>\r\n                );\r\n              } else {\r\n                if (prop.redirect) {\r\n                  return null;\r\n                } else {\r\n                  return (\r\n                    <li className={this.activeRoute(prop.path)} key={key}>\r\n                      <NavLink\r\n                        to={prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n            <li className={\"\"} key={8}>\r\n              <a className=\"nav-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className={\"fa fa-comments\"} />\r\n                <p>Feedback</p>\r\n              </a>    \r\n            </li>\r\n            <li className={\"\"} key={9}>\r\n              <a className=\"nav-link\" onClick={() => this.props.showHelpPanel()}>\r\n                <i className={\"fa fa-question-circle\"} />\r\n                <p>Help</p>\r\n              </a>    \r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n} from \"react-bootstrap\";\r\nimport { formatUtils } from './../../utils/FormatUtils';\r\n\r\nclass HeaderLinks extends Component {\r\n\r\n  getTotalBalance() {\r\n    if(this.props.userModel != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    } \r\n\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav pullRight>\r\n          <NavItem eventKey={3} href=\"#/portfolio\">\r\n            <p>{formatUtils.toShortFormat(this.getTotalBalance())}</p>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\n// links that appear in navbar - they are separated from this component (navbar) so that we can redner them on responsive in sidebar as well\r\n\r\nimport HeaderLinks from \"./HeaderLinks.jsx\";\r\n\r\n// we import here the routes for dashboard pages (links that appear in sidebar) to set navbar's name\r\n\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMinimizeSidebar = this.handleMinimizeSidebar.bind(this);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n  }\r\n  makeBrand() {\r\n    var name;\r\n    dashboardRoutes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n  // function that makes the sidebar from normal to mini and vice-versa\r\n  handleMinimizeSidebar() {\r\n    document.body.classList.toggle(\"sidebar-mini\");\r\n  }\r\n  // function for responsive that hides/shows the sidebar\r\n  mobileSidebarToggle(e) {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <div className=\"navbar-minimize\">\r\n          <button\r\n            id=\"minimizeSidebar\"\r\n            className=\"btn btn-default btn-fill btn-round btn-icon\"\r\n            onClick={this.handleMinimizeSidebar}\r\n          >\r\n            <i className=\"fa fa-ellipsis-v visible-on-sidebar-regular\" />\r\n            <i className=\"fa fa-navicon visible-on-sidebar-mini\" />\r\n          </button>\r\n        </div>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            {/* Here we create navbar brand, based on route name */}\r\n            {this.makeBrand()}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n\r\n        {/* Here we import the links that appear in navbar */}\r\n        {window.innerWidth > 992 ? (\r\n          <HeaderLinks \r\n            {...this.props}\r\n          />\r\n        ) : null}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nclass Footer extends Component {\r\n  /*\r\n  <li>\r\n    <a href=\"https://facebook.com/link-here\">\r\n      <i className=\"fa fa-facebook\"></i> Facebook \r\n    </a>\r\n  </li>\r\n  <li>\r\n    <a href=\"https://googleplus.com/link-here\">\r\n      <i className=\"fa fa-google-plus\"></i> Google Plus \r\n    </a>\r\n  </li>\r\n  */\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={\r\n          \"footer\" +\r\n          (this.props.transparent !== undefined ? \" footer-transparent\" : \"\")\r\n        }\r\n      >\r\n        <div\r\n          className={\r\n            \"container\" + (this.props.fluid !== undefined ? \"-fluid\" : \"\")\r\n          }\r\n        >\r\n          <nav className=\"pull-left\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://twitter.com/forkfol_io\">\r\n                  <i className=\"fa fa-twitter\"></i> Twitter \r\n                </a>\r\n              </li>             \r\n            </ul>\r\n          </nav>\r\n          <p className=\"copyright pull-right\">\r\n            Copyright &copy; {1900 + new Date().getYear()}{\" \"} ForkFol.io {packageJson.version}\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","/*jshint esversion: 6 */\r\n\r\nexport default class Ticker {\r\n  constructor(pair, price, time, percentChange24h) {\r\n    this.pair = pair;\r\n    this.price = price;\r\n    this.time = time;\r\n    this.percentChange24h = percentChange24h;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class Currency {\r\n  constructor(code, name, rank, isFiat = false) {\r\n    this.code = code;\r\n    this.name = name;\r\n    this.rank = rank;\r\n    this.isFiat = isFiat;\r\n    this.meta = null;\r\n  }\r\n}\r\n","function getRestURL() {\r\n    console.log(window.location.host)\r\n    if (window.location.host === 'localhost:3000') {\r\n        //return 'http://localhost:8080/'\r\n        // bypass if server is not running on localhost\r\n        return 'https://forkfol.io/dummydata/';\r\n    } \r\n\r\n    return 'https://rest.forkfol.io/rest/';\r\n}\r\n\r\nfunction isLocalhost() {\r\n    console.log(\"Is localhost: \" + (window.location.host === 'localhost:3000'))\r\n    return window.location.host === 'localhost:3000';\r\n}\r\n\r\nexport const config = {\r\n    restURL: getRestURL(),\r\n    isLocalhost: isLocalhost()\r\n}","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col, Modal} from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass ConfirmNewPortfolioDialog extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm new portfolio</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                  You have {this.props.changeCount} unsaved change{this.props.changeCount > 1 ? \"s\" : \"\"} in your current portfolio. If you create a\r\n\t\t              new portfolio, all unsaved changes will be lost.\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    Are you sure you want to create a new portfolio?\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.createNew()}\r\n                  >\r\n                    Yes\r\n                  </Button>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.saveCurrentAndCreateNew()}\r\n                  >\r\n                    Save current and create new\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmNewPortfolioDialog;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nclass DemoCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={12} md={12}>\r\n                  <p><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> You're seeing a live demo, showcasing features on a sample portfolio. <a href=\"https://forkfol.io/app/\">Click here to create your portfolio now <i className=\"fa fa-check\" aria-hidden=\"true\"></i></a></p>            \r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DemoCard;\r\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\r\n\r\nvar indexRoutes = [\r\n  { path: \"/\", name: \"Home\", component: Dashboard }\r\n];\r\n\r\nexport default indexRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// react component that creates notifications (like some alerts with messages)\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\nimport Header from \"components/Header/Header.jsx\";\r\nimport Footer from \"components/Footer/Footer.jsx\";\r\nimport Promise from \"bluebird\";\r\n// dinamically create dashboard routes\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\n// style for notifications\r\nimport { style } from \"variables/Variables.jsx\";\r\nimport { userModel, resModel } from \"../../model/init/ResModelInit.js\";\r\n\r\nimport Ticker from \"../../model/Ticker\";\r\nimport demofolio from '../../model/init/demofolio.json';\r\nimport Currency from \"../../model/Currency\";\r\nimport CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport UserModel from \"../../model/UserModel\";\r\nimport { config } from \"../../config/Config.js\";\r\nimport FileSaver from 'file-saver';\r\nimport cookie from 'react-cookies';\r\nimport ConfirmNewPortfolioDialog from \"../../views/dialogs/ConfirmNewPortfolioDialog\";\r\nimport DemoCard from \"../../views/common/DemoCard\";\r\nimport ReactGA from 'react-ga';\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNotificationClick = this.handleNotificationClick.bind(this);\r\n    \r\n    this.showHelpPanel = this.showHelpPanel.bind(this);\r\n    this.hideHelpPanel = this.hideHelpPanel.bind(this);\r\n\r\n    this.showAddTradeDialog = this.showAddTradeDialog.bind(this);\r\n    this.hideAddTradeDialog = this.hideAddTradeDialog.bind(this);\r\n    this.showAddFundingDialog = this.showAddFundingDialog.bind(this);\r\n    this.hideAddFundingDialog = this.hideAddFundingDialog.bind(this);\r\n\r\n    this.showEditTradeDialog = this.showEditTradeDialog.bind(this);\r\n    this.hideEditTradeDialog = this.hideEditTradeDialog.bind(this);\r\n    this.showEditFundingDialog = this.showEditFundingDialog.bind(this);\r\n    this.hideEditFundingDialog = this.hideEditFundingDialog.bind(this);\r\n\r\n    this.hideConfirmNewPortfolioDialog = this.hideConfirmNewPortfolioDialog.bind(this);\r\n\r\n    this.addTransaction = this.addTransaction.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.updateTransaction = this.updateTransaction.bind(this);\r\n\r\n    this.setEditedTransaction = this.setEditedTransaction.bind(this);\r\n\r\n    this.fetchRecentPrices = this.fetchRecentPrices.bind(this);\r\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\r\n    this.getCurrenciesToFetch = this.getCurrenciesToFetch.bind(this);\r\n    this.fetchAllAndRender = this.fetchAllAndRender.bind(this);\r\n    this.fetchHistoday = this.fetchHistoday.bind(this);\r\n    this.fetchMeta = this.fetchMeta.bind(this);\r\n    this.isDemo = this.isDemo.bind(this);\r\n\r\n    this.updateUserModel = this.updateUserModel.bind(this);\r\n\r\n    this.newPortfolio = this.newPortfolio.bind(this);\r\n    this.openPortfolio = this.openPortfolio.bind(this);\r\n    this.savePortfolio = this.savePortfolio.bind(this);\r\n    this.saveCurrentAndCreateNewPortfolio = this.saveCurrentAndCreateNewPortfolio.bind(this);\r\n\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      isHelpPanelShown: false,\r\n      isAddTradeDialogShown: false,\r\n      isAddFundingDialogShown: false,\r\n      isEditTradeDialogShown: false,\r\n      isEditFundingDialogShown: false,\r\n      isConfirmNewPortfolioDialogShown: false,\r\n      userModel: userModel,\r\n      resModel: resModel,\r\n      editedTransaction: null,\r\n      changeCount: 0\r\n    };\r\n  }\r\n  \r\n  toTokensString(currencies) {\r\n    let str = \"\";\r\n    for(let c of currencies) {\r\n      str += (c.code + \",\");\r\n    }\r\n  \r\n    return str.slice(0,-1);\r\n  }\r\n\r\n  isDemo() {\r\n    return new Promise((accept, reject) => {\r\n      fetch('appversion.json').then(res => res.json()).then((out) => {\r\n        accept(out.isDemo);\r\n        return;\r\n      }).catch(err => { \r\n        reject(err);\r\n        return;  \r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchRecentPrices() {\r\n    let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n    if(currencies.length > 0) {\r\n      fetch(config.restURL + 'recent?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let tickers = JSON.parse(body);\r\n        let count = 0;\r\n        for (let i = 0; i < tickers.length; i++) {\r\n          let newPrice = parseFloat(tickers[i].l);\r\n          //console.log(\"--------\")\r\n          //console.log(\"Received token: \");\r\n          //console.log(tickers[i])\r\n          //console.log(\"Existing ticker:\");\r\n          //console.log(resModel.recentTickers.get(tickers[i].c))\r\n          // remove shitcoin duplicates\r\n          if(newPrice > 0.001) {\r\n            // if ticker doesn't exist or is updated\r\n            if(resModel.recentTickers.get(tickers[i].c) == null ||\r\n              newPrice !== resModel.recentTickers.get(tickers[i].c).price) {\r\n              let pair = new CurrencyPair(tickers[i].c, resModel.usd);\r\n              resModel.recentTickers.set(tickers[i].c, new Ticker(pair, newPrice, new Date(parseInt(tickers[i].t, 10) * 1000), tickers[i].p))\r\n              count++;\r\n            }\r\n          }\r\n        }\r\n        // if there is update, render\r\n        if(count > 0) {\r\n          console.log(\"Recent prices updated (\" + count + \" tickers).\")\r\n          let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n          this.setState({\r\n            userModel: newModel,\r\n            resModel: this.state.resModel.clone()\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // fetches a list of all curencies, crypto and fiat, and stores them in resModel\r\n  fetchCurrencies() {\r\n    return new Promise((accept, reject) => {\r\n      let url = config.restURL + (config.isLocalhost ? 'currencies.json' : 'currencies');\r\n      console.log(\"Fetching: \" + url)\r\n      fetch(url).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        for (let c of JSON.parse(body)) {\r\n          let currency = new Currency(c.c, c.n, c.r, c.f);\r\n          resModel.dailyTickers.set(currency, []);\r\n          if(currency.code === 'USD') {\r\n            resModel.usd = currency;\r\n          }\r\n        }\r\n        accept();\r\n        return;\r\n      })\r\n    });\r\n  }\r\n  \r\n  getCurrenciesToFetch(userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const k of currentPortfolio.balances.keys()) {\r\n      currencies.push(k);\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n  \r\n  fetchAllAndRender(currencies, daysSince) {\r\n\r\n    // fetch meta first for loading speed\r\n    this.fetchMeta().then(() => {\r\n      // prepare all promises\r\n      const promises = [];\r\n      for(let currency of currencies) {\r\n        promises.push(this.fetchHistoday(currency, daysSince));\r\n      }\r\n    \r\n      // resolve, then render\r\n      Promise.all(promises).then(() => {\r\n        console.log(\"History prices updated (\" + promises.length + \" series).\");\r\n\r\n        // re-render\r\n        let newResModel = this.state.resModel.clone();\r\n        let newUserModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, newResModel);\r\n        this.setState({\r\n          userModel: newUserModel,     \r\n          resModel: newResModel\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchHistoday(currency, days) {\r\n    return new Promise((accept, reject) => {\r\n      fetch(config.restURL + 'histoday?range=' + days + '&tokens=' + currency.code)\r\n      .then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let repacked = [];\r\n        for (let t of JSON.parse(body)) {\r\n          let pair = new CurrencyPair(currency, resModel.usd);\r\n          repacked.push(new Ticker(pair, t.l, new Date(parseInt(t.t, 10) * 1000)));\r\n        }\r\n        resModel.dailyTickers.set(currency, repacked);\r\n        accept();\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchMeta() {\r\n    return new Promise((accept, reject) => {\r\n      let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n      if(currencies.length > 0) {\r\n        fetch(config.restURL + 'meta?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n          return response.text()\r\n        }).then((body) => {\r\n          let tickers = JSON.parse(body);\r\n          for (let i = 0; i < tickers.length; i++) {\r\n            let currency = resModel.findCurrencyByCode(tickers[i].c);\r\n            currency.meta = JSON.parse(tickers[i].m);\r\n          }\r\n          accept();\r\n          return;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ \r\n      _notificationSystem: this.refs.notificationSystem,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.action === \"PUSH\" &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    // start fetching prices based on user model\r\n    this.fetchCurrencies().then(() => {\r\n      this.isDemo().then((isDemo) => {\r\n        let showHelpPanel = false;\r\n        let newModel;\r\n        if(!isDemo) {\r\n          // check if cookie is not set, then it's the first load, and set it always\r\n          showHelpPanel = cookie.load('showGettingStarted') === undefined;\r\n          cookie.save('showGettingStarted', \"1\", { path: '/', maxAge: 31536000});\r\n\r\n          // if app, set model from local storage if any, or empty\r\n          let portfolioJson = localStorage.getItem('portfolio01');\r\n          if(portfolioJson != null && portfolioJson !== '') {\r\n            let portfolioObject = JSON.parse(portfolioJson);\r\n            console.log('Loaded portfolio from local storage.')\r\n            newModel = this.updateUserModel(portfolioObject, portfolioObject.changeCount);\r\n          } else {\r\n            newModel = this.updateUserModel({}, 0);\r\n          }\r\n        } else {\r\n          // if demo, set model from demofolio file\r\n          console.log('Loaded default portfolio.')\r\n          newModel = this.updateUserModel(demofolio, 0);\r\n        }\r\n\r\n        this.setState({\r\n          isHelpPanelShown: showHelpPanel,\r\n          isDemo: isDemo,\r\n        });\r\n\r\n        if(newModel.transactions[0] != null) {\r\n          let daysSince = newModel.getDaysSinceFirstTx();\r\n          this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), daysSince + 2);\r\n        }\r\n\r\n        // start checking recent prices periodically\r\n        this.fetchRecentPrices();\r\n        setInterval(this.fetchRecentPrices, 60000);\r\n      });\r\n    });\r\n    \r\n\r\n    if (document.documentElement.className.indexOf(\"nav-open\") !== -1) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n  // function that shows/hides notifications - it was put here, because the wrapper div has to be outside the main-panel class div\r\n  handleNotificationClick(position) {\r\n    var color = Math.floor(Math.random() * 4 + 1);\r\n    var level;\r\n    switch (color) {\r\n      case 1:\r\n        level = \"success\";\r\n        break;\r\n      case 2:\r\n        level = \"warning\";\r\n        break;\r\n      case 3:\r\n        level = \"error\";\r\n        break;\r\n      case 4:\r\n        level = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.state._notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n      message: (\r\n        <div>\r\n          Notification text\r\n        </div>\r\n      ),\r\n      level: level,\r\n      position: position,\r\n      autoDismiss: 15\r\n    });\r\n  }\r\n\r\n  // TODO: merge show hide to one\r\n\r\n  showHelpPanel() {\r\n    this.setState({ isHelpPanelShown: true });\r\n  }\r\n\r\n  hideHelpPanel() {\r\n    this.setState({ isHelpPanelShown: false });\r\n  }\r\n\r\n  showAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: true });\r\n  }\r\n\r\n  hideAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: false });\r\n  }\r\n\r\n  showAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: true });\r\n  }\r\n\r\n  hideAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: false });\r\n  }\r\n\r\n  showEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: true });\r\n  }\r\n\r\n  hideEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: false });\r\n  }\r\n\r\n  showEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: true });\r\n  }\r\n  \r\n  hideEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: false });\r\n  }\r\n\r\n  \r\n  hideConfirmNewPortfolioDialog() {\r\n    this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n  }\r\n\r\n  addTransaction(tx) {\r\n    let isOldest = true, hasNewBalance = true;\r\n    // check if historic prices need to be updated\r\n    if(this.state.userModel.portfolios[1] != null) {\r\n      let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n      isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n      hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n    }\r\n\r\n    // add transaction and sort\r\n    this.state.userModel.transactions.push(tx);\r\n    this.state.userModel.transactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  updateTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, add, sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== this.state.editedTransaction;\r\n    })\r\n    newTransactions.push(tx);\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  removeTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) >= dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, and sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== tx;\r\n    });\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n  \r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction removed. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  setEditedTransaction(tx) {\r\n    this.setState({ editedTransaction: tx });\r\n  }\r\n\r\n  newPortfolio() {\r\n    // if there are unsaved changes, show confirm dialog\r\n    if(this.state.changeCount > 0 && !this.state.isConfirmNewPortfolioDialogShown) {\r\n      this.setState({\r\n        isConfirmNewPortfolioDialogShown: true\r\n      });\r\n    } else {\r\n      console.log(\"New portfolio created\");\r\n      // save to model\r\n      this.updateUserModel({}, 0);\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', '');\r\n      }\r\n\r\n      this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n\r\n      ReactGA.event({category: 'User', action: 'New'});\r\n    }\r\n  }\r\n\r\n  saveCurrentAndCreateNewPortfolio() {\r\n    this.savePortfolio();\r\n    this.newPortfolio();\r\n  }\r\n\r\n\r\n  updateUserModel(fileFormatPortfolio, changeCount) {\r\n    let transactions = [], positions = [];\r\n    // parse fileFormatPortfolio and get transactions \r\n    if(fileFormatPortfolio.transactions) {\r\n      transactions = this.stringifiedToObjectsTransactions(fileFormatPortfolio.transactions);\r\n    }\r\n    // parse fileFormatPortfolio and get positions \r\n    if(fileFormatPortfolio.positions) {\r\n      positions = fileFormatPortfolio.positions;\r\n    }\r\n    \r\n    // update userModel with new transactions\r\n    let newModel = new UserModel(transactions, positions, this.state.resModel);\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: changeCount\r\n    });\r\n\r\n    return newModel;\r\n  }\r\n\r\n  openPortfolio(files) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      // TODO: check if format ok, version number\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', reader.result);\r\n      }\r\n\r\n      // parse json string to object\r\n      let portfolioObj = JSON.parse(reader.result);\r\n\r\n      // set new model, and get prices\r\n      let newModel = this.updateUserModel(portfolioObj, 0);\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n\r\n      ReactGA.event({category: 'User', action: 'Open'});\r\n    }, false);\r\n    if (files.length > 0) {\r\n      reader.readAsText(files[0]);\r\n    } else {\r\n      //this.props.showError(new InpulidationError(\"Portfolio file should be in JSON file format.\"));\r\n    }\r\n  }\r\n\r\n  savePortfolio() {\r\n    // create json string\r\n    let portfolioJson = this.getPortfolioJson(this.state.userModel, 0);\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', portfolioJson);\r\n    }\r\n\r\n    // save to file\r\n    let file = new File([portfolioJson], \"my-forkfolio-\" + this.state.userModel.transactions.length + \".json\", {type: \"text/plain;charset=utf-8\"});\r\n    FileSaver.saveAs(file);\r\n\r\n    this.setState({\r\n      changeCount: 0\r\n    });\r\n\r\n    ReactGA.event({category: 'User', action: 'Save'});\r\n  }\r\n\r\n  getPortfolioJson(userModel, changeCount) {\r\n    let fileTransactions = [];\r\n    for(let tx of userModel.transactions) {\r\n      let trade = {\r\n        isTrade: tx.isTrade,\r\n        isBuy: tx.isBuy,\r\n        pair: tx.pair.base.code + \"/\" + tx.pair.counter.code,\r\n        baseAmount: tx.baseAmount,\r\n        counterAmount: tx.counterAmount,\r\n        time: tx.time.getTime(),\r\n        comment: tx.comment\r\n      }\r\n      fileTransactions.push(trade);\r\n    }\r\n    let portfolioFile = {\r\n      version: 1,\r\n      credit: \"This json file is created by ForkFolio App at https://forkfol.io\",\r\n      transactions: fileTransactions,\r\n      changeCount: changeCount\r\n    }\r\n\r\n    return JSON.stringify(portfolioFile, null, \"\\t\");\r\n  }\r\n\r\n  stringifiedToObjectsTransactions(fileFormatTransactions) {\r\n    // got through file transactions, and create objects from pair strings\r\n    let transactions = [];\r\n    for(let t of fileFormatTransactions) {\r\n      let pairStr = t.pair.split('/');\r\n      let base = resModel.findCurrencyByCode(pairStr[0]);\r\n      let counter = resModel.findCurrencyByCode(pairStr[1]);\r\n      if(base !== null && counter !== null) {\r\n        let pair = new CurrencyPair(base, counter);\r\n        let tx = new Transaction(t.isTrade, t.isBuy, pair, t.baseAmount, t.counterAmount, new Date(t.time), t.comment);\r\n        transactions.push(tx);\r\n      }\r\n    }\r\n\r\n    return transactions;\r\n  }\r\n\r\n  render() {\r\n    let confirmNewPortfolioDialog = (\r\n      <ConfirmNewPortfolioDialog\r\n        isDialogShown={this.state.isConfirmNewPortfolioDialogShown}\r\n        hideDialog={this.hideConfirmNewPortfolioDialog}\r\n        createNew={this.newPortfolio}\r\n        saveCurrentAndCreateNew={this.saveCurrentAndCreateNewPortfolio}\r\n        changeCount={this.state.changeCount}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props}\r\n          newPortfolio={this.newPortfolio} \r\n          uploadPortfolioFromFile={this.openPortfolio} \r\n          downloadPortfolio={this.savePortfolio} \r\n          showHelpPanel={this.showHelpPanel} \r\n          userModel={this.state.userModel}\r\n          resModel={this.state.resModel}\r\n          changeCount={this.state.changeCount}\r\n        />\r\n        <div\r\n          className={\r\n            \"main-panel\" +\r\n            (this.props.location.pathname === \"/maps/full-screen-maps\"\r\n              ? \" main-panel-maps\"\r\n              : \"\")\r\n          }\r\n          ref=\"mainPanel\"\r\n        >\r\n          <Header \r\n            location={this.props.location}\r\n            userModel={this.state.userModel}\r\n            resModel={this.state.resModel}\r\n          />\r\n          {this.state.isDemo ? (\r\n            <div className=\"demo-content\">\r\n              <DemoCard />\r\n            </div>\r\n          ) : \"\"\r\n          }\r\n          \r\n          <Switch>\r\n            {dashboardRoutes.map((prop, key) => {\r\n              if (prop.collapse) {\r\n                return prop.views.map((prop, key) => {\r\n                  if (prop.name === \"Notifications\") {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        key={key}\r\n                        render={routeProps => (\r\n                          <prop.component\r\n                            {...routeProps}\r\n                            handleClick={this.handleNotificationClick}\r\n                          />\r\n                        )}\r\n                      />\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        component={prop.component}\r\n                        key={key}\r\n                      />\r\n                    );\r\n                  }\r\n                });\r\n              } else {\r\n                if (prop.redirect)\r\n                  return (\r\n                    <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                  );\r\n                else\r\n                  return (\r\n                    <Route\r\n                      path={prop.path}\r\n                      //component={prop.component}\r\n                      key={key}\r\n                      render={routeProps => (\r\n                        <prop.component\r\n                          {...routeProps}\r\n                          handleClick={this.handleNotificationClick}\r\n                          userModel={this.state.userModel}\r\n                          resModel={this.state.resModel}\r\n\r\n                          isHelpPanelShown={this.state.isHelpPanelShown}\r\n                          hideHelpPanel={this.hideHelpPanel}\r\n\r\n                          isAddTradeDialogShown={this.state.isAddTradeDialogShown}\r\n                          showAddTradeDialog={this.showAddTradeDialog}\r\n                          hideAddTradeDialog={this.hideAddTradeDialog}\r\n\r\n                          isAddFundingDialogShown={this.state.isAddFundingDialogShown}\r\n                          showAddFundingDialog={this.showAddFundingDialog}\r\n                          hideAddFundingDialog={this.hideAddFundingDialog}\r\n\r\n                          isEditTradeDialogShown={this.state.isEditTradeDialogShown}\r\n                          showEditTradeDialog={this.showEditTradeDialog}\r\n                          hideEditTradeDialog={this.hideEditTradeDialog}\r\n\r\n                          isEditFundingDialogShown={this.state.isEditFundingDialogShown}\r\n                          showEditFundingDialog={this.showEditFundingDialog}\r\n                          hideEditFundingDialog={this.hideEditFundingDialog}\r\n\r\n                          addTransaction={this.addTransaction}\r\n                          removeTransaction={this.removeTransaction}\r\n\r\n                          updateTransaction={this.updateTransaction}\r\n                          setEditedTransaction={this.setEditedTransaction}\r\n                          editedTransaction={this.state.editedTransaction}\r\n                        />\r\n                      )}\r\n                    />\r\n                  );\r\n              }\r\n            })}\r\n          </Switch>\r\n          <Footer fluid />\r\n          {this.state.isConfirmNewPortfolioDialogShown ? confirmNewPortfolioDialog : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport indexRoutes from \"./routes/index.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard.css?v=1.1.1\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport ReactGA from 'react-ga';\r\n\r\nconsole.log(window.location.pathname + window.location.hash);\r\n\r\nfunction initializeReactGA() {\r\n  ReactGA.initialize('UA-112760038-1');\r\n}\r\n\r\nfunction render() {\r\n  console.log(\"Rendering..\");\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <Switch>\r\n        {indexRoutes.map((prop, key) => {\r\n          return <Route \r\n                  path={prop.path} \r\n                  key={key}\r\n                  render={routeProps => (\r\n                    <prop.component\r\n                      {...routeProps}\r\n                    />\r\n                  )}\r\n                 />;\r\n        })}\r\n      </Switch>\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n\r\ninitializeReactGA();\r\nrender();\r\n"],"sourceRoot":""}