{"version":3,"sources":["views/dialogs/ConfirmRemoveTransactionDialog.jsx","utils/FormatUtils.js","views/dialogs/AddTradeDialog.jsx","views/dialogs/CommonTradeDialog.jsx","views/dialogs/EditTradeDialog.jsx","web3/common.js","components/CustomButton/CustomButton.jsx","components/Card/Card.jsx","assets/img/full-screen-image-3.jpg","views/PositionsView.jsx","web3/Uniswap.js","web3/dYdXLong.js","web3/dYdXShort.js","web3/GammaOptions.js","web3/Manual.js","web3/UniswapV3.js","views/positions/AddSubpositionCard.jsx","views/positions/subpositions/UniswapV2Card.jsx","views/positions/subpositions/UniswapV3Card.jsx","views/positions/subpositions/DYDXLongCard.jsx","views/positions/subpositions/DYDXShortCard.jsx","views/positions/subpositions/GammaOptionsCard.jsx","views/positions/PositionChartCard.jsx","model/CurrencyPair.js","model/Transaction.js","web3/CoinGeckoPrices.js","views/common/InsightsCard.jsx","views/common/HelpCard.jsx","views/dialogs/CommonFundingDialog.jsx","views/dialogs/AddFundingDialog.jsx","model/Portfolio.js","utils/DateUtils.js","model/UserModel.js","model/init/ResModelInit.js","model/ResModel.js","views/PortfolioView.jsx","views/TradesView.jsx","views/dialogs/EditFundingDialog.jsx","views/FundingView.jsx","views/common/PortfolioPie.jsx","views/PerformanceView.jsx","routes/dashboard.jsx","components/Input/InputFiles.js","components/Sidebar/Sidebar.jsx","components/Header/HeaderLinks.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","model/Ticker.js","model/Currency.js","config/Config.js","views/dialogs/ConfirmNewPortfolioDialog.jsx","views/common/DemoCard.jsx","routes/index.jsx","layouts/Dashboard/Dashboard.jsx","index.js"],"names":["ConfirmRemoveTransactionDialog","this","props","removedTransaction","isTrade","toShortString","time","toISOString","split","comment","_this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","fluid","md","show","isDialogShown","onHide","hideDialog","Header","closeButton","Title","Body","getType","getDescription","getDate","getComment","Footer","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_7__","simple","onClick","bsStyle","fill","wd","type","removeTransaction","Component","formatUtils","value","digits","toLocaleString","minimumFractionDigits","maximumFractionDigits","balance","short","adder","formatNumber","slice","length","style1","Math","abs","react__WEBPACK_IMPORTED_MODULE_2___default","name","userModel","portfolios","tradeCount","transactions","AddTradeDialog","Object","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","getInitialState","console","log","window","location","pathname","ReactGA","modalview","nextProps","title","buttonText","buyAmount","buyAmountError","buyCurrency","buyCurrencyError","sellAmount","sellAmountError","sellCurrency","sellCurrencyError","date","Date","dateError","buyCurrencies","getBuyCurrencies","sellCurrencies","getSellCurrencies","buyRank","rank","isFiat","sellRank","pair","CurrencyPair","isBuy","isValidBuyAmount","isValidBuyCurrency","isValidSellAmount","isValidSellCurrency","isValidDate","pairBuy","getPair","parseFloat","tx","Transaction","addTransaction","setState","CommonTradeDialog","isValidNumber","isInvalid","_step","_iterator","_createForOfIteratorHelper","resModel","dailyTickers","keys","s","n","done","c","push","label","code","err","e","f","_step2","_iterator2","balances","strValue","numValue","isNaN","current","isAfter","isBefore","Datetime","moment","placeholder","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","controlId","componentClass","ControlLabel","sm","smOffset","min","onChange","event","target","react_select__WEBPACK_IMPORTED_MODULE_6__","options","_this2","_this3","react_datetime__WEBPACK_IMPORTED_MODULE_8___default","isEnabledDate","dateFormat","timeFormat","closeOnSelect","inputProps","toDate","_this4","_this5","defaultActiveKey","editedTransaction","Container","id","eventKey","Content","animation","Pane","horizontal","getBuyFormGroup","getSellFormGroup","getDateFormGroup","getCommentFormGroup","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_10__","handleSaveButtonClick","bind","EditTradeDialog","baseAmount","toString","getSelectObject","base","counterAmount","counter","currency","updateTransaction","usdcAddress","wbtcAddress","getContractInstance","web3","abi","address","eth","Contract","debalanceETH","currentPrice","startBASE","ethTokens","daiTokens","debalanceDAI","startUNDER","clone","original","assign","create","getPrototypeOf","OptionMath","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","PutCallFlag","S","X","T","r","v","d1","sqrt","d2","CND","exp","x","k","PI","CustomButton","_this$props","special","speciallarge","table","pullRight","block","round","icon","neutral","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","rest","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","btnClasses","cx","btn-special","btn-special-large","btn-table","btn-fill","btn-simple","pull-right","btn-block","btn-wd","btn-round","btn-icon","btn-neutral","btn-social btn-twitter","btn-social btn-facebook","btn-social btn-google","btn-social btn-linkedin","btn-social btn-pinterest","btn-social btn-youtube","btn-social btn-tumblr","btn-social btn-github","btn-social btn-behance","btn-social btn-dribbble","btn-social btn-reddit","btn-social btn-stumbleupon","react__WEBPACK_IMPORTED_MODULE_6___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","Card","hidden","calendar","plain","wizard","undefined","category","textCenter","rightSection","ctAllIcons","ctFullWidth","ctTextCenter","tableFullWidth","content","stats","legend","ftTextCenter","module","exports","__webpack_require__","p","PositionsView","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","displayDescription","description","text","displayLinks","links","map","link","react__WEBPACK_IMPORTED_MODULE_9___default","href","anchor","hideConfirmDialog","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","hideChartDialog","loadWeb3","loadWeb3Account","addService","isConfirmDialogShown","isChartDialogShown","web3DataLoaded","selectedPosition","hash","pageview","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","on","accounts","chainId","info","error","global","ethereum","currentProvider","providers","HttpProvider","enable","getAccounts","_context2","t0","getMessage","positions","Array","isArray","appendedPositions","loadWeb3Data","prepareTableData","tableData","data","i","pos","j","subpositions","subpos","service","Uniswap","marketAddress","under","liq","start","apr","dYdXLong","borrowedBASE","boughtUNDER","openingPrice","dYdXShort","borrowedUNDER","boughtBASE","GammaOptions","isCall","isLong","quantity","strike","daysToExpiry","iv","Manual","extra","UniswapV3","entryPrice","minPrice","maxPrice","feeInPercent","ignoreImpermanentLoss","getMarketData","uniswapTableSet","startDate","daysSinceStart","market","getPrice","CoinGeckoPrices","getTokenPriceInUSD","priceBASEUSD","priceUNDERUSD","totalInBASE","totalOutBASE","extraBASE","getCurrentValue","profitPerMonthTodayToken","profitTodayToken","aprToday","targetPriceUNDER","targetProfitUNDER","profitPerMonthTargetUNDER","aprTargetUNDER","priceAndProfitUNDER","findMaxUNDER","targetHodlUNDER","targetPriceBASE","targetProfitBASE","profitPerMonthTargetBASE","aprTargetBASE","priceAndProfitBASE","findMaxBASE","targetHodlBASE","profitTargetETHUSD","profitTargetTokenUSD","symbol","profitPerMonthTargetETHUSD","profitPerMonthTargetTokenUSD","maxProfitTargetUSD","max","maxProfitPerMonthTargetUSD","position","sizedays","size","days","toFixed","price","lower","higher","totalprofit","monthlyprofit","actions","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_13__","maxBalanceBASE","maxProfitBASE","maxTotalHodlBASE","debalanced","maxBalanceUNDER","maxProfitUNDER","maxTotalHodlUNDER","totalOutUNDER","extraUNDER","sumA","rows","columnName","subName","index","total","accessor","maxWidth","style","whiteSpace","filterMethod","filter","row","toLowerCase","indexOf","Cell","float","filterable","getSumFooter","sortMethod","b","getTotalProfitSum","getMonthlyProfitSum","minWidth","sortable","addTradeDialog","_dialogs_AddTradeDialog__WEBPACK_IMPORTED_MODULE_14__","isAddTradeDialogShown","hideAddTradeDialog","editTradeDialog","_dialogs_EditTradeDialog__WEBPACK_IMPORTED_MODULE_15__","isEditTradeDialogShown","hideEditTradeDialog","confirmRemoveTransactionDialog","_dialogs_ConfirmRemoveTransactionDialog__WEBPACK_IMPORTED_MODULE_16__","tooltipHelpText1","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","components_Card_Card_jsx__WEBPACK_IMPORTED_MODULE_12__","showAddTradeDialog","placement","overlay","react_table__WEBPACK_IMPORTED_MODULE_10__","columns","getTableColumns","defaultPageSize","noDataText","getNoDataText","_positions_PositionChartCard__WEBPACK_IMPORTED_MODULE_26__","addressBASE","addressUNDER","myLIQ","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","myBASE","myUNDER","poolBASE","poolUNDER","poolLIQ","marketInstance","uniswapABI","baseInstance","daiABI","underInstance","getBalance","ethBalance","methods","totalSupply","balanceOf","pow","getDecimals","newPrice","passedDays","oldPrice","setMarketPrice","poolBASEWithAPR","poolUNDERWithAPR","myShare","exactUNDER","exactBASE","exactLIQ","exactUNDERWithFees","exactBASEWithFees","inputAmount","inputPool","outputPool","collateralUNDER","positionBASE","collateralBASE","optionMath","currentValueBASE","blackScholes","newTotalBASE","openingTotalBASE","token1V2","token2V2","L","L2","H","maxToken2","maxToken1","LP_a","LP_b","LP","multiplier","AddSubpositionCard","classCallCheck","possibleConstructorReturn","selectedType","types","react_default","es","react_select_es","getTypes","addSubposition","UniswapV2Card","newValue","subposition","Number","updateSubposition","checked","enabled","onChangeEnabled","tooltipHelpText","getTitle","removeSubposition","onChangeStartBase","onChangeExtraBase","onChangeStartUnder","onChangeExtraUnder","onChangeStartLiq","onChangeExtraLiq","onChangeAPR","UniswapV3Card","onChangeMinPrice","onChangeMaxPrice","onChangeFeeInPercent","onChangeIgnoreImpermanentLoss","customMin","DYDXLongCard","onChangeBorrowedBase","onChangeBoughtUnder","DYDXShortCard","onChangeBorrowedUnder","onChangeBoughtBase","GammaOptionsCard","disabled","onChangeIsLong","onChangeIsCall","onChangeQuantity","onChangeStrike","onChangeDaysToExpiry","onChangeIV","PositionChartCard","chartLoaded","chartData","random","customMinX","customMaxX","customXUserSet","customMinY","customMaxY","assertThisInitialized","prevProps","prevState","userModelLoaded","customPosition","refreshChart","prepareChartData","todayData","futureData","chartData1","aprsBASE","chartData2","profitsBASE","chartData3","profitsUNDER","chartData4","rangeEdgesBASE","rangeEdgesUNDER","chartWindow","getChartWindow","startPrice","step","endPrice","right","debalancedBASE","profitBASE","debalancedUNDER","profitUNDER","y","getRangePoints","left","pivot","profits","maxProfit","prevPoint","firstPoint","leftPoint","rightPoint","chart","height","xAxis","plotLines","color","width","plotBands","from","to","yAxis","opposite","series","tooltip","valueSuffix","turboThreshold","shared","valueDecimals","credits","newSubpos","updatedPosition","currentValue","splice","subpositions_UniswapV2Card","subpositions_UniswapV3Card","subpositions_DYDXLongCard","subpositions_DYDXShortCard","subpositions_GammaOptionsCard","displayCard","tooltipHelpText2","highcharts_react_official_default","highcharts","Highcharts","getPerformanceChartOptions","getSubpositionCards","positions_AddSubpositionCard","denomination","priceThen","priceNow","getLastPrice","profit","url","fetch","response","json","myJson","usd","InsightsCard","getTradingProfit","totalProfit","getProfit","totalDeposits","totalWithdrawals","lastPrice","getPastPrice","currentPortfolio","totalBalance","getTotalCryptoBalance","toShortFormat","addon","getTotalBalance","tradingProfit","fundings","getTotalFundings","holdingProfit","exposureToCrypto","getExposureToCryptoPercentage","react_bootstrap_es","toDecimalFormatStyled","toShortFormatStyled","HelpCard","isHelpPanelShown","lg","xs","class","danger","showAddFundingDialog","src","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","mdOffset","hideHelpPanel","CommonFundingDialog","handleTabSelect","amountError","currencyError","currencies","CommonFundingDialog_createForOfIteratorHelper","selected","amount","isValidAmount","isValidCurrency","DateTime_default","isDeposit","getDepositCurrencies","getWithdrawalCurrencies","activeKey","onSelect","getBuySellFormGroup","AddFundingDialog","isInitialDeposit","Portfolio","previous","genesisTx","Map","calculateTradeCount","calculateCurrencyBalances","count","isNotFunding","get","set","toConsumableArray","entries","sort","getCurrencyBalance","priceInDenomination","Portfolio_createForOfIteratorHelper","currencyBalance","getTime","pastPortfolio","getPastPortfolio","_step3","totalPastBalance","_iterator3","getPastCurrencyBalance","prev","dateUtils","sinceDate","diff","UserModel","arguments","preparePortfolios","empty","sortBalances","UserModel_createForOfIteratorHelper","portfolio","unshift","firstDate","getDaysSince","ResModel","recentTickers","newModel","percentChange24h","getFullYear","getMonth","ResModel_createForOfIteratorHelper","t","sameDay","rangeSelectorModel","inputPosition","align","buttonPosition","buttons","userFriendlyText","PortfolioView","getTableColumnsDesktop","getTableColumnsMobile","getTableData","getLogoURL","innerWidth","addEventListener","updateWidth","PortfolioView_createForOfIteratorHelper","originalLogoURL","replace","downsizeTokenLogo","alt","toGreenRedPercentStyle","substr","meta","logo","_ref3","_ref2","slicedToArray","getPercentChange24h","share","_step4","serie","_iterator4","balanceInDenominated","plotOptions","stacking","lineColor","lineWidth","marker","rangeSelector","assetCount","showPagination","isMobile","addFundingDialog","dialogs_AddFundingDialog","isAddFundingDialogShown","hideAddFundingDialog","common_HelpCard","react_table_es","showPageSizeOptions","common_InsightsCard","Highstock","constructorType","TradesView","mapTradesToState","newestFirst","TradesView_createForOfIteratorHelper","volume","cost","profitPercent","getProfitPercent","prop","profitpercentage","setEditedTransaction","showEditTradeDialog","getTotalCost","getTotalVolume","pairStr","findCurrencyByCode","totalCostInUsd","getTotalProfit","getTypeFooter","_step5","_iterator5","isOnePair","getTotalPrice","getTotalProfitPercentage","getPairFooter","getVolumeFooter","getPriceFooter","getCostFooter","getProfitPercentageFooter","EditFundingDialog","FundingView","FundingView_createForOfIteratorHelper","showEditFundingDialog","fundingCount","editFundingDialog","dialogs_EditFundingDialog","isEditFundingDialogShown","hideEditFundingDialog","PortfolioPie","chartOptions","getPieOptions","PortfolioPie_createForOfIteratorHelper","PerformanceView","rangeClickHandler","daysSince","getDaysSinceFirstTx","getBestCurrentWorstPortfolio","bestPortfolio","best","worstPortfolio","worst","performanceChartOptions","since","setHours","portfoliosSince","getPortfoliosSince","PerformanceView_createForOfIteratorHelper","getPastTotalBalance","getPortfolioSeries","externalCaller","_loop","events","click","common_PortfolioPie","dashboardRoutes","path","component","collapse","views","mini","redirect","pathTo","InputFiles","onInputRef","node","input","preventDefault","files","children","accept","react","onKeyPress","role","tabIndex","objectSpread","display","react_portal_es","ref","React","defaultProps","ps","Sidebar","onOpenClick","isWindows","navigator","platform","routeName","updateDimensions","PerfectScrollbar","refs","sidebarWrapper","suppressScrollX","suppressScrollY","setTimeout","update","destroy","document","getElementById","changeCount","data-color","data-image","image","st","activeRoute","getChangeCount","in","newPortfolio","downloadPortfolio","Input_InputFiles","uploadPortfolioFromFile","activeClassName","rel","showHelpPanel","HeaderLinks","handleMinimizeSidebar","mobileSidebarToggle","body","classList","toggle","documentElement","Brand","makeBrand","Toggle","Header_HeaderLinks","transparent","getYear","packageJson","version","Ticker","Currency","config","host","ConfirmNewPortfolioDialog","createNew","saveCurrentAndCreateNew","DemoCard","aria-hidden","indexRoutes","Dashboard","handleNotificationClick","hideConfirmNewPortfolioDialog","fetchRecentPrices","fetchCurrencies","getCurrenciesToFetch","fetchAllAndRender","fetchHistoday","fetchMeta","isDemo","updateUserModel","openPortfolio","savePortfolio","saveCurrentAndCreateNewPortfolio","_notificationSystem","isConfirmNewPortfolioDialogShown","str","Dashboard_createForOfIteratorHelper","Promise","reject","then","res","out","catch","toTokensString","tickers","JSON","parse","l","parseInt","promises","all","newResModel","newUserModel","repacked","m","notificationSystem","history","action","scrollTop","scrollingElement","mainPanel","demofolio","cookie","load","save","maxAge","portfolioJson","localStorage","getItem","portfolioObject","setInterval","level","floor","addNotification","data-notify","message","autoDismiss","isOldest","hasNewBalance","has","newChangeCount","setItem","getPortfolioJson","_this6","newTransactions","item","fileFormatPortfolio","stringifiedToObjectsTransactions","_this7","reader","FileReader","result","portfolioObj","readAsText","file","File","FileSaver","saveAs","_step6","fileTransactions","_iterator6","trade","portfolioFile","credit","stringify","fileFormatTransactions","_step7","_iterator7","_this8","confirmNewPortfolioDialog","dialogs_ConfirmNewPortfolioDialog","NotificationSystem_default","components_Sidebar_Sidebar","components_Header_Header","common_DemoCard","render","routeProps","handleClick","components_Footer_Footer","initialize","ReactDOM"],"mappings":"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","file":"static/js/main.aaaf6c03.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\n\r\nclass ConfirmRemoveTransactionDialog extends Component {\r\n\r\n  getType() {\r\n    if (this.props.removedTransaction != null) {\r\n      return this.props.removedTransaction.isTrade ? \"trade\" : \"funding\";\r\n    }\r\n  }\r\n\r\n  getDescription() {\r\n    if (this.props.removedTransaction != null) {\r\n      return (this.props.removedTransaction.isTrade ? \"Trade\" : \"Funding\") + \": \" + this.props.removedTransaction.toShortString();\r\n    }\r\n  }\r\n\r\n  getDate() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Date: \" + this.props.removedTransaction.time.toISOString().split('T')[0];\r\n    }\r\n  }\r\n\r\n  getComment() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Comment: \" + this.props.removedTransaction.comment;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm remove</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                    Are you sure you want to remove this {this.getType()}?\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    {this.getDescription()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getDate()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getComment()}\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.removeTransaction()}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmRemoveTransactionDialog;\r\n","/*jshint esversion: 6 */\r\nimport React  from 'react';\r\n\r\nclass FormatUtils {\r\n  formatNumber(value, digits) {\r\n    if (value != null) {\r\n      return value.toLocaleString('en-US', { minimumFractionDigits: digits, maximumFractionDigits: digits });\r\n    }\r\n\r\n    return \"0\";\r\n  }\r\n\r\n  toShortFormat(balance) {\r\n    let short = balance;\r\n    let adder = \"\";\r\n    if(balance > 10000000000) {\r\n      short = balance / 1000000000;\r\n      adder = \"B\";\r\n    } else if(balance > 10000000) {\r\n      short = balance / 1000000;\r\n      adder = \"M\";\r\n    } else if(balance > 10000) {\r\n      short = balance / 1000;\r\n      adder = \"K\";\r\n    }\r\n\r\n    // special case if portfolio is negative\r\n    if(balance < 0) {\r\n      let value = formatUtils.formatNumber(short, 2) + adder;\r\n      return \"-$\" + value.slice(1, value.length);\r\n    }\r\n\r\n    return \"$\" + formatUtils.formatNumber(short, 2) + adder;\r\n  }\r\n\r\n  toGreenRedPercentStyle(value) {\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.formatNumber(value, 2) + \"%\"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>navigate to the Funding page,</li>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n}\r\n\r\nexport let formatUtils = new FormatUtils();","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/addTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // track ga\r\n    /*if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addTrade');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(nextProps) {\r\n    return {\r\n      isDialogShown: nextProps.isDialogShown,\r\n      title: \"Add trade\",\r\n      buttonText: \"Add\",\r\n      buyAmount: \"\",\r\n      buyAmountError: null,\r\n      buyCurrency: null,\r\n      buyCurrencyError: null,\r\n      sellAmount: \"\",\r\n      sellAmountError: null,\r\n      sellCurrency: null,\r\n      sellCurrencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: \"\",\r\n      buyCurrencies: this.getBuyCurrencies(nextProps),\r\n      sellCurrencies: this.getSellCurrencies(nextProps),\r\n    }\r\n  }\r\n\r\n  getPair(buyCurrency, sellCurrency, buyAmount, sellAmount) {\r\n    let buyRank = buyCurrency.rank + (buyCurrency.isFiat ? -1000000 : 0);\r\n    let sellRank = sellCurrency.rank + (sellCurrency.isFiat ? -1000000 : 0);\r\n    // reverse if needed for ranks, or in special case where ETH/ETH and 0\r\n    if(buyRank < sellRank || (buyRank === sellRank && buyAmount === 0)) {\r\n      return {\r\n        pair: new CurrencyPair(sellCurrency, buyCurrency),\r\n        isBuy: false,\r\n        buyAmount: sellAmount,\r\n        sellAmount: buyAmount\r\n      }\r\n    }\r\n\r\n    return {\r\n      pair: new CurrencyPair(buyCurrency, sellCurrency),\r\n      isBuy: true,\r\n      buyAmount: buyAmount,\r\n      sellAmount: sellAmount\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n      \r\n\r\n      let pairBuy = this.getPair(this.state.buyCurrency.value, this.state.sellCurrency.value, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount));\r\n      let pair = pairBuy.pair;\r\n      let isBuy = pairBuy.isBuy;\r\n      let buyAmount = pairBuy.buyAmount;\r\n      let sellAmount = pairBuy.sellAmount;\r\n\r\n      let tx = new Transaction(true, isBuy, pair, buyAmount, sellAmount, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.setState(this.getInitialState(this.props));\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddTradeDialog;","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Nav,\r\n  NavItem,\r\n  Tab\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonTradeDialog extends Component {\r\n\r\n  isValidBuyAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ buyAmountError: null }) : this.setState({\r\n      buyAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidBuyCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      buyCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ buyCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidSellAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ sellAmountError: null }) : this.setState({\r\n      sellAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidSellCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      sellCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ sellCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n      })\r\n    : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getBuyCurrencies(nextProps) {\r\n    let buyCurrencies = [];\r\n    for(let c of nextProps.resModel.dailyTickers.keys()) {\r\n      buyCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return buyCurrencies;\r\n  }\r\n\r\n  getSellCurrencies(nextProps) {\r\n    let currentPortfolio = nextProps.userModel.portfolios.slice(-1)[0];\r\n    let sellCurrencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      sellCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return sellCurrencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  /*isAllowedAmount(strValue, sellCurrency) {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let numValue = parseFloat(strValue);\r\n    //console.log(sellCurrency.value)\r\n    if(sellCurrency != null) {\r\n      console.log(sellCurrency.value)\r\n      console.log(currentPortfolio.balances.get(sellCurrency.value));\r\n    }\r\n    let isAllowed = sellCurrency != null ? numValue <= currentPortfolio.balances.get(sellCurrency.value) : true;\r\n    return isAllowed;\r\n  }\r\n\r\n  getMaxSellValueAndCurrency(sellCurrency) {\r\n    if(sellCurrency != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.balances.get(sellCurrency.value) + \" \" + sellCurrency.value.code;\r\n    }\r\n\r\n    return \"\";\r\n  }*/\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuyFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          min={0}\r\n          name=\"buyAmount\"\r\n          value={this.state.buyAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              buyAmount: event.target.value\r\n            });\r\n            this.isValidBuyAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.buyAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"buyCurrency\"\r\n          value={this.state.buyCurrency}\r\n          options={this.state.buyCurrencies}\r\n          onChange={value => {\r\n            this.setState({ buyCurrency: value });\r\n            this.isValidBuyCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.buyCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getSellFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"sellAmount\"\r\n          min={0}\r\n          value={this.state.sellAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              sellAmount: event.target.value\r\n            });\r\n            this.isValidSellAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.sellAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"sellCurrency\"\r\n          value={this.state.sellCurrency}\r\n          options={this.state.sellCurrencies}\r\n          onChange={value => {\r\n            this.setState({ sellCurrency: value });\r\n            this.isValidSellCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.sellCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate()});\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let defaultActiveKey = \"buy\";\r\n    if(this.props.editedTransaction != null && !this.props.editedTransaction.isBuy) {\r\n      defaultActiveKey = \"sell\";\r\n    }\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tab.Container id=\"tabs-with-dropdown\" defaultActiveKey={defaultActiveKey}>\r\n                    <Row className=\"clearfix\">\r\n                      <Col sm={12}>\r\n                        <Nav bsStyle=\"tabs\">\r\n                          <NavItem eventKey=\"buy\">Buy</NavItem>\r\n                          <NavItem eventKey=\"sell\">Sell</NavItem>\r\n                        </Nav>\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <Tab.Content animation>\r\n                          <Tab.Pane eventKey=\"buy\">\r\n                            <Form horizontal>  \r\n                              {this.getBuyFormGroup(\"Buy amount\", \"How much to buy?\")}\r\n                              {this.getSellFormGroup(\"Cost\", \"How much is cost?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                          <Tab.Pane eventKey=\"sell\">\r\n                            <Form horizontal>  \r\n                              {this.getSellFormGroup(\"Sell amount\", \"How much to sell?\")}\r\n                              {this.getBuyFormGroup(\"Proceeds\", \"How much to receive?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                        </Tab.Content>\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonTradeDialog;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update trade\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      buyAmount: props.editedTransaction.baseAmount.toString(),\r\n      buyAmountError: null,\r\n      buyCurrency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      buyCurrencyError: null,\r\n      buyCurrencies: this.getBuyCurrencies(props),\r\n      sellAmount: props.editedTransaction.counterAmount.toString(),\r\n      sellAmountError: null,\r\n      sellCurrency: this.getSelectObject(props.editedTransaction.pair.counter),\r\n      sellCurrencyError: null,\r\n      sellCurrencies: this.getSellCurrencies(props),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/editTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        buyAmount: nextProps.editedTransaction.baseAmount.toString(),\r\n        buyAmountError: null,\r\n        buyCurrency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        buyCurrencyError: null,\r\n        buyCurrencies: this.getBuyCurrencies(nextProps),\r\n        sellAmount: nextProps.editedTransaction.counterAmount.toString(),\r\n        sellAmountError: null,\r\n        sellCurrency: this.getSelectObject(nextProps.editedTransaction.pair.counter),\r\n        sellCurrencyError: null,\r\n        sellCurrencies: this.getSellCurrencies(nextProps),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editTrade');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.buyCurrency.value, this.state.sellCurrency.value);\r\n      let tx = new Transaction(true, this.state.editedTransaction.isBuy, pair, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount), this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditTradeDialog;","\r\n\t\t\r\n\r\n\r\n// token addresses\r\nexport const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\r\nexport const cdaiAddress = \"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643\";\r\nexport const usdcAddress = \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\";\r\nexport const cusdcAddress = \"0x39aa39c021dfbae8fac545936693ac917d5e7563\";\r\nexport const batAddress = \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\";\r\nexport const sethAddress = \"0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb\";\r\nexport const wethAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\t\t\r\nexport const compAddress = \"0xc00e94cb662c3520282e6f5717214004a7f26888\";\r\nexport const sushiAddress = \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\";\r\nexport const alphaAddress = \"0xa1faa113cbe53436df28ff0aee54275c13b40975\";\r\nexport const ibethAddress = \"0x67B66C99D3Eb37Fa76Aa3Ed1ff33E8e39F0b9c7A\";\r\nexport const bacAddress = \"0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a\";\r\nexport const wbtcAddress = \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\";\r\n\r\nexport const ustAddress = \"0xa47c8bf37f92abed4a126bda807a7b7498661acd\";\r\nexport const mmsftAddress = \"0x41bbedd7286daab5910a1f15d12cbda839852bd7\";\r\nexport const mgoogAddress = \"0x59a921db27dd6d4d974745b7ffc5c33932653442\";\r\nexport const mtwtrAddress = \"0xedb0414627e6f1e3f082de65cd4f9c693d78cca9\";\r\n\r\n\r\n\r\n// uniswap v2 exchange addresses\r\nexport const uniswapV2DAIWETHAddress = \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\";\r\nexport const uniswapV2USDCWETHAddress = \"0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc\";\r\nexport const uniswapV2BATWETHAddress = \"0xb6909b960dbbe7392d405429eb2b3649752b4838\";\r\nexport const uniswapV2DAIUSDCAddress = \"0xae461ca67b15dc8dc81ce7615e0320da1a9ab8d5\";\r\nexport const uniswapV2ALPHAIBETHAddress = \"0x411a9b902f364817a0f9c4261ce28b5566a42875\";\r\nexport const uniswapV2USTmMSFTAddress = \"0xeAfAD3065de347b910bb88f09A5abE580a09D655\";\r\nexport const uniswapV2USTmGOOGAddress = \"0x4b70ccD1Cf9905BE1FaEd025EADbD3Ab124efe9a\";\r\nexport const uniswapV2USTmTWTRAddress = \"0x34856be886A2dBa5F7c38c4df7FD86869aB08040\";\r\nexport const uniswapV2DAIBACAddress = \"0xd4405f0704621dbe9d4dea60e128e0c3b26bddbd\";\r\n\r\nexport const sushiswapV2COMPETHAddress = \"0x31503dcb60119a812fee820bb7042752019f2355\";\r\nexport const sushiswapV2SUSHIETHAddress = \"0x795065dcc9f64b5614c407a6efdc400da6221fb0\";\r\n\r\nexport const inchV2DAIETHAddress = \"0x7566126f2fd0f2dddae01bb8a6ea49b760383d5a\";\r\n\r\nexport function getContractInstance(web3, abi, address) {\t\t\t\r\n\t//console.log(\"Loading contract instance for address: \" + address)\r\n\treturn new web3.eth.Contract(abi, address);\r\n}\r\n\r\n/*export function checkBalances(market, balanceLPT) {\r\n    let balanceETH = balanceLPT * market.poolUNDER / market.poolLIQ;\r\n    let balanceToken = balanceLPT * market.poolBASE / market.poolLIQ;\r\n    return [balanceETH, balanceToken];\r\n}*/\r\n  \r\nexport function debalanceETH(currentPrice, startBASE, ethTokens, daiTokens) {\r\n    let diffDai = startBASE - daiTokens;\r\n    let newETH = ethTokens - diffDai / currentPrice;\r\n    \r\n    return [newETH, startBASE];\r\n  }\r\n  \r\nexport function debalanceDAI(currentPrice, startUNDER, ethTokens, daiTokens) {\r\n    let diffETH = startUNDER - ethTokens;\r\n    let newDAI = daiTokens - diffETH * currentPrice;\r\n    \r\n    return [startUNDER, newDAI];\r\n}\r\n\r\n/**\r\n * @function\r\n * @description Deep clone a class instance.\r\n * @param {object} instance The class instance you want to clone.\r\n * @returns {object} A new cloned instance.\r\n */\r\nexport function clone(original) {\r\n  var copied = Object.assign(\r\n    Object.create(\r\n      Object.getPrototypeOf(original)\r\n    ),\r\n    original\r\n  );\r\n  return copied;\r\n}\r\n\r\n//----------------- BLACK-SCHOLES -----------------------\r\n/*\r\n  PutCallFlag: Either \"put\" or \"call\"\r\n  S: Stock Price\r\n  X: Strike Price\r\n  T: Time to expiration (in years)\r\n  r: Risk-free rate\r\n  v: Volatility\r\n  This is the same one found in http://www.espenhaug.com/black_scholes.html\r\n  but written with proper indentation and a === instead of == because it's\r\n  faster, and it doesn't declare 5 useless variables (although if you really\r\n  want to do it to have more elegant code I left a commented CND function in\r\n  the end)\r\n*/\r\nexport class OptionMath {\r\n\tblackScholes(PutCallFlag, S, X, T, r, v) {\r\n\t  let d1 = (Math.log(S / X) + (r + v * v / 2) * T) / (v * Math.sqrt(T));\r\n\t  let d2 = d1 - v * Math.sqrt(T);\r\n\t  if (PutCallFlag === \"call\") {\r\n\t\treturn ( S * this.CND(d1)-X * Math.exp(-r * T) * this.CND(d2) );\r\n\t  } else {\r\n\t\treturn ( X * Math.exp(-r * T) * this.CND(-d2) - S * this.CND(-d1) );\r\n\t  }\r\n\t}\r\n\r\n\t/* The cummulative Normal distribution function: */\r\n\tCND(x){\r\n\t  if(x < 0) {\r\n\t\treturn ( 1-this.CND(-x) );\r\n\t  } else {\r\n\t\tlet k = 1 / (1 + .2316419 * x);\r\n\t\treturn ( 1 - Math.exp(-x * x / 2)/ Math.sqrt(2*Math.PI) * k * (.31938153 + k * (-.356563782 + k * (1.781477937 + k * (-1.821255978 + k * 1.330274429)))) );\r\n\t  }\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n// used to make this component's props into classes\r\nimport cx from \"classnames\";\r\n// used for making the props of this component to bool\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CustomButton extends Component {\r\n  render() {\r\n    const {\r\n      special,\r\n      speciallarge,\r\n      table,\r\n      fill,\r\n      simple,\r\n      pullRight,\r\n      block,\r\n      wd,\r\n      round,\r\n      icon,\r\n      neutral,\r\n      twitter,\r\n      facebook,\r\n      google,\r\n      linkedin,\r\n      pinterest,\r\n      youtube,\r\n      tumblr,\r\n      github,\r\n      behance,\r\n      dribbble,\r\n      reddit,\r\n      stumbleupon,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const btnClasses = cx({\r\n      \"btn-special\": special,\r\n      \"btn-special-large\": speciallarge,\r\n      \"btn-table\": table,\r\n      \"btn-fill\": fill,\r\n      \"btn-simple\": simple,\r\n      \"pull-right\": pullRight,\r\n      \"btn-block\": block,\r\n      \"btn-wd\": wd,\r\n      \"btn-round\": round,\r\n      \"btn-icon\": icon,\r\n      \"btn-neutral\": neutral,\r\n      \"btn-social btn-twitter\": twitter,\r\n      \"btn-social btn-facebook\": facebook,\r\n      \"btn-social btn-google\": google,\r\n      \"btn-social btn-linkedin\": linkedin,\r\n      \"btn-social btn-pinterest\": pinterest,\r\n      \"btn-social btn-youtube\": youtube,\r\n      \"btn-social btn-tumblr\": tumblr,\r\n      \"btn-social btn-github\": github,\r\n      \"btn-social btn-behance\": behance,\r\n      \"btn-social btn-dribbble\": dribbble,\r\n      \"btn-social btn-reddit\": reddit,\r\n      \"btn-social btn-stumbleupon\": stumbleupon\r\n    });\r\n\r\n    return <Button className={btnClasses} {...rest} />;\r\n  }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n  special: PropTypes.bool,\r\n  speciallarge: PropTypes.bool,\r\n  table: PropTypes.bool,\r\n  fill: PropTypes.bool,\r\n  simple: PropTypes.bool,\r\n  pullRight: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  wd: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  neutral: PropTypes.bool,\r\n  twitter: PropTypes.bool,\r\n  facebook: PropTypes.bool,\r\n  google: PropTypes.bool,\r\n  linkedin: PropTypes.bool,\r\n  pinterest: PropTypes.bool,\r\n  youtube: PropTypes.bool,\r\n  tumblr: PropTypes.bool,\r\n  github: PropTypes.bool,\r\n  behance: PropTypes.bool,\r\n  dribbble: PropTypes.bool,\r\n  reddit: PropTypes.bool,\r\n  stumbleupon: PropTypes.bool\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"card\" +\r\n          (this.props.hidden ? \" card-hidden\" : \"\") +\r\n          (this.props.calendar ? \" card-calendar\" : \"\") +\r\n          (this.props.plain ? \" card-plain\" : \"\") +\r\n          (this.props.wizard ? \" card-wizard\" : \"\")\r\n        }\r\n      >\r\n        {this.props.title !== undefined || this.props.category !== undefined ? (\r\n          <div\r\n            className={\"header\" + (this.props.textCenter ? \" text-center\" : \"\")}\r\n          >\r\n            <div className=\"clearfix\">\r\n              <h4 className=\"title\">{this.props.title}</h4>      \r\n              <p className=\"rightsection\">{this.props.rightSection}</p>\r\n            </div>\r\n            <p className=\"category\">{this.props.category}</p>\r\n            <div className=\"clearboth\"></div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            \"content\" +\r\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\r\n            (this.props.ctFullWidth ? \" content-full-width\" : \"\") +\r\n            (this.props.ctTextCenter ? \" text-center\" : \"\") +\r\n            (this.props.tableFullWidth ? \" table-full-width\" : \"\")\r\n          }\r\n        >\r\n          {this.props.content}\r\n        </div>\r\n        {this.props.stats !== undefined || this.props.legend !== undefined ? (\r\n          <div\r\n            className={\r\n              \"footer\" + (this.props.ftTextCenter ? \" text-center\" : \"\")\r\n            }\r\n          >\r\n            {this.props.legend !== undefined ? (\r\n              <div className=\"legend\">{this.props.legend}</div>\r\n            ) : null}\r\n            {this.props.stats !== undefined ? <hr /> : null}\r\n            {this.props.stats !== undefined ? (\r\n              <div className=\"stats\">{this.props.stats}</div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","module.exports = __webpack_public_path__ + \"static/media/full-screen-image-3.ef9c8d65.jpg\";","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from '../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\nimport Web3 from 'web3';\r\nimport Uniswap from '../web3/Uniswap';\r\nimport dYdXLong from '../web3/dYdXLong';\r\nimport dYdXShort from '../web3/dYdXShort';\r\nimport GammaOptions from '../web3/GammaOptions';\r\nimport Manual from '../web3/Manual';\r\nimport UniswapV3 from '../web3/UniswapV3';\r\nimport PositionChartCard from \"./positions/PositionChartCard\";\r\nimport { clone, debalanceETH, debalanceDAI } from '../web3/common.js';\r\nimport { CoinGeckoPrices } from '../web3/CoinGeckoPrices.js';\r\nimport { \r\n  uniswapdYdXTest, \r\n  dydxShortTest, \r\n  callOptionTest, \r\n  putOptionTest,\r\n  uniswapv3Test,\r\n  shortCallOptionTest,\r\n  shortPutOptionTest\r\n } from '../web3/templates/positions.js';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nclass PositionsView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.hideChartDialog = this.hideChartDialog.bind(this);\r\n    this.loadWeb3 = this.loadWeb3.bind(this);\r\n    this.loadWeb3Account = this.loadWeb3Account.bind(this);\r\n    this.addService = this.addService.bind(this);\r\n\r\n    // OLD WAY: load web3\r\n    //let web3;\r\n    //if (typeof window.web3 !== \"undefined\") {\r\n    //  web3 = this.loadWeb3();\r\n    //}\r\n\r\n\r\n\r\n    this.state = {\r\n      //data: null,\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null,\r\n      isChartDialogShown: false,\r\n      web3DataLoaded: false,\r\n      selectedPosition: null,\r\n      console: \"Loading positions...\"\r\n    };\r\n  }\r\n  \r\n  async componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n\r\n    // OLD WAY: load account\r\n    //const web3 = this.state.web3;\r\n    //if (web3) {\r\n    //  const userAccount = await this.loadWeb3Account(web3);\r\n    //  this.setState({\r\n    //    account: userAccount\r\n    //  });\r\n    //}\r\n\r\n    const providerOptions = {\r\n      /* See Provider Options Section */\r\n      walletconnect: {\r\n        package: WalletConnectProvider, // required\r\n        options: {\r\n          infuraId: \"1e22b4bd561c46ada64b5690d1fbb261\" // required\r\n        }\r\n      }\r\n    };\r\n    \r\n    const web3Modal = new Web3Modal({\r\n      network: \"mainnet\", // optional\r\n      cacheProvider: true, // optional\r\n      providerOptions // required\r\n    });\r\n    \r\n    const provider = await web3Modal.connect();\r\n    \r\n    const web3 = new Web3(provider);\r\n\r\n    // Subscribe to accounts change\r\n    provider.on(\"accountsChanged\", (accounts: string[]) => {\r\n      console.log(\"accountsChanged: \" + accounts);\r\n    });\r\n\r\n    // Subscribe to chainId change\r\n    provider.on(\"chainChanged\", (chainId: number) => {\r\n      console.log(\"chainChanged: \" + chainId);\r\n    });\r\n\r\n    // Subscribe to provider connection\r\n    provider.on(\"connect\", (info: { chainId: number }) => {\r\n      console.log(\"connect: \" + info);\r\n    });\r\n\r\n    // Subscribe to provider disconnection\r\n    provider.on(\"disconnect\", (error: { code: number; message: string }) => {\r\n      console.log(\"disconnect: \" + error);\r\n    });\r\n\r\n    this.setState({\r\n      web3: web3\r\n    });\r\n  }\r\n\r\n  loadWeb3() {\r\n    let web3;\r\n    if (typeof global.window !== \"undefined\") {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        web3 = new Web3(window.ethereum);\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (typeof global.window.web3 !== \"undefined\") {\r\n        // Use Mist/MetaMask's provider\r\n        web3 = new Web3(window.web3.currentProvider);\r\n      } else {\r\n        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\r\n        web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\r\n      }\r\n    }\r\n\r\n    return web3;\r\n  };\r\n  \r\n  async loadWeb3Account(web3) {\r\n    try {\r\n      await window.ethereum.enable();\r\n      const accounts = await web3.eth.getAccounts();\r\n      return accounts[0];\r\n    } catch (e) {\r\n      console.error(\"Unable to load web3 account. Please enable web3 wallet in your browser. Message: \" + e.getMessage());\r\n    }\r\n  };\r\n\r\n  async componentDidUpdate() {\r\n    if (this.props.userModel && this.props.userModel.positions && Array.isArray(this.props.userModel.positions) && this.state.web3) {\r\n      // call only once\r\n      if (!this.state.web3DataLoaded) {\r\n        console.log(\"Loading web3 data and setting up data for table\")\r\n        this.setState({\r\n          console: \"Loading web3 data and setting up data for table\"\r\n        })\r\n        this.setState({\r\n          web3DataLoaded: true\r\n        });\r\n\r\n        this.setState({\r\n          console: \"Loading web3 data and setting up data for table\"\r\n        })\r\n\r\n        // NOTE: here I can create JSON objects and append to positions\r\n        let appendedPositions = [...this.props.userModel.positions];\r\n        //let appendedPositions = [this.props.userModel.positions[0]];\r\n        //let appendedPositions = [shortCallOptionTest, shortPutOptionTest, callOptionTest, this.props.userModel.positions[0]];\r\n\r\n        // get live market data from smart contracts via web3\r\n        await this.loadWeb3Data(appendedPositions);\r\n\r\n        this.setState({\r\n          console: \"Preparing table data...\"\r\n        })\r\n\r\n        // calculate data for table\r\n        let tableData = await this.prepareTableData(appendedPositions);\r\n\r\n        // update table\r\n        this.setState({\r\n          data: tableData,\r\n          selectedPosition: appendedPositions[0]\r\n        });\r\n\r\n        this.setState({\r\n          console: appendedPositions.length + \" positions\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadWeb3Data(positions) {\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        this.setState({\r\n          console: \"Loading \" + (i + 1) + \"/\" + positions.length + \"...\"\r\n        })\r\n        await this.addService(pos, subpos);\r\n      }\r\n    }\r\n  }\r\n\r\n  async addService(pos, subpos) {\r\n    let service;\r\n    switch (subpos.type) {\r\n      case \"uniswap\":\r\n        service = new Uniswap(subpos.marketAddress, pos.base.address, pos.under.address, subpos.liq.start, subpos.apr);\r\n        break;\r\n      case \"dydx-long\":\r\n        service = new dYdXLong(subpos.under.start, subpos.borrowedBASE, subpos.boughtUNDER, subpos.openingPrice);\r\n        break;\r\n      case \"dydx-short\":\r\n        service = new dYdXShort(subpos.base.start, subpos.borrowedUNDER, subpos.boughtBASE, subpos.openingPrice);\r\n        break;\r\n      case \"option\":\r\n        service = new GammaOptions(subpos.isCall, subpos.isLong, subpos.quantity, subpos.strike, subpos.daysToExpiry, subpos.iv);\r\n        break;\r\n      case \"manual\":\r\n        service = new Manual(subpos.base.start, subpos.base.extra, subpos.under.start, subpos.under.extra);\r\n        break;\r\n      case \"uniswapv3\":\r\n        service = new UniswapV3(subpos.base.start, subpos.under.start, pos.entryPrice, subpos.minPrice, subpos.maxPrice, subpos.feeInPercent, subpos.ignoreImpermanentLoss);\r\n        break;\r\n    }\r\n\r\n    await service.getMarketData(this.state.web3, pos);\r\n    console.log(service)\r\n    // todo: dirty adding to position\r\n    subpos.service = service;\r\n  }\r\n\r\n  async prepareTableData(positions) {\r\n    let uniswapTableSet = [];\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      // time \r\n      let startDate = new Date(pos.startDate);\r\n      let daysSinceStart = (new Date() - startDate) / (1000 * 60 * 60 * 24);\r\n\r\n      // find uniswap market\r\n      let market, currentPrice;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        if(subpos.type === \"uniswap\") {\r\n          market = clone(subpos.service);\r\n          currentPrice = market.getPrice();\r\n        }\r\n      }\r\n\r\n      // if there is no uniswap market, use coingecko api\r\n      if(!market) {\r\n        //let priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address);\r\n        //let priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address);\r\n        //console.log(priceUNDERUSD)\r\n        market = {\r\n          priceBASEUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address),\r\n          priceUNDERUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address)\r\n        }\r\n        currentPrice = market.priceUNDERUSD / market.priceBASEUSD;\r\n      }\r\n\r\n\r\n      let totalInBASE = 0, totalOutBASE = 0;//, startBASE = 0, startUNDER = 0;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        // calculate Ins\r\n        totalInBASE += subpos.base.start + subpos.under.start * currentPrice;\r\n\r\n        // calculate Outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * currentPrice;\r\n        totalOutBASE += subpos.service.getCurrentValue(currentPrice, 0)[0] + extraBASE; \r\n      }\r\n\r\n      // today\r\n      let profitTodayToken = totalOutBASE - totalInBASE;\t\t\t\t\r\n      let profitPerMonthTodayToken = profitTodayToken * 30.4167 / daysSinceStart;\t\t\t\t\t\t\r\n      let aprToday = profitTodayToken / totalInBASE / daysSinceStart * 365 * 100;\t\r\n\r\n      let subpos = pos.subpositions[0];\r\n\r\n      // target UNDER\r\n      // default is if there is only one asset on opening\r\n      let targetPriceUNDER = currentPrice;\r\n      let targetProfitUNDER = profitTodayToken / currentPrice;\r\n      let profitPerMonthTargetUNDER = profitPerMonthTodayToken / currentPrice;\r\n      let aprTargetUNDER = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitUNDER = this.findMaxUNDER(pos);\r\n        targetPriceUNDER = priceAndProfitUNDER[0];\r\n        targetProfitUNDER = priceAndProfitUNDER[1];\r\n        let targetHodlUNDER = priceAndProfitUNDER[2];\r\n        profitPerMonthTargetUNDER = targetProfitUNDER * 30.4167 / daysSinceStart;\t\r\n        aprTargetUNDER = targetProfitUNDER / targetHodlUNDER / daysSinceStart * 365 * 100;\r\n      } \r\n\r\n      // target BASE\r\n      // default is if there is only one asset on opening\r\n      let targetPriceBASE = currentPrice;\r\n      let targetProfitBASE = profitTodayToken;\r\n      let profitPerMonthTargetBASE = profitPerMonthTodayToken;\r\n      let aprTargetBASE = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitBASE = this.findMaxBASE(pos);\r\n        targetPriceBASE = priceAndProfitBASE[0];\r\n        targetProfitBASE = priceAndProfitBASE[1];\r\n        let targetHodlBASE = priceAndProfitBASE[2];\r\n        console.log(\"targetHodlBASE: \" + targetHodlBASE)\r\n        profitPerMonthTargetBASE = targetProfitBASE * 30.4167 / daysSinceStart;\t\r\n        aprTargetBASE = targetProfitBASE / targetHodlBASE / daysSinceStart * 365 * 100;\r\n      } \r\n            \r\n      // profits in (USD)\r\n      let profitTargetETHUSD = targetProfitUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? targetProfitBASE * market.priceBASEUSD : targetProfitBASE / targetPriceBASE * market.priceUNDERUSD;\r\n      let profitPerMonthTargetETHUSD = profitPerMonthTargetUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitPerMonthTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? profitPerMonthTargetBASE * market.priceBASEUSD : profitPerMonthTargetBASE / targetPriceBASE * market.priceUNDERUSD;\r\n\r\n      pos.maxProfitTargetUSD = Math.max(profitTargetETHUSD, profitTargetTokenUSD);\r\n      pos.maxProfitPerMonthTargetUSD = Math.max(profitPerMonthTargetTokenUSD, profitPerMonthTargetETHUSD);\r\n\r\n      // prepare dataset for table\r\n      uniswapTableSet.push({\r\n        id: pos,\r\n        position: [pos.name, pos.description, pos.address], \r\n        sizedays: {\r\n          size: [totalOutBASE * market.priceBASEUSD, \"USD\"],\r\n          days: [daysSinceStart.toFixed(0), \"days\"],\r\n        },\r\n        price: {\r\n          lower: [targetPriceUNDER, pos.base.symbol],\r\n          current: [currentPrice, pos.base.symbol],\r\n          higher: [targetPriceBASE, pos.base.symbol]\r\n        },\r\n        totalprofit: {\r\n          lower: [targetProfitUNDER, pos.under.symbol, profitTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitTodayToken, \"USD\", market.priceBASEUSD * profitTodayToken],\r\n          higher: [targetProfitBASE, pos.base.symbol, profitTargetTokenUSD]\r\n        },\r\n        monthlyprofit: {\r\n          lower: [profitPerMonthTargetUNDER, pos.under.symbol, profitPerMonthTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitPerMonthTodayToken, \"USD\", market.priceBASEUSD * profitPerMonthTodayToken],\r\n          higher: [profitPerMonthTargetBASE, pos.base.symbol, profitPerMonthTargetTokenUSD]\r\n        },\r\n        apr: {\r\n          lower: [aprTargetUNDER, \"%\"],\r\n          current: [aprToday, \"%\"],\r\n          higher: [aprTargetBASE, \"%\"]\r\n        },\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isChartDialogShown: false, // todo: maybe enable later\r\n                  selectedPosition: positions[i]\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fas fa-chart-area\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                //this.props.setEditedTransaction(this.state.data[key].id);\r\n                //this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  //removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n    return uniswapTableSet;\r\n  }\r\n\r\n  findMaxBASE(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceBASE = -100000000000;\r\n    let maxProfitBASE = -100000000000;\r\n    let maxTotalHodlBASE = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutBASE = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        totalOutBASE += subpos.service.getCurrentValue(i, 0)[0] + extraBASE;\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalanced = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" UNDER + \" + debalanced[1].toFixed(4) + \" BASE\");\r\n      if(maxBalanceBASE < debalanced[1]) {\r\n        maxBalanceBASE = debalanced[1];\r\n        maxProfitBASE = debalanced[1] - startBASE;\r\n        maxPrice = i;\r\n        maxTotalHodlBASE = startBASE + startUNDER * maxPrice;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitBASE, maxTotalHodlBASE];\r\n  }\r\n\r\n  findMaxUNDER(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceUNDER = -100000000000;\r\n    let maxProfitUNDER = -100000000000;\r\n    let maxTotalHodlUNDER = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraUNDER = subpos.under.extra + subpos.base.extra / i;\r\n        totalOutUNDER += subpos.service.getCurrentValue(i, 0)[1] + extraUNDER;\r\n      }\r\n\r\n      // debalance for max UNDER\r\n      let debalanced = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" ETH + \" + debalanced[1].toFixed(4) + \" COMP\");\r\n      if(maxBalanceUNDER < debalanced[0]) {\r\n        maxBalanceUNDER = debalanced[0];\r\n        maxProfitUNDER = debalanced[0] - startUNDER;\r\n        maxPrice = i;\r\n        maxTotalHodlUNDER = startBASE / maxPrice + startUNDER;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitUNDER, maxTotalHodlUNDER];\r\n  }\r\n\r\n  getTotalProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitTargetUSD;\r\n      } \r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getMonthlyProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitPerMonthTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitPerMonthTargetUSD;\r\n      }\r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getSumFooter(rows, columnName, subName, index) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row[columnName][subName][index];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  displayDescription = (description) => {\r\n    return (description ? description.text : null)\r\n  };\r\n\r\n  displayLinks = (description) => {\r\n    if(description) {\r\n      return (\r\n        description.links.map((link, key) => {\r\n          return (\r\n            <span key={key}>\r\n              <a href={link.link}>{link.anchor}</a>{\" \"}\r\n            </span>\r\n          );\r\n        })\r\n      )\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { \r\n        Header: \"Position\", accessor: \"position\", maxWidth: 550, style: { 'whiteSpace': 'unset' },\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Cell: row => {\r\n          return (\r\n            <span style={{ float: \"left\" }}>\r\n              <b>{row.value[0]}</b><br></br>\r\n              {this.displayDescription(row.value[1])}<br></br>\r\n              {this.displayLinks(row.value[1])}\r\n              <a href={\"https://zapper.fi/dashboard?address=\" + row.value[2]}>Zap</a>\r\n            </span>\r\n          )\r\n        },\r\n      },\r\n      { \r\n        Header: \"Size/Days\", accessor: \"sizedays\", maxWidth: 120, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {\"$\" + formatUtils.formatNumber(row.value.size[0], 0)}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.days[0], 0) + \" \" + row.value.days[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"sizedays\", \"size\", 0), 0) + \" \" + rows.data[0][\"sizedays\"][\"size\"][1]}\r\n            </strong>\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }\r\n      },\r\n      { \r\n        Header: \"Price\", accessor: \"price\", maxWidth: 130, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \" \" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \" \" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \" \" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              @current\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              @target\r\n              </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Total Profit\", accessor: \"totalprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"totalprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getTotalProfitSum(), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Monthly Profit\", accessor: \"monthlyprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum(), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"APR\", accessor: \"apr\", maxWidth: 70, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \"\" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \"\" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \"\" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b - a; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0) * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum() * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false \r\n      }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  hideChartDialog() {\r\n    this.setState({\r\n      isChartDialogShown: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      123 help\r\n    </Tooltip>;\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my opened positions?\"\r\n                category={this.state.console}\r\n                rightSection={\r\n                  <span>\r\n                    <Button\r\n                      // was like this for without color\r\n                      //simple\r\n                      bsStyle=\"info\"\r\n                      fill\r\n                      special   \r\n                      onClick={() => this.props.showAddTradeDialog()}\r\n                    >\r\n                      <i className={\"fa fa-plus\"} /> Add trade\r\n                    </Button>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                      <Button\r\n                        bsStyle=\"default\"\r\n                        special // for share button: fa fa-share-alt\r\n                        //speciallarge \r\n                        //pullRight\r\n                        simple\r\n                      >\r\n                        <i className={\"fa fa-question-circle\"} /> Help \r\n                      </Button> \r\n                    </OverlayTrigger>\r\n                  </span>\r\n                }\r\n                content={this.state.data ? \r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                : null}\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <PositionChartCard \r\n                selectedPosition={this.state.selectedPosition}\r\n                userModel={this.props.userModel}\r\n                resModel={this.props.resModel}\r\n                addService={this.addService}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionsView;\r\n","import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\nimport uniswapABI from \"../abis/uniswapABI.json\";\r\nimport daiABI from \"../abis/daiABI.json\";\r\nimport { usdcAddress, wbtcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class Uniswap {\t\t\r\n\tconstructor(marketAddress, addressBASE, addressUNDER, myLIQ, apr) {\r\n\t\tthis.marketAddress = marketAddress;\r\n\t\tthis.addressBASE = addressBASE;\r\n\t\tthis.addressUNDER = addressUNDER;\r\n\t\tthis.feeInPercent = 0.3;\r\n\r\n\t\t// my position\r\n\t\tthis.myBASE = 0;\r\n\t\tthis.myUNDER = 0;\r\n\t\tthis.myLIQ = myLIQ;\r\n\r\n\t\t// pool \r\n\t\tthis.poolBASE = 0;\r\n\t\tthis.poolUNDER = 0;\r\n\t\tthis.poolLIQ = 0;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\tthis.apr = apr;\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tlet marketInstance = getContractInstance(web3, uniswapABI, this.marketAddress);\r\n\t\tlet baseInstance = getContractInstance(web3, daiABI, this.addressBASE);\r\n\t\tlet underInstance = getContractInstance(web3, daiABI, this.addressUNDER);\r\n\r\n\t\tlet ethBalance = await web3.eth.getBalance(this.marketAddress);\r\n\t\tlet poolLIQ = await marketInstance.methods.totalSupply().call();\r\n\t\tlet poolBASE = await baseInstance.methods.balanceOf(this.marketAddress).call();\r\n\t\tlet poolUNDER = await underInstance.methods.balanceOf(this.marketAddress).call();\r\n\r\n\t\t// if pool is using eth instead of weth\r\n\t\tif(poolUNDER / 10 ** 18 === 0 && ethBalance / 10 ** 18 > 0) {\r\n\t\t\tpoolUNDER = ethBalance;\r\n\t\t}\r\n\r\n\t\t// save to position\r\n\t\tthis.poolUNDER = poolUNDER / 10 ** this.getDecimals(this.addressUNDER); \r\n\t\tthis.poolLIQ = poolLIQ / 10 ** 18; \r\n\t\tthis.poolBASE = poolBASE / (this.addressBASE !== usdcAddress ? 10 ** 18 : 10 ** 6);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\t//this.priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\t//this.priceLIQBASE = this.poolBASE / this.poolLIQ;\r\n\t\t//this.priceUNDERBASE = this.poolBASE / this.poolUNDER;\r\n\r\n\t\tthis.priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressBASE);\r\n\t\tthis.priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressUNDER);\r\n\r\n\t\tconsole.log(\"AMM market data loaded. \" + position.base.symbol + \": \" + this.priceBASEUSD + \" USD, \" + position.under.symbol + \": \" + this.priceUNDERUSD + \" USD\");\r\n\t}\r\n\r\n\tgetDecimals() {\r\n\t\tif(this.addressUNDER === usdcAddress) {\r\n\t\t\treturn 6;\r\n\t\t} else if (this.addressUNDER === wbtcAddress) {\r\n\t\t\treturn 8;\r\n\t\t}\r\n\r\n\t\treturn 18;\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price. \r\n\t// Moves price to newPrice, calculates, and later returns market to \r\n\t// passedDays - days that passed since \r\n\tgetCurrentValue(newPrice, passedDays) {\r\n\t\t// move to new price\r\n\t\tlet oldPrice = this.getPrice();\r\n\t\tthis.setMarketPrice(newPrice);\r\n\r\n\t\t// apply APR\r\n\t\tlet poolBASEWithAPR = this.poolBASE * (1 + this.apr / 100 * passedDays / 365);\r\n\t\tlet poolUNDERWithAPR = this.poolUNDER * (1 + this.apr / 100 * passedDays / 365);\r\n\r\n\t\t// calc my share\r\n\t\tlet myShare = this.myLIQ / this.poolLIQ;\r\n\t\tlet myBASE = poolBASEWithAPR * myShare + poolUNDERWithAPR * myShare * newPrice;\r\n\t\tlet myUNDER = myBASE / newPrice;\r\n\r\n\t\t// back to old price\r\n\t\tthis.setMarketPrice(oldPrice);\r\n\r\n\t\treturn [myBASE, myUNDER];\r\n\t}\r\n\r\n\taddLiquidity(exactUNDER, exactBASE) {\r\n\t\tlet exactLIQ = exactUNDER * (this.poolLIQ / this.poolUNDER);\r\n\t\t//console.log(\"Pool before: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.poolLIQ += exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\treturn exactLIQ;\r\n\t}\r\n\t\r\n\tremoveLiquidity(exactLIQ) {\r\n\t\tlet priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\tlet priceLIQDAI = this.poolBASE / this.poolLIQ;\r\n\t\tlet exactUNDER = exactLIQ * priceLIQUNDER;\r\n\t\tlet exactBASE = exactLIQ * priceLIQDAI;\r\n\t\t//console.log(\"Pool before: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\tthis.poolUNDER -= exactUNDER;\r\n\t\tthis.poolBASE -= exactBASE;\r\n\t\tthis.poolLIQ -= exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\treturn [exactUNDER, exactBASE];\r\n\t}\r\n\r\n\tbuyUNDER(exactBASE) {\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactUNDER = Math.abs(this.k / (this.poolBASE + exactBASE) - this.poolUNDER);\r\n\t\t\t\t\t\t\r\n\t\t// apply fee\r\n\t\tlet exactUNDERWithFees = exactUNDER * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER -= exactUNDERWithFees;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactUNDERWithFees;\r\n\t}\r\n\r\n\tsellUNDER(exactUNDER) {\t\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactBASE = Math.abs(this.k / (this.poolUNDER + exactUNDER) - this.poolBASE);\r\n\t\t\r\n\t\t// apply fee\r\n\t\tlet exactBASEWithFees = exactBASE * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE -= exactBASEWithFees;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactBASEWithFees;\r\n\t}\r\n\r\n\tgetInputPrice(inputAmount, inputPool, outputPool) {\r\n\t\treturn (inputAmount * outputPool) / (inputPool + inputAmount);\r\n\t}\r\n\r\n\t// helper method to set new price\r\n\tsetMarketPrice(newPrice) {\r\n\t\tlet k = this.poolBASE * this.poolUNDER;\r\n\t\tthis.poolUNDER = Math.sqrt(k / newPrice);\r\n\t\tthis.poolBASE = Math.sqrt(k * newPrice);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t}\r\n\r\n\tgetPrice() {\r\n\t\treturn this.poolBASE / this.poolUNDER;\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXLong {\t\t\r\n\tconstructor(collateralUNDER, borrowedBASE, boughtUNDER, openingPrice) {\r\n\t\tthis.collateralUNDER = collateralUNDER;\r\n\t\tthis.borrowedBASE = borrowedBASE;\r\n\t\tthis.boughtUNDER = boughtUNDER;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXLong market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = (this.collateralUNDER + this.boughtUNDER) * currentPrice - this.borrowedBASE;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXShort {\t\t\r\n\tconstructor(collateralBASE, borrowedUNDER, boughtBASE, openingPrice) {\r\n\t\tthis.collateralBASE = collateralBASE;\r\n\t\tthis.borrowedUNDER = borrowedUNDER;\r\n\t\tthis.boughtBASE = boughtBASE;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXShort market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.collateralBASE + this.boughtBASE - this.borrowedUNDER * currentPrice;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","import { OptionMath } from './common.js'\r\nexport default class GammaOptions {\t\t\r\n\tconstructor(isCall, isLong, quantity, strike, daysToExpiry, iv) {\r\n\t\tthis.isCall = isCall;\r\n\t\tthis.isLong = isLong;\r\n\t\tthis.quantity = quantity;\r\n\t\tthis.strike = strike;\r\n\t\tthis.daysToExpiry = daysToExpiry;\r\n\t\tthis.iv = iv;\r\n\t\tthis.optionMath = new OptionMath(); \r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"GammaOptions market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\t// passedDays - days that passed since \r\n\tgetCurrentValue(currentPrice, passedDays) {\r\n\t\tlet currentValueBASE = this.quantity * this.optionMath.blackScholes(this.isCall ? 'call' : 'put', currentPrice, this.strike, (this.daysToExpiry - passedDays) / 365, 0.02, this.iv / 100);\r\n\t\t// long\r\n\t\tif(this.isLong) {\r\n\t\t\treturn [currentValueBASE, currentValueBASE / currentPrice];\r\n\t\t}\r\n\r\n\t\t// short call\r\n\t\tif(this.isCall) {\r\n\t\t\treturn [this.quantity * currentPrice - currentValueBASE, (this.quantity * currentPrice - currentValueBASE) / currentPrice];\r\n\t\t}\r\n\t\t\r\n\t\t// short put\r\n\t\treturn [this.quantity * this.strike - currentValueBASE, (this.quantity * this.strike - currentValueBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class Manual {\t\t\r\n\tconstructor(startBASE, extraBASE, startUNDER, extraUNDER) {\r\n\t\tthis.startBASE = startBASE;\r\n\t\tthis.extraBASE = extraBASE;\r\n\t\tthis.startUNDER = startUNDER;\r\n\t\tthis.extraUNDER = extraUNDER;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"Manual market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.startBASE + this.startUNDER * currentPrice;\r\n\t\treturn [positionBASE, positionBASE / currentPrice];\r\n\t}\r\n}\t\t\r\n","//import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\n//import uniswapABI from \"../abis/uniswapABI.json\";\r\n//import daiABI from \"../abis/daiABI.json\";\r\n//import { usdcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class UniswapV3 {\t\t\r\n\tconstructor(myBASE, myUNDER, openingPrice, minPrice, maxPrice, feeInPercent, ignoreImpermanentLoss) {\r\n\t\tthis.myBASE = myBASE;             // user invested in BASE\r\n\t\tthis.myUNDER = myUNDER;           // user invested in UNDER\r\n\t\tthis.openingPrice = openingPrice; // price when liq position is opened\r\n\t\tthis.minPrice = minPrice;\r\n\t\tthis.maxPrice = maxPrice;\r\n\t\tthis.feeInPercent = feeInPercent;\r\n\t\tthis.ignoreImpermanentLoss = ignoreImpermanentLoss; \r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tconsole.log(\"UniswapV3 market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price \r\n\tgetCurrentValue(newPrice) {\r\n\t\tif(this.ignoreImpermanentLoss) {\r\n\t\t\tlet newTotalBASE = this.myBASE + this.myUNDER * newPrice;\r\n\t\t\treturn [newTotalBASE, newTotalBASE / newPrice]\r\n\t\t}\r\n\r\n\t\t// total in BASE amd total in UNDER\r\n\t\tthis.openingTotalBASE = this.myBASE + this.myUNDER * this.openingPrice;\r\n\r\n\t\tthis.token1V2 = this.openingTotalBASE / 2;\r\n\t\tthis.token2V2 = this.token1V2 / this.openingPrice;\r\n\t\tthis.L = Math.sqrt(this.token1V2 * this.token2V2);\r\n\t\tthis.L2 = this.token1V2 * this.token2V2;\r\n\t\tthis.T = this.L * Math.sqrt(this.minPrice);\r\n\t\tthis.H = this.L / Math.sqrt(this.maxPrice);\r\n\t\tthis.maxToken2 = this.L2 / this.H - this.T;\r\n\t\tthis.maxToken1 = this.L2 / this.T - this.H;\r\n\t\tthis.LP_a = this.openingPrice > this.maxPrice ? 0 : (this.L / Math.sqrt(this.openingPrice) - this.H) * this.openingPrice;\r\n\t\tthis.LP_b = this.openingPrice > this.maxPrice ? this.maxToken2 : this.L * Math.sqrt(this.openingPrice) - this.T;\r\n\t\tthis.LP = this.LP_a + this.LP_b;\r\n\t\tthis.multiplier = this.openingPrice > this.minPrice ? this.openingTotalBASE / this.LP : this.openingTotalBASE / (this.openingPrice * this.maxToken1);\r\n\r\n\t\t\t\t\r\n\t\tlet x, y, value; // x is BASE. y is UNDER\r\n\t\tif (newPrice < this.minPrice) {\r\n\t\t\tx = this.maxToken1 * this.multiplier;\r\n\t\t\ty = 0;\r\n\t\t\tvalue = x * newPrice;\r\n\t\t} else if (newPrice >= this.minPrice && newPrice <= this.maxPrice) {\r\n\t\t\tx = (this.L / Math.sqrt(newPrice) - this.H) * this.multiplier;\r\n\t\t\ty = (this.L * Math.sqrt(newPrice) - this.T) * this.multiplier;\r\n\t\t\tvalue = x * newPrice + y;\r\n\t\t} else if (newPrice > this.maxPrice) {\r\n\t\t\tx = 0;\r\n\t\t\ty = this.maxToken2 * this.multiplier;\r\n\t\t\tvalue = y;\r\n\t\t}\r\n\r\n\t\treturn [value, value / newPrice];\r\n\t}\r\n}\t\t\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { \r\n  Col, \r\n  Row\r\n} from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass AddSubpositionCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedType: { value: 'uniswap', label: 'uniswap' }\r\n    }\r\n  }\r\n\r\n  getTypes() {\r\n    return this.props.types.map((type, index) => {\r\n      return { value: type, label: type };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={'Add New'}\r\n        content={\r\n          <div>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div className=\"table-responsive\">\r\n                  <h5>Select subposition</h5>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n              <Select\r\n                placeholder=\"Type\"\r\n                name=\"type\"\r\n                value={this.state.selectedType}\r\n                options={this.getTypes()}\r\n                onChange={value => {\r\n                  this.setState({ selectedType: value });\r\n                }}\r\n              />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Button\r\n                  bsStyle=\"info\"\r\n                  fill\r\n                  //special   \r\n                  onClick={() => this.props.addSubposition(this.state.selectedType.value)}\r\n                >\r\n                  <i className={\"fa fa-plus\"} /> Add subposition\r\n                </Button> \r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSubpositionCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass UniswapV2Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.start = Number(newValue);\r\n    subpos.service.myLIQ = Number(newValue) + subpos.liq.extra;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.extra = Number(newValue);\r\n    subpos.service.myLIQ = subpos.liq.start + Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeAPR(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.apr = Number(newValue);\r\n    subpos.service.apr = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          UniswapV2\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.extra}\r\n                onChange={(event) => this.onChangeExtraBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.extra}\r\n                onChange={(event) => this.onChangeExtraUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.start}\r\n                onChange={(event) => this.onChangeStartLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.extra}\r\n                onChange={(event) => this.onChangeExtraLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              APR [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"%\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.apr}\r\n                onChange={(event) => this.onChangeAPR(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default UniswapV2Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass UniswapV3Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    subpos.service.myBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    subpos.service.myUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeMinPrice(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.minPrice = Number(newValue);\r\n    subpos.service.minPrice = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeMaxPrice(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.maxPrice = Number(newValue);\r\n    subpos.service.maxPrice = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIgnoreImpermanentLoss(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.ignoreImpermanentLoss = newValue == 1;\r\n    subpos.service.ignoreImpermanentLoss = newValue == 1;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          UniswapV3\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.extra}\r\n                onChange={(event) => this.onChangeExtraBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.extra}\r\n                onChange={(event) => this.onChangeExtraUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Min price:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"MinPrice\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.minPrice}\r\n                onChange={(event) => this.onChangeMinPrice(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Max price:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"MaxPrice\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.maxPrice}\r\n                onChange={(event) => this.onChangeMaxPrice(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Fee [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Fee\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.feeInPercent}\r\n                onChange={(event) => this.onChangeFeeInPercent(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Ignore IL:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"IgnoreImpermanentLoss\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.ignoreImpermanentLoss ? 1 : 0}\r\n                onChange={(event) => this.onChangeIgnoreImpermanentLoss(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              APR [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"%\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={20}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    customMin: Number(event.target.value)\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default UniswapV3Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXLongCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    subpos.service.collateralUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedBASE = Number(newValue);\r\n    subpos.service.borrowedBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtUNDER = Number(newValue);\r\n    subpos.service.boughtUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          dYdX Long\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.borrowedBASE}\r\n                onChange={(event) => this.onChangeBorrowedBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.boughtUNDER}\r\n                onChange={(event) => this.onChangeBoughtUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXLongCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXShortCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    subpos.service.collateralBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedUNDER = Number(newValue);\r\n    subpos.service.borrowedUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtBASE = Number(newValue);\r\n    subpos.service.boughtBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          dYdX Short\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.borrowedUNDER}\r\n                onChange={(event) => this.onChangeBorrowedUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.boughtBASE}\r\n                onChange={(event) => this.onChangeBoughtBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXShortCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass GammaOptionsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  //onChangeStartBase(newValue) {\r\n  //  let subpos = clone(this.props.subposition);\r\n  //  subpos.base.start = Number(newValue);\r\n  //  this.props.updateSubposition(this.props.index, subpos);\r\n  //}\r\n  onChangeIsLong(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.isLong = newValue === 'B';\r\n    subpos.service.isLong = newValue === 'B';\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIsCall(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.isCall = newValue === 'C';\r\n    subpos.service.isCall = newValue === 'C';\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeQuantity(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.quantity = Number(newValue);\r\n    subpos.service.quantity = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStrike(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.strike = Number(newValue);\r\n    subpos.service.strike = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeDaysToExpiry(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.daysToExpiry = Number(newValue);\r\n    subpos.service.daysToExpiry = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIV(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.iv = Number(newValue);\r\n    subpos.service.iv = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          Gamma Options\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                disabled\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                value={this.props.subposition.base.start.toFixed(2)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                disabled\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start.toFixed(2)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Buy or Sell:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"BuyOrSell\"}\r\n                type=\"text\"\r\n                value={this.props.subposition.isLong ? 'B' : 'S'}\r\n                onChange={(event) => this.onChangeIsLong(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Call or Put:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"text\"\r\n                value={this.props.subposition.isCall ? 'C' : 'P'}\r\n                onChange={(event) => this.onChangeIsCall(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Quantity:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.quantity}\r\n                onChange={(event) => this.onChangeQuantity(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Strike:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.strike}\r\n                onChange={(event) => this.onChangeStrike(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Days to expiry:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.daysToExpiry}\r\n                onChange={(event) => this.onChangeDaysToExpiry(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              IV [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.iv}\r\n                onChange={(event) => this.onChangeIV(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default GammaOptionsCard;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport { \r\n  Tooltip, \r\n  OverlayTrigger,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl\r\n } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport AddSubpositionCard from \"./AddSubpositionCard.jsx\";\r\nimport UniswapV2Card from \"./subpositions/UniswapV2Card.jsx\";\r\nimport UniswapV3Card from \"./subpositions/UniswapV3Card.jsx\";\r\nimport DYDXLongCard from \"./subpositions/DYDXLongCard.jsx\";\r\nimport DYDXShortCard from \"./subpositions/DYDXShortCard.jsx\";\r\nimport GammaOptionsCard from \"./subpositions/GammaOptionsCard.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { debalanceETH, debalanceDAI, clone } from '../../web3/common.js';\r\nimport { CoinGeckoPrices } from '../../web3/CoinGeckoPrices.js';\r\n\r\nclass PositionChartCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chartLoaded: false,\r\n      chartData: [Math.random() * 5, 2, 1],\r\n      customMinX: 100,\r\n      customMaxX: 3000,\r\n      customXUserSet: false,\r\n      customMinY: undefined,\r\n      customMaxY: undefined,\r\n      currentPrice: 0\r\n    };\r\n\r\n    this.addSubposition = this.addSubposition.bind(this);\r\n    this.updateSubposition = this.updateSubposition.bind(this);\r\n    this.removeSubposition = this.removeSubposition.bind(this);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (this.userModelLoaded() && this.props.selectedPosition) {\r\n      // set customPosition if there is a change in props\r\n      if(prevProps.selectedPosition !== this.props.selectedPosition) {\r\n        console.log(\"setting customPosition\")\r\n        let customPosition = clone(this.props.selectedPosition);\r\n        // add enabled flag\r\n        for(let j = 0; j < customPosition.subpositions.length; j++) {\r\n          customPosition.subpositions[j].enabled = true;\r\n        }\r\n        this.setState({\r\n          customPosition: customPosition\r\n        });\r\n      } else {\r\n        // refresh chart if customPosition is updated\r\n        if(prevState.customPosition !== this.state.customPosition) {\r\n          await this.refreshChart();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  userModelLoaded() {\r\n    let userModel = this.props.userModel;\r\n    return userModel && userModel.positions && Array.isArray(userModel.positions);\r\n  }\r\n\r\n  async refreshChart() {\r\n    console.log(\"Refreshing chart data. Position: \");\r\n    let pos = this.state.customPosition;   \r\n    console.log(pos)\r\n\r\n    // chart data on today\r\n    let todayData = await this.prepareChartData(pos, 0);\r\n\r\n    // chart data in 30 days\r\n    let futureData = await this.prepareChartData(pos, 7);\r\n\r\n    this.setState({\r\n      chartLoaded: true,\r\n      chartData1: todayData.aprsBASE,\r\n      chartData2: todayData.profitsBASE,\r\n      chartData3: todayData.profitsUNDER,\r\n      chartData4: futureData.profitsBASE,\r\n      rangeEdgesBASE: todayData.rangeEdgesBASE, \r\n      rangeEdgesUNDER: todayData.rangeEdgesUNDER,\r\n      currentPrice: todayData.currentPrice,\r\n      customMinX: this.state.customXUserSet ? this.state.customMinX : todayData.customMinX,\r\n      customMaxX: this.state.customXUserSet ? this.state.customMaxX : todayData.customMaxX\r\n    });\r\n\r\n  }  \r\n\r\n  async prepareChartData(pos, passedDays) { \r\n    // time \r\n    let daysSinceStart = (new Date() - new Date(pos.startDate)) / (1000 * 60 * 60 * 24);\r\n    \r\n    let chartWindow = this.getChartWindow(pos);\r\n    let currentPrice = 0;\r\n    let startPrice = chartWindow.step * 25;\r\n    let endPrice = chartWindow.right;\t\r\n    let step = chartWindow.step;\t\r\n    let aprsBASE = [], profitsBASE = [], profitsUNDER = [];\r\n    for(let i = startPrice; i < endPrice; i += step) {\r\n      let totalOutBASE = 0, totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        if(subpos.enabled) {\r\n          // get ins\r\n          startBASE += subpos.base.start;\r\n          startUNDER += subpos.under.start;\r\n\r\n          // get outs\r\n          let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n          totalOutBASE += subpos.service.getCurrentValue(i, passedDays)[0] + extraBASE;\r\n\r\n          let extraUNDER = subpos.base.extra / i + subpos.under.extra;\r\n          totalOutUNDER += subpos.service.getCurrentValue(i, passedDays)[1] + extraUNDER;\r\n        }\r\n\r\n        if(currentPrice === 0) {\r\n          if(subpos.type === \"uniswap\") {\r\n            currentPrice = subpos.service.getPrice();\r\n          } else {\r\n            // todo: used here and in PositionsView, move somewhere\r\n            let market = {\r\n              priceBASEUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address),\r\n              priceUNDERUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address)\r\n            }\r\n            currentPrice = market.priceUNDERUSD / market.priceBASEUSD;\r\n          }\r\n        }\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalancedBASE = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced BASE @\" + i.toFixed(3) + \": \" + debalancedBASE[0].toFixed(4) + \" UNDER + \" + debalancedBASE[1].toFixed(4) + \" BASE\");\r\n      let profitBASE = debalancedBASE[1] - startBASE;\r\n      let hodlBASE = startBASE + startUNDER * i;\r\n      let aprTargetBASE = profitBASE / hodlBASE / daysSinceStart * 365 * 100;\r\n\r\n      // debalance for max UNDER\r\n      let debalancedUNDER = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced UNDER @\" + i.toFixed(3) + \": \" + debalancedUNDER[0].toFixed(4) + \" UNDER + \" + debalancedUNDER[1].toFixed(4) + \" BASE\");\r\n      let profitUNDER = debalancedUNDER[0] - startUNDER;\r\n      //let hodlUNDER = startBASE / i + startUNDER;\r\n      //let aprTargetUNDER = profitUNDER / hodlUNDER / daysSinceStart * 365 * 100;\r\n\r\n      aprsBASE.push({x: i, y: aprTargetBASE});\r\n      profitsBASE.push({x: i, y: profitBASE});\r\n      profitsUNDER.push({x: i, y: profitUNDER});\r\n    }\r\n\r\n    let rangeEdgesBASE = this.getRangePoints(profitsBASE);\r\n    let rangeEdgesUNDER = this.getRangePoints(profitsUNDER);\r\n\r\n    return {\r\n      aprsBASE: aprsBASE,\r\n      profitsBASE: profitsBASE,\r\n      profitsUNDER: profitsUNDER,\r\n      rangeEdgesBASE: rangeEdgesBASE, \r\n      rangeEdgesUNDER: rangeEdgesUNDER,\r\n      currentPrice: currentPrice,\r\n      customMinX: chartWindow.left,\r\n      customMaxX: chartWindow.right\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns start, end prices for chart.\r\n   *\r\n   * @param {object}   pos       Position.\r\n   * @return {type} Return value description.\r\n   */\r\n  getChartWindow(pos) {\r\n    let pivot = pos.entryPrice;\r\n    let step;\r\n    if(pivot < 1) {\r\n      step = 0.001;\r\n    } else if(pivot < 10) {\r\n      step = 0.01;\r\n    } else if(pivot < 100) {\r\n      step = 0.1;\r\n    } else if(pivot < 1000) {\r\n      step = 1;\r\n    } else if(pivot < 10000) {\r\n      step = 10;\r\n    } else if(pivot < 100000) {\r\n      step = 100;\r\n    }\r\n\r\n    return {\r\n      left: Number(pivot / 3),\r\n      right: 10000,//Number(pivot * 5),\r\n      step: step\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns points for range ploting (90%).\r\n   *\r\n   * @param {Array}   profits       Profit points on chart.\r\n   * @return {type} Return value description.\r\n   */\r\n  getRangePoints(profits) {\r\n    // find maximum profit\r\n    let maxProfit = -100000000000;\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(maxProfit < profits[i].y) {\r\n        maxProfit = profits[i].y;\r\n      }\r\n    }\r\n\r\n    console.log(\"maxProfit: \" + maxProfit)\r\n\r\n    let firstPoint = { x: profits[0].x, y: profits[0].y };\r\n    let leftPoint = firstPoint; \r\n    let rightPoint = null, prevPoint;\r\n    // find left and right range edge [90%]\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(leftPoint === firstPoint && profits[i].y >= maxProfit * 0.9) {\r\n        leftPoint = { x: profits[i].x, y: profits[i].y };\r\n      } \r\n      \r\n      if(leftPoint !== firstPoint && rightPoint === null && profits[i].y < maxProfit * 0.9) {\r\n        rightPoint = prevPoint;\r\n      }\r\n\r\n      prevPoint = { x: profits[i].x, y: profits[i].y };\r\n    }\r\n\r\n    if(rightPoint === null) {\r\n      rightPoint = prevPoint;\r\n    }\r\n\r\n    return [leftPoint, rightPoint]\r\n  }\r\n\r\n  getPerformanceChartOptions() {\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'line',\r\n        height: '600'\r\n      },\r\n      title: {\r\n        text: 'Position: ' + (this.state.customPosition != null ? this.state.customPosition.name : 'unknown')\r\n      },\r\n      xAxis: {\r\n        min: this.state.customMinX,\r\n        max: this.state.customMaxX,\r\n        plotLines: [{\r\n          color: '#3D3D3D',\r\n          width: 2,\r\n          value: this.state.currentPrice ? this.state.currentPrice : 0,\r\n          label: {\r\n            text: \"Current price\"\r\n          }\r\n        }],\r\n        plotBands: [\r\n          {\r\n            from: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[0].x : 0,\r\n            to: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[1].x : 0,\r\n            color: 'rgba(165, 244, 151, 0.4)',\r\n            label: {\r\n                text: '90% UNDER',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          },\r\n          { \r\n            from: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[0].x : 0,\r\n            to: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[1].x : 0,\r\n            color: 'rgba(242, 240, 150, 0.4)',\r\n            label: {\r\n                text: '90% BASE',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      yAxis: [\r\n        {\r\n          title: {\r\n            text: 'APR [%]'\r\n          },\r\n          min: -100,\r\n          plotBands: [\r\n            {\r\n              from: 0,\r\n              to: -10000000000,\r\n              color: 'rgba(255, 33, 33, 0.06)',\r\n              label: {\r\n                  text: 'Red Zone',\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [BASE]'\r\n          },\r\n          opposite: true,\r\n          min: this.state.customMinY,\r\n          max: this.state.customMaxY,\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [UNDER]'\r\n          },\r\n          opposite: true\r\n        }\r\n      ],\r\n      series: [\r\n        { \r\n          name: \"APR [%] (BASE or UNDER)\", \r\n          data: this.state.chartData1,\r\n          tooltip: {\r\n            valueSuffix: '%'\r\n          },\r\n          turboThreshold: 10000\r\n        },\r\n        { \r\n          name: \"Profit Today [BASE]\", \r\n          data: this.state.chartData2, \r\n          yAxis: 1,\r\n          tooltip: {\r\n            valueSuffix: ' BASE' // todo\r\n          },\r\n          turboThreshold: 10000,\r\n        },\r\n        /*{ \r\n          name: \"Profit [UNDER]\", \r\n          data: this.state.chartData3,\r\n          yAxis: 2,\r\n          tooltip: {\r\n            valueSuffix: ' UNDER' // todo\r\n          },\r\n          turboThreshold: 10000\r\n        },*/\r\n        { \r\n          name: \"Profit Future [BASE]\", \r\n          data: this.state.chartData4, \r\n          yAxis: 1,\r\n          tooltip: {\r\n            valueSuffix: ' BASE' // todo\r\n          },\r\n          turboThreshold: 10000,\r\n        }\r\n      ],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  async addSubposition(type) {\r\n    let newSubpos;\r\n    if(type === 'uniswap') {\r\n      newSubpos = {\r\n        type: type,\r\n        marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n        base: {\r\n          start: 1800,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        liq: {\r\n          start: 30.67,\r\n          extra: 0\r\n        },\r\n        apr: 20\r\n      }\r\n    } else if(type === 'uniswapv3') {\r\n      newSubpos = {\r\n        type: type,\r\n        marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n        base: {\r\n          start: 1000,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        minPrice: 3900 * 0.8, \r\n        maxPrice: 3900 * 1.2, \r\n        feeInPercent: 0.3\r\n      }\r\n    } else if(type === 'dydx-long') {\r\n      newSubpos = {\r\n        type: \"dydx-long\",\r\n        base: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        borrowedBASE: 2700, \r\n        boughtUNDER: 1, \r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'dydx-short') {\r\n      newSubpos = {\r\n        type: \"dydx-short\",\r\n        base: {\r\n          start: 2700,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        borrowedUNDER: 1,\r\n        boughtBASE: 2700,\r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'option') {\r\n      newSubpos = {\r\n        type: type,\r\n        base: {\r\n          start: 183,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        isCall: true, \r\n        isLong: true, \r\n        quantity: 1, \r\n        strike: 3200,\r\n        daysToExpiry: 30,\r\n        iv: 86\r\n      }\r\n    }\r\n    await this.props.addService(this.state.customPosition, newSubpos);\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    newSubpos.enabled = true;\r\n    updatedPosition.subpositions.push(newSubpos);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  updateSubposition(index, subpos) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions[index] = subpos;\r\n    if(subpos.type === 'option') {\r\n      let currentValue = subpos.service.getCurrentValue(this.state.currentPrice, 0)[0];\r\n      if(subpos.isLong) {\r\n        subpos.base.start = currentValue;\r\n        subpos.under.start = 0;\r\n      } else {\r\n        if(subpos.isCall) {\r\n          subpos.base.start = currentValue - subpos.quantity * this.state.currentPrice;\r\n          subpos.under.start = subpos.quantity;\r\n        } else {\r\n          subpos.base.start = currentValue;\r\n          subpos.under.start = 0;\r\n        }\r\n      }\r\n      \r\n    }\r\n    console.log(updatedPosition)\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  removeSubposition(index) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions.splice(index, 1);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  displayCard(subpos, index) {\r\n\r\n    if(subpos.type === 'uniswap') {\r\n      return (\r\n        <UniswapV2Card\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'uniswapv3') {\r\n      return (\r\n        <UniswapV3Card\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-long') {\r\n      return (\r\n        <DYDXLongCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-short') {\r\n      return (\r\n        <DYDXShortCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'option') {\r\n      return (\r\n        <GammaOptionsCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  getSubpositionCards() {\r\n    if(this.state.customPosition) {\r\n      return this.state.customPosition.subpositions.map((subpos, index) => {\r\n        return (\r\n          <Col md={4}>\r\n            {this.displayCard(subpos, index)}\r\n          </Col>\r\n        )\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <Card\r\n        title=\"How does my position looks like?\"\r\n        //category=\"24 Hours performance\"\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special // for share button: fa fa-share-alt\r\n              //speciallarge \r\n              //pullRight\r\n              simple\r\n              >\r\n              <i className={\"fa fa-question-circle\"} /> Help \r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div className=\"main-content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col md={12}>\r\n                <HighchartsReact\r\n                  highcharts={Highcharts}\r\n                  options={this.getPerformanceChartOptions()}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={2}>\r\n                Price:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Min X\"}\r\n                  type=\"number\"\r\n                  name=\"customMinX\"\r\n                  min={0}\r\n                  value={this.state.customMinX}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMinX: Number(event.target.value),\r\n                      customXUserSet: true\r\n                    });\r\n                  }}\r\n                />\r\n                {' '}\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Max X\"}\r\n                  type=\"number\"\r\n                  name=\"customMaxX\"\r\n                  min={0}\r\n                  value={this.state.customMaxX}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMaxX: Number(event.target.value),\r\n                      customXUserSet: true\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={2}>\r\n                Profit [BASE]:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Min Y\"}\r\n                  type=\"number\"\r\n                  name=\"customMinY\"\r\n                  value={this.state.customMinY}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMinY: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n                &nbsp;\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Max Y\"}\r\n                  type=\"number\"\r\n                  name=\"customMaxY\"\r\n                  value={this.state.customMaxY}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMaxY: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n             </Row>\r\n            <Row>\r\n              {this.getSubpositionCards()}\r\n              <Col md={4}>\r\n                <AddSubpositionCard\r\n                  types={['uniswap','uniswapv3', 'dydx-long', 'dydx-short', 'option']}\r\n                  addSubposition={this.addSubposition}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionChartCard;","/*jshint esversion: 6 */\r\n\r\nexport default class CurrencyPair {\r\n  constructor(base, counter) {\r\n    this.base = base;\r\n    this.counter = counter;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\n\r\nexport default class Transaction {\r\n  constructor(isTrade, isBuy, pair, baseAmount, counterAmount, time, comment) {\r\n    this.isTrade = isTrade; // trade or funding\r\n    this.isBuy = isBuy; // buy or sell\r\n    this.pair = pair;\r\n    this.baseAmount = baseAmount;\r\n    this.counterAmount = counterAmount;\r\n    this.time = time;\r\n    this.comment = comment;\r\n  }\r\n\r\n  getPrice() {\r\n    if(this.baseAmount > 0) {\r\n      return this.counterAmount / this.baseAmount; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getProfit(resModel, denomination) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n    let profit = this.baseAmount * (priceNow - priceThen) * (this.isBuy ? 1 : -1);\r\n\r\n    if(this.pair.counter !== denomination) {\r\n      let lastPrice = resModel.getLastPrice(this.pair.counter, denomination);\r\n      profit = profit * lastPrice;\r\n    }\r\n\r\n    return profit;\r\n  }\r\n\r\n  getProfitPercent(resModel) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n   \r\n    if(priceThen !== 0) {\r\n      return (priceNow - priceThen) / priceThen * 100 * (this.isBuy ? 1 : -1);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  toShortString() {\r\n\t\tlet base = \"\";\r\n\t\tif(this.isTrade) {\r\n      let tradeType = this.isBuy ? \"buy\" : \"sell\";\r\n      base += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code + \" @ \" ;\r\n      base += formatUtils.formatNumber(this.getPrice(), 6)+ this.pair.counter.code;\r\n    } else {\r\n      let tradeType = this.isBuy ? \"deposit\" : \"withdrawal\";\r\n\t\t\tbase += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code;\r\n\t\t}\r\n\t\t\r\n\t\treturn base;\r\n\t}\r\n}","\r\n\t\t\r\nclass CoinGeckoPrices {\t\t\r\n    // gets usd prices from coingecko api\r\n\tstatic async getTokenPriceInUSD(address) {\t\r\n\t\tlet url = \"https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=\" + address.toLowerCase() + \"&vs_currencies=USD\";\r\n\t\tconst response = await fetch(url);\r\n\t\tconst myJson = await response.json();\r\n\t\tif(myJson[address.toLowerCase()]) {\r\n\t\t\treturn Number(myJson[address.toLowerCase()].usd);\r\n\t\t}\r\n\t\t\t\r\n\t\treturn 1;\r\n\t}\r\n}\t\t\r\n\r\nexport { CoinGeckoPrices };\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport { formatUtils } from '../../utils/FormatUtils';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass InsightsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTradingProfit = this.getTradingProfit.bind(this);\r\n  }\r\n\r\n  getTradingProfit(props) {\r\n    let totalProfit = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (tx.isTrade) {\r\n        totalProfit += tx.getProfit(props.resModel, props.resModel.usd);\r\n      }\r\n    }\r\n\r\n    return totalProfit;\r\n  }\r\n\r\n  getTotalFundings(props) {\r\n    // sum all deposits, and withdrawals on their transaction date\r\n    let totalDeposits = 0, totalWithdrawals = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (!tx.isTrade) {\r\n        let lastPrice = props.resModel.getPastPrice(tx.pair.base, props.resModel.usd, tx.time);\r\n        if (tx.isBuy) {\r\n          totalDeposits += tx.baseAmount * lastPrice;\r\n        } else {\r\n          totalWithdrawals += tx.baseAmount * lastPrice;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalDeposits: totalDeposits,\r\n      totalWithdrawals: totalWithdrawals\r\n    }\r\n  }\r\n\r\n  getExposureToCryptoPercentage(props, currentPortfolio, totalBalance) {\r\n    let totalCryptoBalance = currentPortfolio.getTotalCryptoBalance(props.resModel, props.resModel.usd);\r\n    return totalCryptoBalance / totalBalance * 100;\r\n  }\r\n\r\n  toShortFormatStyled(value) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.toShortFormat(value)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toDecimalFormatStyled(value, addon) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    return (\r\n      <div>\r\n        {formatUtils.formatNumber(value, 2) + addon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    let tradingProfit = this.getTradingProfit(this.props);\r\n    let fundings = this.getTotalFundings(this.props);\r\n    let totalProfit = totalBalance - fundings.totalDeposits + fundings.totalWithdrawals;\r\n    let holdingProfit = totalProfit - tradingProfit;\r\n    let tradeCount = this.props.userModel.portfolios.slice(-1)[0].tradeCount;\r\n    let exposureToCrypto = this.getExposureToCryptoPercentage(this.props, currentPortfolio, totalBalance);\r\n\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Hodling and trading profits are 2 components of the Total profit you made since you deposited your first currency. <br/><br/>\r\n      Trading profit is profit you made from trading, and includes all your trades. Go to Trades page to see more details on trades. <br/><br/>\r\n      Hodling profit is profit you made by just hodling your currencies, without trading. It's calculated by subtracting trading profit from total profit.\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category='All time'\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n            bsStyle=\"default\"\r\n            special // for share button: fa fa-share-alt\r\n            //speciallarge \r\n            //pullRight\r\n            simple\r\n          >\r\n            <i className={\"fa fa-question-circle\"} /> Help\r\n          </Button> \r\n        </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"table-responsive\">\r\n                <h5>How do I make profit?</h5>\r\n                <table className=\"table table-hover\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>by hodling</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(holdingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(holdingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>by trading</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(tradingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(totalProfit)}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive\">\r\n              <h5>What are my key insights?</h5>\r\n              <table className=\"table table-hover\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Average profit per trade</td>\r\n                    <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit / tradeCount)}</td>\r\n                  </tr>\r\n                  {/*<tr>\r\n                    <td>Most profitable pair</td>\r\n                    <td className=\"text-right\">ETH/USD</td>\r\n                  </tr>*/}\r\n                  <tr>\r\n                    <td>Withdrawn</td>\r\n                    <td className=\"text-right\">{formatUtils.toShortFormat(fundings.totalWithdrawals)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Exposure to crypto</td>\r\n                    <td className=\"text-right\">{this.toDecimalFormatStyled(exposureToCrypto, '%')}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n          }\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default InsightsCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass HelpCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n      {this.props.isHelpPanelShown ? (\r\n        <Card\r\n          title=\"Getting started\"\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={5} md={3} sm={0} xs={0}>\r\n                  <p>Welcome to Forkfolio app, a private-by-design crypto portfolio manager you \r\n                    can use to watch live crypto prices, track your trades, and get insights \r\n                    into your trading performance. </p>\r\n                  <p>If you haven't seen Forkfolio in action, visit <a href=\"https://forkfol.io/demo/\">demo app</a> loaded with public portfolio \r\n                    that showcases all features, or click on a play button to watch a short \r\n                    introductory video.</p>\r\n                  <h4 class=\"help-card-title\">Quick start</h4> \r\n                  <p class=\"help-card-paragraph\">Your portfolio is like a bank account - first, you need to deposit tokens to \r\n                    your portfolio to be able to trade them for another one. </p>\r\n                  <Button\r\n                    danger\r\n                    bsStyle=\"danger\"\r\n                    fill\r\n                    wd                    \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    Add Your First Deposit Now\r\n                  </Button>\r\n                </Col>\r\n                <Col lg={7} md={9} sm={12} xs={12} >\r\n                  <iframe title=\"Getting started with ForkFolio\" width=\"600\" height=\"370\" src=\"https://www.useloom.com/embed/87407d8535bd43b7b5c8a67da8c99d77\" frameBorder=\"0\" webkitallowfullscreen mozallowfullscreen allowFullScreen></iframe>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col md={2} mdOffset={11}>\r\n                <Button\r\n                  bsStyle=\"default\"\r\n                  fill\r\n                  onClick={() => this.props.hideHelpPanel()}\r\n                >\r\n                  Close\r\n                </Button>\r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        /> ) : (\"\") }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelpCard;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Tab,\r\n  Tabs\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonFundingDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTabSelect = this.handleTabSelect.bind(this);\r\n  }\r\n\r\n  isValidAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ amountError: null }) : this.setState({\r\n      amountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      currencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select currency.\r\n        </small>)\r\n    })\r\n      : this.setState({ currencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n    })\r\n      : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getDepositCurrencies() {\r\n    const currencies = [];\r\n    for (let c of this.props.resModel.dailyTickers.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  getWithdrawalCurrencies() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuySellFormGroup(name, placeholder) {\r\n    this.selected = name;\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          min={0}\r\n          value={this.state.amount}\r\n          onChange={event => {\r\n            this.setState({\r\n              amount: event.target.value\r\n            });\r\n            this.isValidAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.amountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"currency\"\r\n          value={this.state.currency}\r\n          options={this.state.currencies}\r\n          onChange={value => {\r\n            this.setState({ currency: value });\r\n            this.isValidCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.currencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate() });\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  handleTabSelect(key) {\r\n    this.setState({\r\n      isDeposit: key === \"deposit\",\r\n      currencies: key === \"deposit\" ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      currency: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tabs\r\n                    activeKey={this.state.isDeposit ? \"deposit\" : \"withdrawal\"}\r\n                    onSelect={this.handleTabSelect}\r\n                    id=\"controlled-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Deposit\", \"Deposit amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"withdrawal\" title=\"Withdrawal\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Withdrawal\", \"Withdrawal amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={/*() => */this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonFundingDialog;\r\n","import \"react-select/dist/react-select.css\";\r\n\r\nimport CurrencyPair from \"../../model/CurrencyPair\"\r\nimport Transaction from \"../../model/Transaction\"\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props.isInitialDeposit);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/addFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*this.setState(this.getInitialState());\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addFunding');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(isInitialDeposit) {\r\n    return {\r\n      title: \"Add funding\",\r\n      buttonText: \"Add\",\r\n      isDeposit: true,\r\n      amount: \"\",\r\n      amountError: null,\r\n      currency: null,\r\n      currencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: isInitialDeposit == null ? \"\" : \"It's my first deposit\",\r\n      currencies: this.getDepositCurrencies()\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddFundingDialog;\r\n","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\n\r\nexport default class Portfolio {\r\n    constructor(previous, genesisTx) {\r\n      this.previous = previous;\r\n      this.genesisTx = genesisTx;\r\n      this.balances = new Map();\r\n      this.tradeCount = this.calculateTradeCount();\r\n\r\n      this.calculateCurrencyBalances();\r\n    }\r\n\r\n    calculateTradeCount() {\r\n        let count = this.previous != null ? this.previous.tradeCount : 0;\r\n        if(this.genesisTx != null && this.genesisTx.isTrade) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    calculateCurrencyBalances() {\r\n        if(this.previous !== null) {\r\n            this.balances = new Map(this.previous.balances);\r\n        }\r\n        if(this.genesisTx !== null) {\r\n            // add usd to balances only if not funding\r\n            let isNotFunding = this.genesisTx.pair.counter.code !== 'USD' || \r\n            (this.genesisTx.pair.counter.code === 'USD' && this.genesisTx.isTrade);\r\n\r\n            // if no base and counter in map, add them first\r\n            if(this.balances.get(this.genesisTx.pair.base) === undefined) {\r\n                this.balances.set(this.genesisTx.pair.base, 0);\r\n            }\r\n            if(this.balances.get(this.genesisTx.pair.counter) === undefined) {\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, 0);\r\n                }\r\n            }\r\n\r\n            // then do the calculation\r\n            if(this.genesisTx.isBuy) {\r\n                //  add base and subtract counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) + this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) - this.genesisTx.counterAmount);\r\n                }\r\n            } else {\r\n                //  subtract base and add counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) - this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) + this.genesisTx.counterAmount);\r\n                }\r\n            }            \r\n        }\r\n    }\r\n\r\n    sortBalances(resModel) {\r\n        this.balances = new Map([...this.balances.entries()].sort(\r\n            (a, b) => this.getCurrencyBalance(resModel, b[0], resModel.usd) - this.getCurrencyBalance(resModel, a[0], resModel.usd)            \r\n        ));\r\n    }\r\n\r\n    getCurrencyBalance(resModel, currency, denomination) {\r\n        let priceInDenomination = 1;\r\n        if(currency !== denomination) {\r\n            let lastPrice = resModel.getLastPrice(currency, denomination);\r\n            if(lastPrice !== null) {\r\n                priceInDenomination = lastPrice;\r\n            }\r\n        }\r\n\r\n        return this.balances.get(currency) * priceInDenomination;\r\n    }\r\n\r\n    getTotalBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    getTotalCryptoBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            if(!k.isFiat) {\r\n                totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n            }\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    // returns balance of the currency on a date\r\n    getPastCurrencyBalance(currency, date) {\r\n        let currencyBalance = 0;\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return currencyBalance;\r\n    }\r\n\r\n    // returns total balance of portfolio in past for denominated\r\n    getPastTotalBalance(resModel, date, denomination) {\r\n        let totalPastBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            let pastPrice = resModel.getPastPrice(k, denomination, date);\r\n            totalPastBalance += pastPrice * this.getPastCurrencyBalance(k, date);\r\n        }\r\n\r\n        return totalPastBalance;\r\n\r\n        /*\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return totalPastBalance;*/\r\n    }\r\n\r\n    // returns portfolio was current at date\r\n    getPastPortfolio(date) {\r\n        let prev = this.previous;\r\n        while(prev !== null) {\r\n            if(prev.genesisTx == null || prev.genesisTx.time.getTime() < date.getTime()) {\r\n                return prev;\r\n            }\r\n            prev = prev.previous;\r\n        }\r\n\r\n        return null;\r\n    }\r\n  }","/*jshint esversion: 6 */\r\nimport moment from 'moment';\r\n\r\nclass DateUtils {\r\n  getDaysSince(sinceDate) {\r\n    return moment(new Date()).diff(moment(sinceDate), 'days');\r\n  }\r\n}\r\n\r\nexport let dateUtils = new DateUtils();","/*jshint esversion: 6 */\r\nimport Portfolio from './Portfolio';\r\nimport { dateUtils } from './../utils/DateUtils';\r\n\r\n\r\nexport default class UserModel {\r\n  constructor(transactions = [], positions = [], resModel) {\r\n    this.transactions = transactions;\r\n    this.positions = positions;\r\n    this.portfolios = [];\r\n\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  updateTransactions(transactions, resModel) {\r\n    this.transactions = transactions;\r\n    this.portfolios = [];\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  preparePortfolios(resModel) {\r\n    //console.log(\"Preparing portfolios..\");\r\n    let empty = new Portfolio(null, null);\r\n    empty.sortBalances(resModel);\r\n    this.portfolios.push(empty);\r\n\r\n    let previous = empty;\r\n    for(let tx of this.transactions) {\r\n      let portfolio = new Portfolio(previous, tx);\r\n      portfolio.sortBalances(resModel);\r\n      this.portfolios.push(portfolio);\r\n      previous = portfolio;\r\n    } \r\n  }\r\n\r\n  // returns all portfolios created after date\r\n  getPortfoliosSince(date) {\r\n    let selected = [];\r\n    for(let p of this.portfolios) {\r\n      if(p.genesisTx !== null && p.genesisTx.isTrade) {\r\n        if(p.genesisTx.time.getTime() > date.getTime() || p === this.portfolios[this.portfolios.length - 1]) {\r\n          selected.push(p);\r\n        }\r\n      }\r\n    }\r\n\r\n    // always add the one before the first one\r\n    if(selected.length > 0) {\r\n      selected.unshift(selected[0].previous);\r\n    }\r\n\r\n    return selected;\r\n  }\r\n\r\n  getDaysSinceFirstTx() {\r\n    if(this.transactions.length > 0) {\r\n      let firstDate = new Date(this.transactions[0].time);\r\n      return dateUtils.getDaysSince(firstDate);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","import UserModel from \"../UserModel\"\r\nimport ResModel from \"../ResModel\"\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nexport var resModel = new ResModel();\r\nexport let userModel = new UserModel([], resModel);\r\n\r\n\r\nexport const rangeSelectorModel = {\r\n    inputPosition: {\r\n        align: 'left',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buttonPosition: {\r\n        align: 'right',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    //selected: 2,\r\n    buttons: [ {\r\n        type: 'day',\r\n        count: 7,\r\n        text: '1w',\r\n        days: 7,\r\n        userFriendlyText: 'Last 7 days',\r\n    },{\r\n        type: 'month',\r\n        count: 1,\r\n        text: '1m',\r\n        days: 30,\r\n        userFriendlyText: 'Last 30 days',\r\n    }, {\r\n        type: 'month',\r\n        count: 3,\r\n        text: '3m',\r\n        days: 90,\r\n        userFriendlyText: 'Last 3 months',\r\n    }, {\r\n        type: 'ytd',\r\n        text: 'YTD',\r\n        days: dateUtils.getDaysSince(new Date(new Date().getFullYear(), 0, 0)),\r\n        userFriendlyText: 'Year-to-date',\r\n    }, {\r\n        type: 'year',\r\n        count: 1,\r\n        text: '1y',\r\n        days: 365,\r\n        userFriendlyText: 'Last year',\r\n    }, {\r\n        type: 'all',\r\n        text: 'All',\r\n        userFriendlyText: 'All time',\r\n    }]\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class ResModel {\r\n  constructor() {\r\n    this.usd = null;\r\n    this.dailyTickers = new Map();\r\n    this.recentTickers = new Map();\r\n  }\r\n\r\n  clone() {\r\n    let newModel = new ResModel();\r\n    newModel.usd = this.usd;\r\n    newModel.dailyTickers = this.dailyTickers;\r\n    newModel.recentTickers = this.recentTickers;\r\n    return newModel;\r\n  }\r\n\r\n  getLastPrice(base, counter) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      // counter usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null) {\r\n        return this.recentTickers.get(base.code).price;\r\n      }\r\n      // counter usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null) {\r\n        return this.dailyTickers.get(base).slice(-1)[0].price;\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null && \r\n          this.recentTickers.get(counter) != null) {\r\n        let baseUsd = this.recentTickers.get(base.code).price;\r\n        let counterUsd = this.recentTickers.get(counter.code).price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n\r\n      // counter not usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null && \r\n          this.dailyTickers.get(counter).slice(-1)[0] != null) {\r\n        let baseUsd = this.dailyTickers.get(base).slice(-1)[0].price;\r\n        let counterUsd = this.dailyTickers.get(counter).slice(-1)[0].price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getPercentChange24h(currency) {\r\n    if(this.recentTickers.get(currency) != null) {\r\n      return this.recentTickers.get(currency).percentChange24h;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  // returns the price of base denominated in counter on date\r\n  getPastPrice(base, counter, date) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      for(let t of this.dailyTickers.get(base)) {\r\n        if(this.sameDay(date, t.time)) {\r\n          return t.price;\r\n        }\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      // not implemented for now\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  findCurrencyByCode(code) {\r\n    for (const key of this.dailyTickers.keys()) {\r\n      if(key.code === code) {\r\n        return key;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport ReactTable from \"react-table\";\r\nimport Highstock from 'highcharts/highstock';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport InsightsCard from './common/InsightsCard';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport HelpCard from './common/HelpCard';\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass PortfolioView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getPerformanceChartOptions = this.getPerformanceChartOptions.bind(this);\r\n    this.getTotalBalance = this.getTotalBalance.bind(this);\r\n    this.getTableColumnsDesktop = this.getTableColumnsDesktop.bind(this);\r\n    this.getTableColumnsMobile = this.getTableColumnsMobile.bind(this);\r\n    this.getTableData = this.getTableData.bind(this);\r\n    this.getLogoURL = this.getLogoURL.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  getTotalBalance(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.total[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  downsizeTokenLogo(originalLogoURL) {\r\n    return originalLogoURL.replace(\"64x64\", \"32x32\");\r\n  }\r\n\r\n  getTableColumnsDesktop() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"name\", maxWidth: 180, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 120,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"24h\", accessor: \"percentChange24h\", maxWidth: 80,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Balance\", accessor: \"balance\", maxWidth: 160, sortable: false, \r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Share\", accessor: \"share\", maxWidth: 80, \r\n      Footer: (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>100%</strong>{\" \"}\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value, 2) + \"%\"}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Total\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getTableColumnsMobile() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"code\", maxWidth: 100, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 100,\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toGreenRedPercentStyle(row.value[1])}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      \r\n      { Header: \"Balance\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toShortFormat(row.value[1][0], 2).substr(1)}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getLogoURL(currency) {\r\n    if(currency.meta == null) {\r\n        return \"fiat-logos/\" + (currency.isFiat ? currency.code.toLowerCase() : \"empty\") + \".png\";\r\n    }\r\n\r\n    return currency.meta.logo;\r\n  }\r\n\r\n  // gets table data for desktop and mobile\r\n  getTableData(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(props.resModel, props.resModel.usd);\r\n\r\n    const tableData = [];\r\n    for (let [k, v] of currentPortfolio.balances) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, k, props.resModel.usd);\r\n      let name = [this.getLogoURL(k), k.name];\r\n      let code = [this.getLogoURL(k), k.code];\r\n      let percentChange24h = props.resModel.getPercentChange24h(k.code);\r\n      let price = [props.resModel.getLastPrice(k, props.resModel.usd), percentChange24h];\r\n      let balance = [v, k.code];\r\n      let share = (currencyBalance / totalBalance * 100);\r\n      let total = [currencyBalance, balance];\r\n      tableData.push({\r\n        id: tableData.length, \r\n        name: name, \r\n        code: code, \r\n        price: price,\r\n        percentChange24h: percentChange24h,\r\n        balance: balance,\r\n        share: share,\r\n        total: total\r\n      });\r\n    }\r\n\r\n    return tableData;\r\n  }\r\n\r\n  getPerformanceChartOptions(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n\r\n    // prepare portfolio performance chart\r\n    const series = [];\r\n    for (const currency of currentPortfolio.balances.keys()) {\r\n      const serie = [];\r\n      for(let t of props.resModel.dailyTickers.get(currency)) {       \r\n          let balanceInDenominated = t.price * currentPortfolio.getPastCurrencyBalance(t.pair.base, t.time);\r\n          serie.push([t.time.getTime(), balanceInDenominated]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {\r\n        serie.slice(-1)[0][1] = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd)\r\n        series.push({name: currency.code, data: serie});\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'area'\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          stacking: 'normal',\r\n          lineColor: '#666666',\r\n          lineWidth: 1,\r\n          marker: {\r\n              lineWidth: 1,\r\n              lineColor: '#666666'\r\n          }\r\n        }\r\n      },     \r\n      series: series,\r\n      rangeSelector: rangeSelectorModel,\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let assetCount = currentPortfolio.balances.size;\r\n    const showPagination = assetCount > 10;\r\n    const isMobile = window.innerWidth <= 992;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n        isInitialDeposit\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Balance sheet panel displays \r\n      all crypto and fiat currencies (coins) you own at this \r\n      moment. This is your portfolio. You can check live prices \r\n      of your currencies, total balance of a currency in USD, \r\n      and the total value in USD at the bottom. <br/><br/> \r\n      24H column displays a change in USD price in the last 24 hours.\r\n    </Tooltip>; \r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <HelpCard \r\n                isHelpPanelShown={this.props.isHelpPanelShown}\r\n                hideHelpPanel={this.props.hideHelpPanel}\r\n                showAddFundingDialog={this.props.showAddFundingDialog}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              <Card\r\n                title=\"What's my balance sheet today?\"\r\n                category={assetCount + \" asset\" + (assetCount === 1 ? \"\" : \"s\")}\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.getTableData(this.props)}\r\n                    columns={isMobile ? this.getTableColumnsMobile(this.props) : this.getTableColumnsDesktop(this.props)}\r\n                    defaultPageSize={10}\r\n                    showPageSizeOptions={false}\r\n                    showPagination={showPagination}\r\n                    noDataText={formatUtils.getNoDataText('assets', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <InsightsCard\r\n                title=\"Portfolio insights\"\r\n                portfolio={this.props.userModel.portfolios.slice(-1)[0]}\r\n                resModel={this.props.resModel}\r\n                userModel={this.props.userModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What's my portfolio history?\"\r\n                //category=\"24 Hours performance\"\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <HighchartsReact\r\n                    highcharts={Highstock}\r\n                    constructorType={'stockChart'}\r\n                    options={this.getPerformanceChartOptions(this.props)}\r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioView;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass TradesView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if (tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let pair = tx.pair.base.code + \"/\" + tx.pair.counter.code;\r\n        let type = tx.isBuy ? \"Buy\" : \"Sell\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        let price = [tx.getPrice(), tx.pair.counter.code];\r\n        let cost = [tx.counterAmount, tx.pair.counter.code];\r\n        let profitPercent = tx.getProfitPercent(props.resModel);\r\n        let profit = [tx.getProfit(props.resModel, props.resModel.usd), props.resModel.usd.code];\r\n        tableData.push([tx, date, pair, type, comment, volume, price, cost, profitPercent, profit]);\r\n      }\r\n    }\r\n\r\n    // second, map to state\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        pair: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        price: prop[6],\r\n        cost: prop[7],\r\n        profitpercentage: prop[8],\r\n        profit: prop[9],\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTotalVolume(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.volume[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalPrice(rows) {\r\n    return this.getTotalCost(rows) / this.getTotalVolume(rows);\r\n  }\r\n\r\n  getTotalCost(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.cost[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalProfitPercentage(rows) {\r\n    let pairStr = rows.data[0].pair.split('/');\r\n    let base = this.props.resModel.findCurrencyByCode(pairStr[0]);\r\n    let counter = this.props.resModel.findCurrencyByCode(pairStr[1]);\r\n    if(base !== null && counter !== null) {\r\n      let totalCost = this.getTotalCost(rows);\r\n      let totalCostInUsd = totalCost * this.props.resModel.getLastPrice(counter, this.props.resModel.usd);\r\n      let totalProfit = this.getTotalProfit(rows);\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      totalCostInUsd = totalCostInUsd * (isBuy ? 1 : -1);\r\n      // check eth/usd and rep/usd\r\n      return (totalProfit / Math.max(0, totalCostInUsd)) * 100; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getTotalProfit(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.profit[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  isOnePair(rows) {\r\n    for(let row of rows.data) {\r\n      if(row.pair !== rows.data[0].pair) {\r\n        return false;\r\n      }\r\n    }\r\n    return rows.data.length !== 0;\r\n  }\r\n\r\n  getPairFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return rows.data[0].pair;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTypeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return this.getTotalVolume(rows) >= 0 ? \"Buy\" : \"Sell\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getVolumeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(Math.abs(this.getTotalVolume(rows)), 2) + \" \" + rows.data[0].volume[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getPriceFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalPrice(rows), 6) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getCostFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      return formatUtils.formatNumber(this.getTotalCost(rows) * (isBuy ? 1 : -1), 2) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getProfitPercentageFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalProfitPercentage(rows), 2) + \"%\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Pair\", accessor: \"pair\", maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n        <span>\r\n          <strong>\r\n            {this.getPairFooter(rows)}\r\n          </strong>\r\n        </span>\r\n        )\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", maxWidth: 50,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n          <span>\r\n            <strong>\r\n              {this.getTypeFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", maxWidth: 300,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", maxWidth: 140, filterable: false,\r\n        Cell: row => (\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; \r\n        }, Footer: rows => (\r\n            <span style={{ float: \"right\" }}>\r\n              <strong>\r\n                {this.getVolumeFooter(rows)}\r\n              </strong>\r\n            </span>\r\n          )\r\n      },\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 6) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {this.getPriceFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Cost\", accessor: \"cost\", maxWidth: 140, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getCostFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit [%]\", accessor: \"profitpercentage\", maxWidth: 80, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getProfitPercentageFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit\", accessor: \"profit\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getTotalProfit(rows), 2) + \" USD\"}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Trades panel displays all your trades. A trade is when you exchange one currency for another. <br/><br/> \r\n      To add a trade, click on the Add trade button. To edit or remove a trade, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      PROFIT column will give you a trade's profit in USD for prices right now. There's also a total profit for all trades on the bottom. <br/><br/> \r\n      Trades can be sorted, and filtered in multiple ways. For example, to show all ETH/USD trades in 2018, enter ETH/USD in the PAIR filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent trades?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special   \r\n                    onClick={() => this.props.showAddTradeDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add trade\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                    <i className={\"fa fa-question-circle\"} /> Help \r\n                  </Button> \r\n                </OverlayTrigger>\r\n                </div>\r\n                }\r\n                category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TradesView;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update funding\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      isDeposit: props.editedTransaction.isBuy, \r\n      amount: props.editedTransaction.baseAmount.toString(),\r\n      amountError: null,\r\n      currency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      currencyError: null,\r\n      currencies: props.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    // track ga\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/editFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        isDeposit: nextProps.editedTransaction.isBuy, \r\n        amount: nextProps.editedTransaction.baseAmount.toString(),\r\n        amountError: null,\r\n        currency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        currencyError: null,\r\n        currencies: nextProps.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editFunding');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default EditFundingDialog;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport EditFundingDialog from \"./dialogs/EditFundingDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass FundingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n  \r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if(!tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let name = tx.pair.base.name;\r\n        let type = tx.isBuy ? \"Deposit\" : \"Withdrawal\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        tableData.push([tx, date, name, type, comment, volume]);\r\n      }\r\n    }\r\n\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        name: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        actions: (\r\n          // we've added some custom button actions\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditFundingDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, width: 160,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Name\", accessor: \"name\", minWidth: 120, width: 200,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", minWidth: 95, width: 120,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", minWidth: 100, width: 300, maxWidth: 500,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", minWidth: 120, width: 150, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }\r\n    },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 80, maxWidth: 80, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let fundingCount = this.props.userModel.transactions.length - currentPortfolio.tradeCount;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editFundingDialog = (\r\n      <EditFundingDialog\r\n        isDialogShown={this.props.isEditFundingDialogShown}\r\n        hideDialog={this.props.hideEditFundingDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Funding panel displays all your portfolio fundings: deposits and withdrawals. Deposit is when you add currency to your portfolio, and withdrawal is when you remove it. <br/><br/> \r\n      To add a funding, click on the Add funding button. To edit or remove a funding, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      Fundings can be sorted, and filtered in multiple ways. For example, to show all USD withdrawals in 2018, enter United States Dollar in the NAME filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent deposits and withdrawals?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special                   \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add funding\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                  </div>\r\n                }\r\n                category={fundingCount + \" funding\" + (fundingCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}                    \r\n                    noDataText={this.getNoDataText('deposits or withdrawals', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n              {this.props.isEditFundingDialogShown ? editFundingDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundingView;\r\n","import React, { Component } from \"react\";\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport Card from \"components/Card/Card.jsx\";\r\n\r\nclass PortfolioPie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartOptions: this.getPieOptions(props)\r\n    };\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n        chartOptions: this.getPieOptions(nextProps)\r\n    });\r\n  }\r\n\r\n  getPieOptions(props) {\r\n    let currentPortfolio = props.portfolio;\r\n\r\n    // prepare portfolio pie chart\r\n    const data = [];\r\n    for (let currency of currentPortfolio.balances.keys()) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd);\r\n      data.push({name: currency.code, y: currencyBalance});\r\n    }\r\n\r\n    const pieOptions = {\r\n      chart: {\r\n        type: \"pie\",\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      series: [{\r\n        name: \"Allocation\",\r\n        data: data\r\n      }],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return pieOptions;\r\n  }\r\n   render() {\r\n     let tradeCount = this.props.portfolio.tradeCount;\r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n        content={<HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={this.state.chartOptions}\r\n        />}\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioPie;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Highstock from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport PortfolioPie from './common/PortfolioPie'\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nclass PerformanceView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rangeClickHandler = this.rangeClickHandler.bind(this);\r\n\r\n    let daysSince = props.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(props, daysSince);\r\n    this.state = {\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(props, portfolios.best, portfolios.current, portfolios.worst)\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    rangeSelectorModel.days = this.props.userModel.getDaysSinceFirstTx();;\r\n    rangeSelectorModel.userFriendlyText = \"All time\";\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    let daysSince = nextProps.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(nextProps, daysSince); \r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(nextProps, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  rangeClickHandler() {\r\n    let portfolios = this.getBestCurrentWorstPortfolio(this.props, rangeSelectorModel.days);\r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(this.props, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  getBestCurrentWorstPortfolio(props, days) {\r\n\r\n    // TODO: what's this\r\n    let since = new Date(2018,4,28);\r\n    since.setHours(2,0,0,0);\r\n    //console.log(since)\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null && \r\n      props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0] != null) {\r\n      since = props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0].time;\r\n      //console.log(since)\r\n    }\r\n    //console.log(since)\r\n    let portfoliosSince = props.userModel.getPortfoliosSince(since);\r\n    //console.log(portfoliosSince);\r\n\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let bestPortfolio = currentPortfolio, worstPortfolio = currentPortfolio;\r\n    for(let p of portfoliosSince) {\r\n      let totalBalance = p.getTotalBalance(props.resModel, props.resModel.usd);\r\n      // best \r\n      if(totalBalance >= bestPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        bestPortfolio = p;\r\n      }\r\n      // worst\r\n      if(totalBalance <= worstPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        worstPortfolio = p;\r\n      }\r\n    }\r\n\r\n    // TODO: add future fundings here\r\n\r\n    return {\r\n      best: bestPortfolio, \r\n      current: currentPortfolio,\r\n      worst: worstPortfolio\r\n    };\r\n  }\r\n\r\n  getPortfolioSeries(props, portfolio) {\r\n    const serie = [];\r\n    // take usd tickers as template for dates\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null) {\r\n      for(let t of props.resModel.dailyTickers.get(props.resModel.usd)) {\r\n        let totalPastBalance = portfolio.getPastTotalBalance(props.resModel, t.time, props.resModel.usd);\r\n        serie.push([t.time.getTime(), totalPastBalance]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {     \r\n        serie.slice(-1)[0][1] = portfolio.getTotalBalance(props.resModel, props.resModel.usd)\r\n      }\r\n    }\r\n\r\n    return serie;\r\n  }\r\n\r\n  getPerformanceChartOptions(props, best, current, worst) {   \r\n    let series = [];\r\n    series.push({name: \"Best portfolio\", data: this.getPortfolioSeries(props, best)});\r\n    series.push({name: \"Current portfolio\", data: this.getPortfolioSeries(props, current)});    \r\n    series.push({name: \"Worst portfolio\", data: this.getPortfolioSeries(props, worst)});\r\n\r\n    var externalCaller = this.rangeClickHandler;\r\n    for(let i = 0; i < rangeSelectorModel.buttons.length; i++) {\r\n      rangeSelectorModel.buttons[i].events = {\r\n        click: function() {\r\n          rangeSelectorModel.days = rangeSelectorModel.buttons[i].days;\r\n          rangeSelectorModel.userFriendlyText = rangeSelectorModel.buttons[i].userFriendlyText;\r\n          externalCaller.call();\r\n        }\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      title: {\r\n        text: null\r\n      },\r\n      rangeSelector: rangeSelectorModel,\r\n      series: series, \r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      },\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Performance panel displays a chart of best, worst and current portfolio in a selected time period. Click on a zoom buttons to select time period. <br/><br/> \r\n      Chart is useful to evaluate your trading performance in selected time period. The closer your current is to the best portfolio, the better. <br/><br/> \r\n      Current portfolio is portfolio with all your trades, portfolio you have right now. <br/><br/> \r\n      Best/worst portfolio is portfolio with highest/lowest value in USD if you'd stopped trading altogether at some moment in selected time period. \r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"How does my current portfolio compare to past portfolios?\"\r\n                category={rangeSelectorModel.userFriendlyText != null ? rangeSelectorModel.userFriendlyText : \"All time\" }\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={<HighchartsReact\r\n                  highcharts={Highstock}\r\n                  constructorType={'stockChart'}\r\n                  options={this.state.performanceChartOptions}\r\n                />}\r\n                /*stats={\r\n                  <div>\r\n                    <i className=\"fa fa-history\" /> Updated 3 minutes ago\r\n                  </div>\r\n                }*/\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4}>\r\n            <PortfolioPie\r\n                title=\"Best portfolio\"\r\n                portfolio={this.state.bestPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Current portfolio\"\r\n                portfolio={this.state.currentPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Worst portfolio\"\r\n                portfolio={this.state.worstPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PerformanceView;\r\n","import PortfolioView from \"views/PortfolioView.jsx\";\r\nimport TradesView from \"views/TradesView.jsx\";\r\nimport PositionsView from \"views/PositionsView.jsx\";\r\nimport FundingView from \"views/FundingView.jsx\";\r\nimport PerformanceView from \"views/PerformanceView.jsx\";\r\n\r\nvar dashboardRoutes = [\r\n  {\r\n    path: \"/portfolio\",\r\n    name: \"Portfolio\",\r\n    icon: \"fa fa-pie-chart\",\r\n    component: PortfolioView\r\n  }, {\r\n    path: \"/trades\",\r\n    name: \"Trades\",\r\n    icon: \"fa fa-retweet\",\r\n    component: TradesView\r\n  }, {\r\n    path: \"/positions\",\r\n    name: \"Positions\",\r\n    icon: \"fa fa-piggy-bank\",\r\n    component: PositionsView\r\n  }, {\r\n    path: \"/funding\",\r\n    name: \"Funding\",\r\n    icon: \"fa fa-money\",\r\n    component: FundingView\r\n  }, {\r\n    path: \"/performance\",\r\n    name: \"Performance\",\r\n    icon: \"fa fa-line-chart\",//fa fa-calculator, fa fa-area-chart\r\n    component: PerformanceView\r\n  }, {\r\n    collapse: true,\r\n    path: \"/manage\",\r\n    name: \"Manage\",\r\n    state: \"openManage\",\r\n    icon: \"fa fa-folder\",\r\n    views: [\r\n      {\r\n        path: \"/placeholder\",\r\n        name: \"Placeholder\",\r\n        mini: \"P\",\r\n        component: null\r\n      }\r\n    ]\r\n  },\r\n  /*{\r\n    path: \"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\",\r\n    name: \"Feedback\",\r\n    icon: \"fa fa-comments\",\r\n    component: null\r\n  },*/\r\n  { redirect: true, path: \"/\", pathTo: \"/portfolio\", name: \"Portfolio\" }\r\n];\r\nexport default dashboardRoutes;\r\n","// @flow\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Portal } from 'react-portal';\r\n\r\nclass InputFiles extends React.Component<{\r\n  children: React.Node,\r\n  onChange: (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n  accept?: string,\r\n  style?: Object,\r\n}> {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onChange: PropTypes.func, // (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n    accept: PropTypes.string,\r\n    style: PropTypes.object,\r\n  };\r\n  static defaultProps = {\r\n    accept: 'image/*',\r\n  };\r\n  onInputRef = (node: any): void => {\r\n    this.input = node;\r\n  };\r\n  onClick = (e: SyntheticEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (this.input) this.input.click();\r\n  };\r\n  onChange = (e: Object) => {\r\n    this.props.onChange(e.target.files, e);\r\n    e.target.value=null;\r\n  };\r\n  input: ?React.ElementRef<'input'>;\r\n  render() {\r\n    const { children, accept, style } = this.props;\r\n    const { onInputRef, onClick, onChange } = this;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          onClick={onClick}\r\n          onKeyPress={onClick}\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n          style={{ display: 'inline-block', ...style }}\r\n        >\r\n          {children}\r\n        </div>\r\n\r\n        <Portal>\r\n          <input\r\n            ref={onInputRef}\r\n            type=\"file\"\r\n            accept={accept}\r\n            onChange={onChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFiles;","import React, { Component } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// this is used to create scrollbars on windows devices like the ones from apple devices\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// backgroundImage for Sidebar\r\nimport image from \"assets/img/full-screen-image-3.jpg\";\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n//import InputFiles from 'react-input-files';\r\nimport InputFiles from './../Input/InputFiles.js'\r\n\r\n//const bgImage = { backgroundImage: \"url(\" + image + \")\" };\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onOpenClick = this.onOpenClick.bind(this);\r\n    this.state = {\r\n      isWindows: navigator.platform.indexOf(\"Win\") > -1 ? true : false,\r\n      width: window.innerWidth\r\n    };\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  // if the windows width changes CSS has to make some changes\r\n  // this functions tell react what width is the window\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    // add event listener for windows resize\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebarWrapper, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      setTimeout(() => {\r\n        ps.update();\r\n      }, 350);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n\r\n  onOpenClick() {\r\n    document.getElementById('input-files').click();     \r\n    return false;\r\n  }\r\n\r\n  getChangeCount() {\r\n    return this.props.changeCount > 0 ? \" (\" + this.props.changeCount + \")\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\" data-color=\"black\" data-image={image}>\r\n        {/*<div className=\"sidebar-background\" style={bgImage} />*/}\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-mini\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              <i className=\"fa fa-book\"></i>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            ForkFolio\r\n          </a>\r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebarWrapper\">\r\n          <ul className=\"nav\">\r\n            {/* If we are on responsive, we want both links from navbar and sidebar\r\n                            to appear in sidebar, so we render here HeaderLinks */}\r\n            {/*this.state.width <= 992 ? <HeaderLinks {...this.props} /> : null*/}\r\n            {/*\r\n                            here we render the links in the sidebar\r\n                            if the link is simple, we make a simple link, if not,\r\n                            we have to create a collapsible group,\r\n                            with the speciffic parent button and with it's children which are the links\r\n                        */}\r\n            {dashboardRoutes.map((prop, key) => {\r\n              var st = {};\r\n              st[prop[\"state\"]] = !this.state[prop.state];\r\n              if (prop.collapse) {\r\n                return (\r\n                  <li className={this.activeRoute(prop.path)} key={key}>\r\n                    <a onClick={() => this.setState(st)}>\r\n                      <i className={prop.icon} />\r\n                      <p>\r\n                        {prop.name + (this.state[prop.state] ? \"\" : this.getChangeCount())}\r\n                        <b\r\n                          className={\r\n                            this.state[prop.state]\r\n                              ? \"caret rotate-180\"\r\n                              : \"caret\"\r\n                          }\r\n                        />\r\n                      </p>\r\n                    </a>\r\n                    <Collapse in={this.state[prop.state]}>\r\n                      <ul className=\"nav\">\r\n                        <li className={\"\"} key={5}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.newPortfolio()}>\r\n                              <i className={\"fa fa-file-text-o\"} />\r\n                              <p>New</p>\r\n                            </a>\r\n                        </li>                      \r\n                        <li className={\"\"} key={6}>\r\n                          <a className=\"nav-link\" onClick={() => this.onOpenClick()}>\r\n                              <i className={\"fa fa-folder-open\"} />\r\n                              <p>Open</p>\r\n                            </a>\r\n                        </li>\r\n                        <li className={\"\"} key={7}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.downloadPortfolio()}>\r\n                            <i className={\"fa fa-floppy-o\"} />\r\n                            <p>Save{this.getChangeCount()}</p>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </Collapse>\r\n                    <InputFiles \r\n                      onChange={this.props.uploadPortfolioFromFile}\r\n                      accept=\"application/json\">\r\n                      <a id=\"input-files\">\r\n                      </a>\r\n                    </InputFiles>\r\n                  </li>\r\n                );\r\n              } else {\r\n                if (prop.redirect) {\r\n                  return null;\r\n                } else {\r\n                  return (\r\n                    <li className={this.activeRoute(prop.path)} key={key}>\r\n                      <NavLink\r\n                        to={prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n            <li className={\"\"} key={8}>\r\n              <a className=\"nav-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className={\"fa fa-comments\"} />\r\n                <p>Feedback</p>\r\n              </a>    \r\n            </li>\r\n            <li className={\"\"} key={9}>\r\n              <a className=\"nav-link\" onClick={() => this.props.showHelpPanel()}>\r\n                <i className={\"fa fa-question-circle\"} />\r\n                <p>Help</p>\r\n              </a>    \r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n} from \"react-bootstrap\";\r\nimport { formatUtils } from './../../utils/FormatUtils';\r\n\r\nclass HeaderLinks extends Component {\r\n\r\n  getTotalBalance() {\r\n    if(this.props.userModel != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    } \r\n\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav pullRight>\r\n          <NavItem eventKey={3} href=\"#/portfolio\">\r\n            <p>{formatUtils.toShortFormat(this.getTotalBalance())}</p>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\n// links that appear in navbar - they are separated from this component (navbar) so that we can redner them on responsive in sidebar as well\r\n\r\nimport HeaderLinks from \"./HeaderLinks.jsx\";\r\n\r\n// we import here the routes for dashboard pages (links that appear in sidebar) to set navbar's name\r\n\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMinimizeSidebar = this.handleMinimizeSidebar.bind(this);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n  }\r\n  makeBrand() {\r\n    var name;\r\n    dashboardRoutes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n  // function that makes the sidebar from normal to mini and vice-versa\r\n  handleMinimizeSidebar() {\r\n    document.body.classList.toggle(\"sidebar-mini\");\r\n  }\r\n  // function for responsive that hides/shows the sidebar\r\n  mobileSidebarToggle(e) {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <div className=\"navbar-minimize\">\r\n          <button\r\n            id=\"minimizeSidebar\"\r\n            className=\"btn btn-default btn-fill btn-round btn-icon\"\r\n            onClick={this.handleMinimizeSidebar}\r\n          >\r\n            <i className=\"fa fa-ellipsis-v visible-on-sidebar-regular\" />\r\n            <i className=\"fa fa-navicon visible-on-sidebar-mini\" />\r\n          </button>\r\n        </div>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            {/* Here we create navbar brand, based on route name */}\r\n            {this.makeBrand()}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n\r\n        {/* Here we import the links that appear in navbar */}\r\n        {window.innerWidth > 992 ? (\r\n          <HeaderLinks \r\n            {...this.props}\r\n          />\r\n        ) : null}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nclass Footer extends Component {\r\n  /*\r\n  <li>\r\n    <a href=\"https://facebook.com/link-here\">\r\n      <i className=\"fa fa-facebook\"></i> Facebook \r\n    </a>\r\n  </li>\r\n  <li>\r\n    <a href=\"https://googleplus.com/link-here\">\r\n      <i className=\"fa fa-google-plus\"></i> Google Plus \r\n    </a>\r\n  </li>\r\n  */\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={\r\n          \"footer\" +\r\n          (this.props.transparent !== undefined ? \" footer-transparent\" : \"\")\r\n        }\r\n      >\r\n        <div\r\n          className={\r\n            \"container\" + (this.props.fluid !== undefined ? \"-fluid\" : \"\")\r\n          }\r\n        >\r\n          <nav className=\"pull-left\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://twitter.com/forkfol_io\">\r\n                  <i className=\"fa fa-twitter\"></i> Twitter \r\n                </a>\r\n              </li>             \r\n            </ul>\r\n          </nav>\r\n          <p className=\"copyright pull-right\">\r\n            Copyright &copy; {1900 + new Date().getYear()}{\" \"} ForkFol.io {packageJson.version}\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","/*jshint esversion: 6 */\r\n\r\nexport default class Ticker {\r\n  constructor(pair, price, time, percentChange24h) {\r\n    this.pair = pair;\r\n    this.price = price;\r\n    this.time = time;\r\n    this.percentChange24h = percentChange24h;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class Currency {\r\n  constructor(code, name, rank, isFiat = false) {\r\n    this.code = code;\r\n    this.name = name;\r\n    this.rank = rank;\r\n    this.isFiat = isFiat;\r\n    this.meta = null;\r\n  }\r\n}\r\n","function getRestURL() {\r\n    console.log(window.location.host)\r\n    if (window.location.host === 'localhost:3000') {\r\n        //return 'http://localhost:8080/'\r\n        // bypass if server is not running on localhost\r\n        return 'https://forkfol.io/dummydata/';\r\n    } \r\n\r\n    return 'https://rest.forkfol.io/rest/';\r\n}\r\n\r\nfunction isLocalhost() {\r\n    console.log(\"Is localhost: \" + (window.location.host === 'localhost:3000'))\r\n    return window.location.host === 'localhost:3000';\r\n}\r\n\r\nexport const config = {\r\n    restURL: getRestURL(),\r\n    isLocalhost: isLocalhost()\r\n}","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col, Modal} from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass ConfirmNewPortfolioDialog extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm new portfolio</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                  You have {this.props.changeCount} unsaved change{this.props.changeCount > 1 ? \"s\" : \"\"} in your current portfolio. If you create a\r\n\t\t              new portfolio, all unsaved changes will be lost.\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    Are you sure you want to create a new portfolio?\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.createNew()}\r\n                  >\r\n                    Yes\r\n                  </Button>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.saveCurrentAndCreateNew()}\r\n                  >\r\n                    Save current and create new\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmNewPortfolioDialog;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nclass DemoCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={12} md={12}>\r\n                  <p><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> You're seeing a live demo, showcasing features on a sample portfolio. <a href=\"https://forkfol.io/app/\">Click here to create your portfolio now <i className=\"fa fa-check\" aria-hidden=\"true\"></i></a></p>            \r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DemoCard;\r\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\r\n\r\nvar indexRoutes = [\r\n  { path: \"/\", name: \"Home\", component: Dashboard }\r\n];\r\n\r\nexport default indexRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// react component that creates notifications (like some alerts with messages)\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\nimport Header from \"components/Header/Header.jsx\";\r\nimport Footer from \"components/Footer/Footer.jsx\";\r\nimport Promise from \"bluebird\";\r\n// dinamically create dashboard routes\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\n// style for notifications\r\nimport { style } from \"variables/Variables.jsx\";\r\nimport { userModel, resModel } from \"../../model/init/ResModelInit.js\";\r\n\r\nimport Ticker from \"../../model/Ticker\";\r\nimport demofolio from '../../model/init/demofolio.json';\r\nimport Currency from \"../../model/Currency\";\r\nimport CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport UserModel from \"../../model/UserModel\";\r\nimport { config } from \"../../config/Config.js\";\r\nimport FileSaver from 'file-saver';\r\nimport cookie from 'react-cookies';\r\nimport ConfirmNewPortfolioDialog from \"../../views/dialogs/ConfirmNewPortfolioDialog\";\r\nimport DemoCard from \"../../views/common/DemoCard\";\r\nimport ReactGA from 'react-ga';\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNotificationClick = this.handleNotificationClick.bind(this);\r\n    \r\n    this.showHelpPanel = this.showHelpPanel.bind(this);\r\n    this.hideHelpPanel = this.hideHelpPanel.bind(this);\r\n\r\n    this.showAddTradeDialog = this.showAddTradeDialog.bind(this);\r\n    this.hideAddTradeDialog = this.hideAddTradeDialog.bind(this);\r\n    this.showAddFundingDialog = this.showAddFundingDialog.bind(this);\r\n    this.hideAddFundingDialog = this.hideAddFundingDialog.bind(this);\r\n\r\n    this.showEditTradeDialog = this.showEditTradeDialog.bind(this);\r\n    this.hideEditTradeDialog = this.hideEditTradeDialog.bind(this);\r\n    this.showEditFundingDialog = this.showEditFundingDialog.bind(this);\r\n    this.hideEditFundingDialog = this.hideEditFundingDialog.bind(this);\r\n\r\n    this.hideConfirmNewPortfolioDialog = this.hideConfirmNewPortfolioDialog.bind(this);\r\n\r\n    this.addTransaction = this.addTransaction.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.updateTransaction = this.updateTransaction.bind(this);\r\n\r\n    this.setEditedTransaction = this.setEditedTransaction.bind(this);\r\n\r\n    this.fetchRecentPrices = this.fetchRecentPrices.bind(this);\r\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\r\n    this.getCurrenciesToFetch = this.getCurrenciesToFetch.bind(this);\r\n    this.fetchAllAndRender = this.fetchAllAndRender.bind(this);\r\n    this.fetchHistoday = this.fetchHistoday.bind(this);\r\n    this.fetchMeta = this.fetchMeta.bind(this);\r\n    this.isDemo = this.isDemo.bind(this);\r\n\r\n    this.updateUserModel = this.updateUserModel.bind(this);\r\n\r\n    this.newPortfolio = this.newPortfolio.bind(this);\r\n    this.openPortfolio = this.openPortfolio.bind(this);\r\n    this.savePortfolio = this.savePortfolio.bind(this);\r\n    this.saveCurrentAndCreateNewPortfolio = this.saveCurrentAndCreateNewPortfolio.bind(this);\r\n\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      isHelpPanelShown: false,\r\n      isAddTradeDialogShown: false,\r\n      isAddFundingDialogShown: false,\r\n      isEditTradeDialogShown: false,\r\n      isEditFundingDialogShown: false,\r\n      isConfirmNewPortfolioDialogShown: false,\r\n      userModel: userModel,\r\n      resModel: resModel,\r\n      editedTransaction: null,\r\n      changeCount: 0\r\n    };\r\n  }\r\n  \r\n  toTokensString(currencies) {\r\n    let str = \"\";\r\n    for(let c of currencies) {\r\n      str += (c.code + \",\");\r\n    }\r\n  \r\n    return str.slice(0,-1);\r\n  }\r\n\r\n  isDemo() {\r\n    return new Promise((accept, reject) => {\r\n      fetch('appversion.json').then(res => res.json()).then((out) => {\r\n        accept(out.isDemo);\r\n        return;\r\n      }).catch(err => { \r\n        reject(err);\r\n        return;  \r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchRecentPrices() {\r\n    let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n    if(currencies.length > 0) {\r\n      fetch(config.restURL + 'recent?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let tickers = JSON.parse(body);\r\n        let count = 0;\r\n        for (let i = 0; i < tickers.length; i++) {\r\n          let newPrice = parseFloat(tickers[i].l);\r\n          //console.log(\"--------\")\r\n          //console.log(\"Received token: \");\r\n          //console.log(tickers[i])\r\n          //console.log(\"Existing ticker:\");\r\n          //console.log(resModel.recentTickers.get(tickers[i].c))\r\n          // remove shitcoin duplicates\r\n          if(newPrice > 0.001) {\r\n            // if ticker doesn't exist or is updated\r\n            if(resModel.recentTickers.get(tickers[i].c) == null ||\r\n              newPrice !== resModel.recentTickers.get(tickers[i].c).price) {\r\n              let pair = new CurrencyPair(tickers[i].c, resModel.usd);\r\n              resModel.recentTickers.set(tickers[i].c, new Ticker(pair, newPrice, new Date(parseInt(tickers[i].t, 10) * 1000), tickers[i].p))\r\n              count++;\r\n            }\r\n          }\r\n        }\r\n        // if there is update, render\r\n        if(count > 0) {\r\n          console.log(\"Recent prices updated (\" + count + \" tickers).\")\r\n          let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n          this.setState({\r\n            userModel: newModel,\r\n            resModel: this.state.resModel.clone()\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // fetches a list of all curencies, crypto and fiat, and stores them in resModel\r\n  fetchCurrencies() {\r\n    return new Promise((accept, reject) => {\r\n      let url = config.restURL + (config.isLocalhost ? 'currencies.json' : 'currencies');\r\n      console.log(\"Fetching: \" + url)\r\n      fetch(url).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        for (let c of JSON.parse(body)) {\r\n          let currency = new Currency(c.c, c.n, c.r, c.f);\r\n          resModel.dailyTickers.set(currency, []);\r\n          if(currency.code === 'USD') {\r\n            resModel.usd = currency;\r\n          }\r\n        }\r\n        accept();\r\n        return;\r\n      })\r\n    });\r\n  }\r\n  \r\n  getCurrenciesToFetch(userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const k of currentPortfolio.balances.keys()) {\r\n      currencies.push(k);\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n  \r\n  fetchAllAndRender(currencies, daysSince) {\r\n\r\n    // fetch meta first for loading speed\r\n    this.fetchMeta().then(() => {\r\n      // prepare all promises\r\n      const promises = [];\r\n      for(let currency of currencies) {\r\n        promises.push(this.fetchHistoday(currency, daysSince));\r\n      }\r\n    \r\n      // resolve, then render\r\n      Promise.all(promises).then(() => {\r\n        console.log(\"History prices updated (\" + promises.length + \" series).\");\r\n\r\n        // re-render\r\n        let newResModel = this.state.resModel.clone();\r\n        let newUserModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, newResModel);\r\n        this.setState({\r\n          userModel: newUserModel,     \r\n          resModel: newResModel\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchHistoday(currency, days) {\r\n    return new Promise((accept, reject) => {\r\n      fetch(config.restURL + 'histoday?range=' + days + '&tokens=' + currency.code)\r\n      .then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let repacked = [];\r\n        for (let t of JSON.parse(body)) {\r\n          let pair = new CurrencyPair(currency, resModel.usd);\r\n          repacked.push(new Ticker(pair, t.l, new Date(parseInt(t.t, 10) * 1000)));\r\n        }\r\n        resModel.dailyTickers.set(currency, repacked);\r\n        accept();\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchMeta() {\r\n    return new Promise((accept, reject) => {\r\n      let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n      if(currencies.length > 0) {\r\n        fetch(config.restURL + 'meta?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n          return response.text()\r\n        }).then((body) => {\r\n          let tickers = JSON.parse(body);\r\n          for (let i = 0; i < tickers.length; i++) {\r\n            let currency = resModel.findCurrencyByCode(tickers[i].c);\r\n            currency.meta = JSON.parse(tickers[i].m);\r\n          }\r\n          accept();\r\n          return;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ \r\n      _notificationSystem: this.refs.notificationSystem,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.action === \"PUSH\" &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    // start fetching prices based on user model\r\n    this.fetchCurrencies().then(() => {\r\n      this.isDemo().then((isDemo) => {\r\n        let showHelpPanel = false;\r\n        let newModel;\r\n        if(!isDemo) {\r\n          // check if cookie is not set, then it's the first load, and set it always\r\n          showHelpPanel = cookie.load('showGettingStarted') === undefined;\r\n          cookie.save('showGettingStarted', \"1\", { path: '/', maxAge: 31536000});\r\n\r\n          // if app, set model from local storage if any, or empty\r\n          let portfolioJson = localStorage.getItem('portfolio01');\r\n          if(portfolioJson != null && portfolioJson !== '') {\r\n            let portfolioObject = JSON.parse(portfolioJson);\r\n            console.log('Loaded portfolio from local storage.')\r\n            newModel = this.updateUserModel(portfolioObject, portfolioObject.changeCount);\r\n          } else {\r\n            newModel = this.updateUserModel({}, 0);\r\n          }\r\n        } else {\r\n          // if demo, set model from demofolio file\r\n          console.log('Loaded default portfolio.')\r\n          newModel = this.updateUserModel(demofolio, 0);\r\n        }\r\n\r\n        this.setState({\r\n          isHelpPanelShown: showHelpPanel,\r\n          isDemo: isDemo,\r\n        });\r\n\r\n        if(newModel.transactions[0] != null) {\r\n          let daysSince = newModel.getDaysSinceFirstTx();\r\n          this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), daysSince + 2);\r\n        }\r\n\r\n        // start checking recent prices periodically\r\n        this.fetchRecentPrices();\r\n        setInterval(this.fetchRecentPrices, 60000);\r\n      });\r\n    });\r\n    \r\n\r\n    if (document.documentElement.className.indexOf(\"nav-open\") !== -1) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n  // function that shows/hides notifications - it was put here, because the wrapper div has to be outside the main-panel class div\r\n  handleNotificationClick(position) {\r\n    var color = Math.floor(Math.random() * 4 + 1);\r\n    var level;\r\n    switch (color) {\r\n      case 1:\r\n        level = \"success\";\r\n        break;\r\n      case 2:\r\n        level = \"warning\";\r\n        break;\r\n      case 3:\r\n        level = \"error\";\r\n        break;\r\n      case 4:\r\n        level = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.state._notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n      message: (\r\n        <div>\r\n          Notification text\r\n        </div>\r\n      ),\r\n      level: level,\r\n      position: position,\r\n      autoDismiss: 15\r\n    });\r\n  }\r\n\r\n  // TODO: merge show hide to one\r\n\r\n  showHelpPanel() {\r\n    this.setState({ isHelpPanelShown: true });\r\n  }\r\n\r\n  hideHelpPanel() {\r\n    this.setState({ isHelpPanelShown: false });\r\n  }\r\n\r\n  showAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: true });\r\n  }\r\n\r\n  hideAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: false });\r\n  }\r\n\r\n  showAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: true });\r\n  }\r\n\r\n  hideAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: false });\r\n  }\r\n\r\n  showEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: true });\r\n  }\r\n\r\n  hideEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: false });\r\n  }\r\n\r\n  showEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: true });\r\n  }\r\n  \r\n  hideEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: false });\r\n  }\r\n\r\n  \r\n  hideConfirmNewPortfolioDialog() {\r\n    this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n  }\r\n\r\n  addTransaction(tx) {\r\n    let isOldest = true, hasNewBalance = true;\r\n    // check if historic prices need to be updated\r\n    if(this.state.userModel.portfolios[1] != null) {\r\n      let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n      isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n      hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n    }\r\n\r\n    // add transaction and sort\r\n    this.state.userModel.transactions.push(tx);\r\n    this.state.userModel.transactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  updateTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, add, sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== this.state.editedTransaction;\r\n    })\r\n    newTransactions.push(tx);\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  removeTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) >= dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, and sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== tx;\r\n    });\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n  \r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction removed. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  setEditedTransaction(tx) {\r\n    this.setState({ editedTransaction: tx });\r\n  }\r\n\r\n  newPortfolio() {\r\n    // if there are unsaved changes, show confirm dialog\r\n    if(this.state.changeCount > 0 && !this.state.isConfirmNewPortfolioDialogShown) {\r\n      this.setState({\r\n        isConfirmNewPortfolioDialogShown: true\r\n      });\r\n    } else {\r\n      console.log(\"New portfolio created\");\r\n      // save to model\r\n      this.updateUserModel({}, 0);\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', '');\r\n      }\r\n\r\n      this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n\r\n      ReactGA.event({category: 'User', action: 'New'});\r\n    }\r\n  }\r\n\r\n  saveCurrentAndCreateNewPortfolio() {\r\n    this.savePortfolio();\r\n    this.newPortfolio();\r\n  }\r\n\r\n\r\n  updateUserModel(fileFormatPortfolio, changeCount) {\r\n    let transactions = [], positions = [];\r\n    // parse fileFormatPortfolio and get transactions \r\n    if(fileFormatPortfolio.transactions) {\r\n      transactions = this.stringifiedToObjectsTransactions(fileFormatPortfolio.transactions);\r\n    }\r\n    // parse fileFormatPortfolio and get positions \r\n    if(fileFormatPortfolio.positions) {\r\n      positions = fileFormatPortfolio.positions;\r\n    }\r\n    \r\n    // update userModel with new transactions\r\n    let newModel = new UserModel(transactions, positions, this.state.resModel);\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: changeCount\r\n    });\r\n\r\n    return newModel;\r\n  }\r\n\r\n  openPortfolio(files) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      // TODO: check if format ok, version number\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', reader.result);\r\n      }\r\n\r\n      // parse json string to object\r\n      let portfolioObj = JSON.parse(reader.result);\r\n\r\n      // set new model, and get prices\r\n      let newModel = this.updateUserModel(portfolioObj, 0);\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n\r\n      ReactGA.event({category: 'User', action: 'Open'});\r\n    }, false);\r\n    if (files.length > 0) {\r\n      reader.readAsText(files[0]);\r\n    } else {\r\n      //this.props.showError(new InpulidationError(\"Portfolio file should be in JSON file format.\"));\r\n    }\r\n  }\r\n\r\n  savePortfolio() {\r\n    // create json string\r\n    let portfolioJson = this.getPortfolioJson(this.state.userModel, 0);\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', portfolioJson);\r\n    }\r\n\r\n    // save to file\r\n    let file = new File([portfolioJson], \"my-forkfolio-\" + this.state.userModel.transactions.length + \".json\", {type: \"text/plain;charset=utf-8\"});\r\n    FileSaver.saveAs(file);\r\n\r\n    this.setState({\r\n      changeCount: 0\r\n    });\r\n\r\n    ReactGA.event({category: 'User', action: 'Save'});\r\n  }\r\n\r\n  getPortfolioJson(userModel, changeCount) {\r\n    let fileTransactions = [];\r\n    for(let tx of userModel.transactions) {\r\n      let trade = {\r\n        isTrade: tx.isTrade,\r\n        isBuy: tx.isBuy,\r\n        pair: tx.pair.base.code + \"/\" + tx.pair.counter.code,\r\n        baseAmount: tx.baseAmount,\r\n        counterAmount: tx.counterAmount,\r\n        time: tx.time.getTime(),\r\n        comment: tx.comment\r\n      }\r\n      fileTransactions.push(trade);\r\n    }\r\n    let portfolioFile = {\r\n      version: 1,\r\n      credit: \"This json file is created by ForkFolio App at https://forkfol.io\",\r\n      transactions: fileTransactions,\r\n      changeCount: changeCount\r\n    }\r\n\r\n    return JSON.stringify(portfolioFile, null, \"\\t\");\r\n  }\r\n\r\n  stringifiedToObjectsTransactions(fileFormatTransactions) {\r\n    // got through file transactions, and create objects from pair strings\r\n    let transactions = [];\r\n    for(let t of fileFormatTransactions) {\r\n      let pairStr = t.pair.split('/');\r\n      let base = resModel.findCurrencyByCode(pairStr[0]);\r\n      let counter = resModel.findCurrencyByCode(pairStr[1]);\r\n      if(base !== null && counter !== null) {\r\n        let pair = new CurrencyPair(base, counter);\r\n        let tx = new Transaction(t.isTrade, t.isBuy, pair, t.baseAmount, t.counterAmount, new Date(t.time), t.comment);\r\n        transactions.push(tx);\r\n      }\r\n    }\r\n\r\n    return transactions;\r\n  }\r\n\r\n  render() {\r\n    let confirmNewPortfolioDialog = (\r\n      <ConfirmNewPortfolioDialog\r\n        isDialogShown={this.state.isConfirmNewPortfolioDialogShown}\r\n        hideDialog={this.hideConfirmNewPortfolioDialog}\r\n        createNew={this.newPortfolio}\r\n        saveCurrentAndCreateNew={this.saveCurrentAndCreateNewPortfolio}\r\n        changeCount={this.state.changeCount}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props}\r\n          newPortfolio={this.newPortfolio} \r\n          uploadPortfolioFromFile={this.openPortfolio} \r\n          downloadPortfolio={this.savePortfolio} \r\n          showHelpPanel={this.showHelpPanel} \r\n          userModel={this.state.userModel}\r\n          resModel={this.state.resModel}\r\n          changeCount={this.state.changeCount}\r\n        />\r\n        <div\r\n          className={\r\n            \"main-panel\" +\r\n            (this.props.location.pathname === \"/maps/full-screen-maps\"\r\n              ? \" main-panel-maps\"\r\n              : \"\")\r\n          }\r\n          ref=\"mainPanel\"\r\n        >\r\n          <Header \r\n            location={this.props.location}\r\n            userModel={this.state.userModel}\r\n            resModel={this.state.resModel}\r\n          />\r\n          {this.state.isDemo ? (\r\n            <div className=\"demo-content\">\r\n              <DemoCard />\r\n            </div>\r\n          ) : \"\"\r\n          }\r\n          \r\n          <Switch>\r\n            {dashboardRoutes.map((prop, key) => {\r\n              if (prop.collapse) {\r\n                return prop.views.map((prop, key) => {\r\n                  if (prop.name === \"Notifications\") {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        key={key}\r\n                        render={routeProps => (\r\n                          <prop.component\r\n                            {...routeProps}\r\n                            handleClick={this.handleNotificationClick}\r\n                          />\r\n                        )}\r\n                      />\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        component={prop.component}\r\n                        key={key}\r\n                      />\r\n                    );\r\n                  }\r\n                });\r\n              } else {\r\n                if (prop.redirect)\r\n                  return (\r\n                    <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                  );\r\n                else\r\n                  return (\r\n                    <Route\r\n                      path={prop.path}\r\n                      //component={prop.component}\r\n                      key={key}\r\n                      render={routeProps => (\r\n                        <prop.component\r\n                          {...routeProps}\r\n                          handleClick={this.handleNotificationClick}\r\n                          userModel={this.state.userModel}\r\n                          resModel={this.state.resModel}\r\n\r\n                          isHelpPanelShown={this.state.isHelpPanelShown}\r\n                          hideHelpPanel={this.hideHelpPanel}\r\n\r\n                          isAddTradeDialogShown={this.state.isAddTradeDialogShown}\r\n                          showAddTradeDialog={this.showAddTradeDialog}\r\n                          hideAddTradeDialog={this.hideAddTradeDialog}\r\n\r\n                          isAddFundingDialogShown={this.state.isAddFundingDialogShown}\r\n                          showAddFundingDialog={this.showAddFundingDialog}\r\n                          hideAddFundingDialog={this.hideAddFundingDialog}\r\n\r\n                          isEditTradeDialogShown={this.state.isEditTradeDialogShown}\r\n                          showEditTradeDialog={this.showEditTradeDialog}\r\n                          hideEditTradeDialog={this.hideEditTradeDialog}\r\n\r\n                          isEditFundingDialogShown={this.state.isEditFundingDialogShown}\r\n                          showEditFundingDialog={this.showEditFundingDialog}\r\n                          hideEditFundingDialog={this.hideEditFundingDialog}\r\n\r\n                          addTransaction={this.addTransaction}\r\n                          removeTransaction={this.removeTransaction}\r\n\r\n                          updateTransaction={this.updateTransaction}\r\n                          setEditedTransaction={this.setEditedTransaction}\r\n                          editedTransaction={this.state.editedTransaction}\r\n                        />\r\n                      )}\r\n                    />\r\n                  );\r\n              }\r\n            })}\r\n          </Switch>\r\n          <Footer fluid />\r\n          {this.state.isConfirmNewPortfolioDialogShown ? confirmNewPortfolioDialog : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport indexRoutes from \"./routes/index.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard.css?v=1.1.1\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport ReactGA from 'react-ga';\r\n\r\nconsole.log(window.location.pathname + window.location.hash);\r\n\r\nfunction initializeReactGA() {\r\n  ReactGA.initialize('UA-112760038-1');\r\n}\r\n\r\nfunction render() {\r\n  console.log(\"Rendering..\");\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <Switch>\r\n        {indexRoutes.map((prop, key) => {\r\n          return <Route \r\n                  path={prop.path} \r\n                  key={key}\r\n                  render={routeProps => (\r\n                    <prop.component\r\n                      {...routeProps}\r\n                    />\r\n                  )}\r\n                 />;\r\n        })}\r\n      </Switch>\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n\r\ninitializeReactGA();\r\nrender();\r\n"],"sourceRoot":""}