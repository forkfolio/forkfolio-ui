{"version":3,"sources":["assets/img/full-screen-image-3.jpg","components/Card/Card.jsx","utils/FormatUtils.js","components/CustomButton/CustomButton.jsx","views/common/InsightsCard.jsx","views/common/HelpCard.jsx","model/CurrencyPair.js","model/Transaction.js","views/dialogs/CommonFundingDialog.jsx","views/dialogs/AddFundingDialog.jsx","model/Portfolio.js","utils/DateUtils.js","model/UserModel.js","model/init/ResModelInit.js","model/ResModel.js","views/PortfolioView.jsx","views/dialogs/CommonTradeDialog.jsx","views/dialogs/AddTradeDialog.jsx","views/dialogs/EditTradeDialog.jsx","views/dialogs/ConfirmRemoveTransactionDialog.jsx","views/TradesView.jsx","web3/CoinGeckoPrices.js","web3/common.js","web3/Uniswap.js","web3/dYdXLong.js","web3/dYdXShort.js","web3/GammaOptions.js","web3/Manual.js","web3/UniswapV3.js","views/positions/AddSubpositionCard.jsx","views/positions/subpositions/UniswapV2Card.jsx","views/positions/subpositions/UniswapV3Card.jsx","views/positions/subpositions/DYDXLongCard.jsx","views/positions/subpositions/DYDXShortCard.jsx","views/positions/subpositions/GammaOptionsCard.jsx","views/positions/PositionChartCard.jsx","views/PositionsView.jsx","views/dialogs/EditFundingDialog.jsx","views/FundingView.jsx","views/common/PortfolioPie.jsx","routes/dashboard.jsx","views/PerformanceView.jsx","components/Input/InputFiles.js","components/Sidebar/Sidebar.jsx","components/Header/HeaderLinks.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","model/Ticker.js","model/Currency.js","config/Config.js","views/dialogs/ConfirmNewPortfolioDialog.jsx","views/common/DemoCard.jsx","routes/index.jsx","layouts/Dashboard/Dashboard.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Card","react_default","a","createElement","className","this","props","hidden","calendar","plain","wizard","undefined","title","category","textCenter","rightSection","ctAllIcons","ctFullWidth","ctTextCenter","tableFullWidth","content","stats","legend","ftTextCenter","Component","formatUtils","value","digits","toLocaleString","minimumFractionDigits","maximumFractionDigits","balance","short","adder","formatNumber","slice","length","style1","Math","abs","name","userModel","portfolios","tradeCount","transactions","CustomButton","_this$props","special","speciallarge","table","fill","simple","pullRight","block","wd","round","icon","neutral","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","rest","Object","objectWithoutProperties","btnClasses","cx","btn-special","btn-special-large","btn-table","btn-fill","btn-simple","pull-right","btn-block","btn-wd","btn-round","btn-icon","btn-neutral","btn-social btn-twitter","btn-social btn-facebook","btn-social btn-google","btn-social btn-linkedin","btn-social btn-pinterest","btn-social btn-youtube","btn-social btn-tumblr","btn-social btn-github","btn-social btn-behance","btn-social btn-dribbble","btn-social btn-reddit","btn-social btn-stumbleupon","react_bootstrap_es","assign","InsightsCard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getTradingProfit","bind","assertThisInitialized","_step","totalProfit","_iterator","_createForOfIteratorHelper","s","n","done","tx","isTrade","getProfit","resModel","usd","err","e","f","_step2","totalDeposits","totalWithdrawals","_iterator2","lastPrice","getPastPrice","pair","base","time","isBuy","baseAmount","currentPortfolio","totalBalance","getTotalCryptoBalance","isNaN","toShortFormat","addon","getTotalBalance","tradingProfit","fundings","getTotalFundings","holdingProfit","exposureToCrypto","getExposureToCryptoPercentage","tooltipHelpText","id","components_Card_Card","placement","overlay","components_CustomButton_CustomButton","bsStyle","md","toDecimalFormatStyled","toShortFormatStyled","HelpCard","isHelpPanelShown","fluid","lg","sm","xs","href","class","danger","onClick","showAddFundingDialog","width","height","src","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","mdOffset","hideHelpPanel","CurrencyPair","counter","Transaction","counterAmount","comment","denomination","priceThen","getPrice","priceNow","getLastPrice","profit","code","CommonFundingDialog","handleTabSelect","isValidNumber","setState","amountError","isInvalid","currencyError","dateError","currencies","CommonFundingDialog_createForOfIteratorHelper","dailyTickers","keys","c","push","label","balances","strValue","numValue","parseFloat","current","isAfter","Date","isBefore","Datetime","moment","placeholder","_this2","selected","controlId","componentClass","ControlLabel","smOffset","type","min","state","amount","onChange","event","target","isValidAmount","react_select_es","currency","options","isValidCurrency","_this3","DateTime_default","isValidDate","isEnabledDate","dateFormat","timeFormat","closeOnSelect","inputProps","date","toDate","_this4","key","isDeposit","getDepositCurrencies","getWithdrawalCurrencies","_this5","show","isDialogShown","onHide","hideDialog","Header","closeButton","Title","Body","activeKey","onSelect","eventKey","horizontal","getBuySellFormGroup","getDateFormGroup","getCommentFormGroup","Footer","handleSaveButtonClick","buttonText","AddFundingDialog","getInitialState","isInitialDeposit","console","log","window","location","pathname","ReactGA","modalview","nextProps","addTransaction","Portfolio","previous","genesisTx","Map","calculateTradeCount","calculateCurrencyBalances","count","isNotFunding","get","set","toConsumableArray","entries","sort","b","getCurrencyBalance","priceInDenomination","Portfolio_createForOfIteratorHelper","k","isFiat","currencyBalance","getTime","pastPortfolio","getPastPortfolio","_step3","totalPastBalance","_iterator3","getPastCurrencyBalance","prev","dateUtils","sinceDate","diff","UserModel","arguments","positions","preparePortfolios","empty","sortBalances","UserModel_createForOfIteratorHelper","portfolio","unshift","firstDate","getDaysSince","ResModel","recentTickers","newModel","price","percentChange24h","d1","d2","getFullYear","getMonth","getDate","ResModel_createForOfIteratorHelper","t","sameDay","rangeSelectorModel","inputPosition","align","x","y","buttonPosition","buttons","text","days","userFriendlyText","PortfolioView","getPerformanceChartOptions","getTableColumnsDesktop","getTableColumnsMobile","getTableData","getLogoURL","hash","pageview","innerWidth","addEventListener","updateWidth","rows","total","PortfolioView_createForOfIteratorHelper","data","originalLogoURL","replace","accessor","maxWidth","Cell","row","downsizeTokenLogo","alt","style","float","sortMethod","toGreenRedPercentStyle","sortable","minWidth","substr","meta","toLowerCase","logo","tableData","_ref3","_ref2","slicedToArray","v","getPercentChange24h","share","series","_step4","serie","_iterator4","balanceInDenominated","chart","plotOptions","stacking","lineColor","lineWidth","marker","rangeSelector","tooltip","shared","valueSuffix","valueDecimals","credits","enabled","assetCount","size","showPagination","isMobile","addFundingDialog","dialogs_AddFundingDialog","isAddFundingDialogShown","hideAddFundingDialog","tooltipHelpText1","tooltipHelpText2","common_HelpCard","react_table_es","columns","defaultPageSize","showPageSizeOptions","noDataText","getNoDataText","common_InsightsCard","highcharts_react_official_default","highcharts","Highstock","constructorType","CommonTradeDialog","buyAmountError","buyCurrencyError","sellAmountError","sellCurrencyError","buyCurrencies","CommonTradeDialog_createForOfIteratorHelper","sellCurrencies","buyAmount","isValidBuyAmount","buyCurrency","isValidBuyCurrency","sellAmount","isValidSellAmount","sellCurrency","isValidSellCurrency","defaultActiveKey","editedTransaction","Container","Content","animation","Pane","getBuyFormGroup","getSellFormGroup","AddTradeDialog","getBuyCurrencies","getSellCurrencies","buyRank","rank","sellRank","pairBuy","getPair","EditTradeDialog","toString","getSelectObject","updateTransaction","ConfirmRemoveTransactionDialog","removedTransaction","toShortString","toISOString","split","getType","getDescription","getComment","removeTransaction","TradesView","hideConfirmDialog","mapTradesToState","isConfirmDialogShown","newestFirst","TradesView_createForOfIteratorHelper","volume","cost","profitPercent","getProfitPercent","map","prop","profitpercentage","actions","setEditedTransaction","showEditTradeDialog","getTotalCost","getTotalVolume","pairStr","findCurrencyByCode","totalCostInUsd","getTotalProfit","getTypeFooter","max","_step5","_iterator5","isOnePair","getTotalPrice","getTotalProfitPercentage","filterMethod","filter","indexOf","getPairFooter","filterable","getVolumeFooter","getPriceFooter","getCostFooter","getProfitPercentageFooter","addTradeDialog","dialogs_AddTradeDialog","isAddTradeDialogShown","hideAddTradeDialog","editTradeDialog","dialogs_EditTradeDialog","isEditTradeDialogShown","hideEditTradeDialog","confirmRemoveTransactionDialog","dialogs_ConfirmRemoveTransactionDialog","showAddTradeDialog","getTableColumns","CoinGeckoPrices","address","url","fetch","response","json","myJson","Number","usdcAddress","getContractInstance","web3","abi","eth","Contract","debalanceETH","currentPrice","startBASE","ethTokens","daiTokens","debalanceDAI","startUNDER","clone","original","create","OptionMath","createClass","PutCallFlag","S","X","T","r","sqrt","CND","exp","PI","Uniswap","marketAddress","addressBASE","addressUNDER","myLIQ","apr","feeInPercent","myBASE","myUNDER","poolBASE","poolUNDER","poolLIQ","position","marketInstance","uniswapABI","baseInstance","daiABI","underInstance","getBalance","ethBalance","methods","totalSupply","balanceOf","pow","getDecimals","getTokenPriceInUSD","priceBASEUSD","priceUNDERUSD","symbol","under","subpos","newPrice","passedDays","oldPrice","setMarketPrice","poolBASEWithAPR","poolUNDERWithAPR","myShare","exactUNDER","exactBASE","exactLIQ","exactUNDERWithFees","exactBASEWithFees","inputAmount","inputPool","outputPool","dYdXLong","collateralUNDER","quantity","borrowedBASE","boughtUNDER","openingPrice","start","positionBASE","dYdXShort","collateralBASE","borrowedUNDER","boughtBASE","GammaOptions","isCall","isLong","strike","daysToExpiry","iv","optionMath","currentValue","getCurrentValue","currentValueBASE","blackScholes","Manual","extraBASE","extraUNDER","UniswapV3","minPrice","maxPrice","poolID","ignoreImpermanentLoss","collectedFeesBASE","collectedFeesUNDER","managerInstance","NFT_MANAGER_ABI","collect","tokenId","recipient","amount0Max","tokens","amount1Max","from","collectResult","amount0","amount1","newTotalBASE","collectedFeesTotalBASE","openingTotalBASE","token1V2","token2V2","L","L2","H","maxToken2","maxToken1","LP_a","LP_b","LP","multiplier","aprMultiplier","utils","BN","toWei","AddSubpositionCard","selectedType","types","index","getTypes","addSubposition","UniswapV2Card","newValue","subposition","updateSubposition","extra","liq","service","checked","onChangeEnabled","getTitle","removeSubposition","onChangeStartBase","onChangeExtraBase","onChangeStartUnder","onChangeExtraUnder","onChangeStartLiq","onChangeExtraLiq","onChangeAPR","UniswapV3Card","onChangeMinPrice","onChangeMaxPrice","onChangeOpeningPrice","onChangeIgnoreImpermanentLoss","DYDXLongCard","onChangeQuantity","disabled","onChangeBorrowedBase","onChangeBoughtUnder","DYDXShortCard","onChangeBorrowedUnder","onChangeBoughtBase","GammaOptionsCard","onChangeIsLong","onChangeIsCall","onChangeStrike","onChangeDaysToExpiry","onChangeIV","toFixed","PositionChartCard","chartLoaded","chartData","random","customMinX","customMaxX","customXUserSet","customMinY","customMaxY","prevProps","prevState","userModelLoaded","selectedPosition","customPosition","j","subpositions","refreshChart","Array","isArray","pos","prepareChartData","todayData","futureData","chartData1","aprsBASE","chartData2","profitsBASE","chartData3","profitsUNDER","chartData4","rangeEdgesBASE","rangeEdgesUNDER","daysSinceStart","startDate","chartWindow","getChartWindow","startPrice","step","endPrice","right","i","totalOutBASE","totalOutUNDER","market","debalancedBASE","profitBASE","aprTargetBASE","debalancedUNDER","profitUNDER","getRangePoints","left","pivot","entryPrice","profits","maxProfit","prevPoint","firstPoint","leftPoint","rightPoint","xAxis","plotLines","color","plotBands","to","yAxis","opposite","turboThreshold","newSubpos","addService","updatedPosition","update","splice","subpositions_UniswapV2Card","subpositions_UniswapV3Card","subpositions_DYDXLongCard","subpositions_DYDXShortCard","subpositions_GammaOptionsCard","displayCard","Highcharts","getSubpositionCards","positions_AddSubpositionCard","PositionsView","displayDescription","description","displayLinks","links","link","anchor","hideChartDialog","loadWeb3Account","isChartDialogShown","web3DataLoaded","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","on","accounts","chainId","info","error","ethereum","enable","getAccounts","_context2","t0","getMessage","appendedPositions","loadWeb3Data","prepareTableData","getMarketData","uniswapTableSet","totalInBASE","isStacked","inBASE","profitPerMonthTodayToken","profitTodayToken","aprToday","targetPriceUNDER","targetProfitUNDER","profitPerMonthTargetUNDER","aprTargetUNDER","priceAndProfitUNDER","findMaxUNDER","targetHodlUNDER","targetPriceBASE","targetProfitBASE","profitPerMonthTargetBASE","priceAndProfitBASE","findMaxBASE","targetHodlBASE","profitTargetETHUSD","profitTargetTokenUSD","profitPerMonthTargetETHUSD","profitPerMonthTargetTokenUSD","maxProfitTargetUSD","maxProfitPerMonthTargetUSD","sizedays","lower","higher","totalprofit","monthlyprofit","maxBalanceBASE","maxProfitBASE","maxTotalHodlBASE","debalanced","maxBalanceUNDER","maxProfitUNDER","maxTotalHodlUNDER","inUNDER","sumA","columnName","subName","PositionsView_createForOfIteratorHelper","whiteSpace","getSumFooter","getTotalProfitSum","getMonthlyProfitSum","positions_PositionChartCard","EditFundingDialog","FundingView","FundingView_createForOfIteratorHelper","showEditFundingDialog","fundingCount","editFundingDialog","dialogs_EditFundingDialog","isEditFundingDialogShown","hideEditFundingDialog","PortfolioPie","chartOptions","getPieOptions","PortfolioPie_createForOfIteratorHelper","dashboardRoutes","path","component","PerformanceView","rangeClickHandler","daysSince","getDaysSinceFirstTx","getBestCurrentWorstPortfolio","bestPortfolio","best","worstPortfolio","worst","performanceChartOptions","since","setHours","portfoliosSince","getPortfoliosSince","PerformanceView_createForOfIteratorHelper","getPastTotalBalance","getPortfolioSeries","externalCaller","_loop","events","click","common_PortfolioPie","collapse","views","mini","redirect","pathTo","InputFiles","onInputRef","node","input","preventDefault","files","children","accept","react","onKeyPress","role","tabIndex","objectSpread","display","react_portal_es","ref","React","defaultProps","ps","Sidebar","onOpenClick","isWindows","navigator","platform","routeName","updateDimensions","PerfectScrollbar","refs","sidebarWrapper","suppressScrollX","suppressScrollY","setTimeout","destroy","document","getElementById","changeCount","data-color","data-image","image","st","activeRoute","getChangeCount","in","newPortfolio","downloadPortfolio","Input_InputFiles","uploadPortfolioFromFile","es","activeClassName","rel","showHelpPanel","HeaderLinks","handleMinimizeSidebar","mobileSidebarToggle","body","classList","toggle","documentElement","Brand","makeBrand","Toggle","Header_HeaderLinks","transparent","getYear","packageJson","version","Ticker","Currency","config","host","ConfirmNewPortfolioDialog","createNew","saveCurrentAndCreateNew","DemoCard","aria-hidden","indexRoutes","Dashboard","handleNotificationClick","hideConfirmNewPortfolioDialog","fetchRecentPrices","fetchCurrencies","getCurrenciesToFetch","fetchAllAndRender","fetchHistoday","fetchMeta","isDemo","updateUserModel","openPortfolio","savePortfolio","saveCurrentAndCreateNewPortfolio","_notificationSystem","isConfirmNewPortfolioDialogShown","str","Dashboard_createForOfIteratorHelper","Promise","reject","then","res","out","catch","toTokensString","tickers","JSON","parse","l","parseInt","promises","all","newResModel","newUserModel","repacked","m","notificationSystem","history","action","scrollTop","scrollingElement","mainPanel","demofolio","cookie","load","save","maxAge","portfolioJson","localStorage","getItem","portfolioObject","setInterval","level","floor","addNotification","data-notify","message","autoDismiss","isOldest","hasNewBalance","has","newChangeCount","setItem","getPortfolioJson","_this6","newTransactions","item","fileFormatPortfolio","stringifiedToObjectsTransactions","_this7","reader","FileReader","result","portfolioObj","readAsText","file","File","FileSaver","saveAs","_step6","fileTransactions","_iterator6","trade","portfolioFile","credit","stringify","fileFormatTransactions","_step7","_iterator7","_this8","confirmNewPortfolioDialog","dialogs_ConfirmNewPortfolioDialog","NotificationSystem_default","components_Sidebar_Sidebar","components_Header_Header","common_DemoCard","render","routeProps","handleClick","components_Footer_Footer","initialize","ReactDOM"],"mappings":"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","file":"static/js/main.370c331a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/full-screen-image-3.ef9c8d65.jpg\";","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"card\" +\r\n          (this.props.hidden ? \" card-hidden\" : \"\") +\r\n          (this.props.calendar ? \" card-calendar\" : \"\") +\r\n          (this.props.plain ? \" card-plain\" : \"\") +\r\n          (this.props.wizard ? \" card-wizard\" : \"\")\r\n        }\r\n      >\r\n        {this.props.title !== undefined || this.props.category !== undefined ? (\r\n          <div\r\n            className={\"header\" + (this.props.textCenter ? \" text-center\" : \"\")}\r\n          >\r\n            <div className=\"clearfix\">\r\n              <h4 className=\"title\">{this.props.title}</h4>      \r\n              <p className=\"rightsection\">{this.props.rightSection}</p>\r\n            </div>\r\n            <p className=\"category\">{this.props.category}</p>\r\n            <div className=\"clearboth\"></div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            \"content\" +\r\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\r\n            (this.props.ctFullWidth ? \" content-full-width\" : \"\") +\r\n            (this.props.ctTextCenter ? \" text-center\" : \"\") +\r\n            (this.props.tableFullWidth ? \" table-full-width\" : \"\")\r\n          }\r\n        >\r\n          {this.props.content}\r\n        </div>\r\n        {this.props.stats !== undefined || this.props.legend !== undefined ? (\r\n          <div\r\n            className={\r\n              \"footer\" + (this.props.ftTextCenter ? \" text-center\" : \"\")\r\n            }\r\n          >\r\n            {this.props.legend !== undefined ? (\r\n              <div className=\"legend\">{this.props.legend}</div>\r\n            ) : null}\r\n            {this.props.stats !== undefined ? <hr /> : null}\r\n            {this.props.stats !== undefined ? (\r\n              <div className=\"stats\">{this.props.stats}</div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","/*jshint esversion: 6 */\r\nimport React  from 'react';\r\n\r\nclass FormatUtils {\r\n  formatNumber(value, digits) {\r\n    if (value != null) {\r\n      return value.toLocaleString('en-US', { minimumFractionDigits: digits, maximumFractionDigits: digits });\r\n    }\r\n\r\n    return \"0\";\r\n  }\r\n\r\n  toShortFormat(balance) {\r\n    let short = balance;\r\n    let adder = \"\";\r\n    if(balance > 10000000000) {\r\n      short = balance / 1000000000;\r\n      adder = \"B\";\r\n    } else if(balance > 10000000) {\r\n      short = balance / 1000000;\r\n      adder = \"M\";\r\n    } else if(balance > 10000) {\r\n      short = balance / 1000;\r\n      adder = \"K\";\r\n    }\r\n\r\n    // special case if portfolio is negative\r\n    if(balance < 0) {\r\n      let value = formatUtils.formatNumber(short, 2) + adder;\r\n      return \"-$\" + value.slice(1, value.length);\r\n    }\r\n\r\n    return \"$\" + formatUtils.formatNumber(short, 2) + adder;\r\n  }\r\n\r\n  toGreenRedPercentStyle(value) {\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.formatNumber(value, 2) + \"%\"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>navigate to the Funding page,</li>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n}\r\n\r\nexport let formatUtils = new FormatUtils();","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n// used to make this component's props into classes\r\nimport cx from \"classnames\";\r\n// used for making the props of this component to bool\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CustomButton extends Component {\r\n  render() {\r\n    const {\r\n      special,\r\n      speciallarge,\r\n      table,\r\n      fill,\r\n      simple,\r\n      pullRight,\r\n      block,\r\n      wd,\r\n      round,\r\n      icon,\r\n      neutral,\r\n      twitter,\r\n      facebook,\r\n      google,\r\n      linkedin,\r\n      pinterest,\r\n      youtube,\r\n      tumblr,\r\n      github,\r\n      behance,\r\n      dribbble,\r\n      reddit,\r\n      stumbleupon,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const btnClasses = cx({\r\n      \"btn-special\": special,\r\n      \"btn-special-large\": speciallarge,\r\n      \"btn-table\": table,\r\n      \"btn-fill\": fill,\r\n      \"btn-simple\": simple,\r\n      \"pull-right\": pullRight,\r\n      \"btn-block\": block,\r\n      \"btn-wd\": wd,\r\n      \"btn-round\": round,\r\n      \"btn-icon\": icon,\r\n      \"btn-neutral\": neutral,\r\n      \"btn-social btn-twitter\": twitter,\r\n      \"btn-social btn-facebook\": facebook,\r\n      \"btn-social btn-google\": google,\r\n      \"btn-social btn-linkedin\": linkedin,\r\n      \"btn-social btn-pinterest\": pinterest,\r\n      \"btn-social btn-youtube\": youtube,\r\n      \"btn-social btn-tumblr\": tumblr,\r\n      \"btn-social btn-github\": github,\r\n      \"btn-social btn-behance\": behance,\r\n      \"btn-social btn-dribbble\": dribbble,\r\n      \"btn-social btn-reddit\": reddit,\r\n      \"btn-social btn-stumbleupon\": stumbleupon\r\n    });\r\n\r\n    return <Button className={btnClasses} {...rest} />;\r\n  }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n  special: PropTypes.bool,\r\n  speciallarge: PropTypes.bool,\r\n  table: PropTypes.bool,\r\n  fill: PropTypes.bool,\r\n  simple: PropTypes.bool,\r\n  pullRight: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  wd: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  neutral: PropTypes.bool,\r\n  twitter: PropTypes.bool,\r\n  facebook: PropTypes.bool,\r\n  google: PropTypes.bool,\r\n  linkedin: PropTypes.bool,\r\n  pinterest: PropTypes.bool,\r\n  youtube: PropTypes.bool,\r\n  tumblr: PropTypes.bool,\r\n  github: PropTypes.bool,\r\n  behance: PropTypes.bool,\r\n  dribbble: PropTypes.bool,\r\n  reddit: PropTypes.bool,\r\n  stumbleupon: PropTypes.bool\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport { formatUtils } from '../../utils/FormatUtils';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass InsightsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTradingProfit = this.getTradingProfit.bind(this);\r\n  }\r\n\r\n  getTradingProfit(props) {\r\n    let totalProfit = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (tx.isTrade) {\r\n        totalProfit += tx.getProfit(props.resModel, props.resModel.usd);\r\n      }\r\n    }\r\n\r\n    return totalProfit;\r\n  }\r\n\r\n  getTotalFundings(props) {\r\n    // sum all deposits, and withdrawals on their transaction date\r\n    let totalDeposits = 0, totalWithdrawals = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (!tx.isTrade) {\r\n        let lastPrice = props.resModel.getPastPrice(tx.pair.base, props.resModel.usd, tx.time);\r\n        if (tx.isBuy) {\r\n          totalDeposits += tx.baseAmount * lastPrice;\r\n        } else {\r\n          totalWithdrawals += tx.baseAmount * lastPrice;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalDeposits: totalDeposits,\r\n      totalWithdrawals: totalWithdrawals\r\n    }\r\n  }\r\n\r\n  getExposureToCryptoPercentage(props, currentPortfolio, totalBalance) {\r\n    let totalCryptoBalance = currentPortfolio.getTotalCryptoBalance(props.resModel, props.resModel.usd);\r\n    return totalCryptoBalance / totalBalance * 100;\r\n  }\r\n\r\n  toShortFormatStyled(value) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.toShortFormat(value)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toDecimalFormatStyled(value, addon) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    return (\r\n      <div>\r\n        {formatUtils.formatNumber(value, 2) + addon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    let tradingProfit = this.getTradingProfit(this.props);\r\n    let fundings = this.getTotalFundings(this.props);\r\n    let totalProfit = totalBalance - fundings.totalDeposits + fundings.totalWithdrawals;\r\n    let holdingProfit = totalProfit - tradingProfit;\r\n    let tradeCount = this.props.userModel.portfolios.slice(-1)[0].tradeCount;\r\n    let exposureToCrypto = this.getExposureToCryptoPercentage(this.props, currentPortfolio, totalBalance);\r\n\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Hodling and trading profits are 2 components of the Total profit you made since you deposited your first currency. <br/><br/>\r\n      Trading profit is profit you made from trading, and includes all your trades. Go to Trades page to see more details on trades. <br/><br/>\r\n      Hodling profit is profit you made by just hodling your currencies, without trading. It's calculated by subtracting trading profit from total profit.\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category='All time'\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n            bsStyle=\"default\"\r\n            special // for share button: fa fa-share-alt\r\n            //speciallarge \r\n            //pullRight\r\n            simple\r\n          >\r\n            <i className={\"fa fa-question-circle\"} /> Help\r\n          </Button> \r\n        </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"table-responsive\">\r\n                <h5>How do I make profit?</h5>\r\n                <table className=\"table table-hover\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>by hodling</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(holdingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(holdingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>by trading</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(tradingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(totalProfit)}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive\">\r\n              <h5>What are my key insights?</h5>\r\n              <table className=\"table table-hover\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Average profit per trade</td>\r\n                    <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit / tradeCount)}</td>\r\n                  </tr>\r\n                  {/*<tr>\r\n                    <td>Most profitable pair</td>\r\n                    <td className=\"text-right\">ETH/USD</td>\r\n                  </tr>*/}\r\n                  <tr>\r\n                    <td>Withdrawn</td>\r\n                    <td className=\"text-right\">{formatUtils.toShortFormat(fundings.totalWithdrawals)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Exposure to crypto</td>\r\n                    <td className=\"text-right\">{this.toDecimalFormatStyled(exposureToCrypto, '%')}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n          }\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default InsightsCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass HelpCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n      {this.props.isHelpPanelShown ? (\r\n        <Card\r\n          title=\"Getting started\"\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={5} md={3} sm={0} xs={0}>\r\n                  <p>Welcome to Forkfolio app, a private-by-design crypto portfolio manager you \r\n                    can use to watch live crypto prices, track your trades, and get insights \r\n                    into your trading performance. </p>\r\n                  <p>If you haven't seen Forkfolio in action, visit <a href=\"https://forkfol.io/demo/\">demo app</a> loaded with public portfolio \r\n                    that showcases all features, or click on a play button to watch a short \r\n                    introductory video.</p>\r\n                  <h4 class=\"help-card-title\">Quick start</h4> \r\n                  <p class=\"help-card-paragraph\">Your portfolio is like a bank account - first, you need to deposit tokens to \r\n                    your portfolio to be able to trade them for another one. </p>\r\n                  <Button\r\n                    danger\r\n                    bsStyle=\"danger\"\r\n                    fill\r\n                    wd                    \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    Add Your First Deposit Now\r\n                  </Button>\r\n                </Col>\r\n                <Col lg={7} md={9} sm={12} xs={12} >\r\n                  <iframe title=\"Getting started with ForkFolio\" width=\"600\" height=\"370\" src=\"https://www.useloom.com/embed/87407d8535bd43b7b5c8a67da8c99d77\" frameBorder=\"0\" webkitallowfullscreen mozallowfullscreen allowFullScreen></iframe>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col md={2} mdOffset={11}>\r\n                <Button\r\n                  bsStyle=\"default\"\r\n                  fill\r\n                  onClick={() => this.props.hideHelpPanel()}\r\n                >\r\n                  Close\r\n                </Button>\r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        /> ) : (\"\") }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelpCard;\r\n","/*jshint esversion: 6 */\r\n\r\nexport default class CurrencyPair {\r\n  constructor(base, counter) {\r\n    this.base = base;\r\n    this.counter = counter;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\n\r\nexport default class Transaction {\r\n  constructor(isTrade, isBuy, pair, baseAmount, counterAmount, time, comment) {\r\n    this.isTrade = isTrade; // trade or funding\r\n    this.isBuy = isBuy; // buy or sell\r\n    this.pair = pair;\r\n    this.baseAmount = baseAmount;\r\n    this.counterAmount = counterAmount;\r\n    this.time = time;\r\n    this.comment = comment;\r\n  }\r\n\r\n  getPrice() {\r\n    if(this.baseAmount > 0) {\r\n      return this.counterAmount / this.baseAmount; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getProfit(resModel, denomination) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n    let profit = this.baseAmount * (priceNow - priceThen) * (this.isBuy ? 1 : -1);\r\n\r\n    if(this.pair.counter !== denomination) {\r\n      let lastPrice = resModel.getLastPrice(this.pair.counter, denomination);\r\n      profit = profit * lastPrice;\r\n    }\r\n\r\n    return profit;\r\n  }\r\n\r\n  getProfitPercent(resModel) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n   \r\n    if(priceThen !== 0) {\r\n      return (priceNow - priceThen) / priceThen * 100 * (this.isBuy ? 1 : -1);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  toShortString() {\r\n\t\tlet base = \"\";\r\n\t\tif(this.isTrade) {\r\n      let tradeType = this.isBuy ? \"buy\" : \"sell\";\r\n      base += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code + \" @ \" ;\r\n      base += formatUtils.formatNumber(this.getPrice(), 6)+ this.pair.counter.code;\r\n    } else {\r\n      let tradeType = this.isBuy ? \"deposit\" : \"withdrawal\";\r\n\t\t\tbase += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code;\r\n\t\t}\r\n\t\t\r\n\t\treturn base;\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Tab,\r\n  Tabs\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonFundingDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTabSelect = this.handleTabSelect.bind(this);\r\n  }\r\n\r\n  isValidAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ amountError: null }) : this.setState({\r\n      amountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      currencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select currency.\r\n        </small>)\r\n    })\r\n      : this.setState({ currencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n    })\r\n      : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getDepositCurrencies() {\r\n    const currencies = [];\r\n    for (let c of this.props.resModel.dailyTickers.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  getWithdrawalCurrencies() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuySellFormGroup(name, placeholder) {\r\n    this.selected = name;\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          min={0}\r\n          value={this.state.amount}\r\n          onChange={event => {\r\n            this.setState({\r\n              amount: event.target.value\r\n            });\r\n            this.isValidAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.amountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"currency\"\r\n          value={this.state.currency}\r\n          options={this.state.currencies}\r\n          onChange={value => {\r\n            this.setState({ currency: value });\r\n            this.isValidCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.currencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate() });\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  handleTabSelect(key) {\r\n    this.setState({\r\n      isDeposit: key === \"deposit\",\r\n      currencies: key === \"deposit\" ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      currency: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tabs\r\n                    activeKey={this.state.isDeposit ? \"deposit\" : \"withdrawal\"}\r\n                    onSelect={this.handleTabSelect}\r\n                    id=\"controlled-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Deposit\", \"Deposit amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"withdrawal\" title=\"Withdrawal\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Withdrawal\", \"Withdrawal amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={/*() => */this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonFundingDialog;\r\n","import \"react-select/dist/react-select.css\";\r\n\r\nimport CurrencyPair from \"../../model/CurrencyPair\"\r\nimport Transaction from \"../../model/Transaction\"\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props.isInitialDeposit);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/addFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*this.setState(this.getInitialState());\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addFunding');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(isInitialDeposit) {\r\n    return {\r\n      title: \"Add funding\",\r\n      buttonText: \"Add\",\r\n      isDeposit: true,\r\n      amount: \"\",\r\n      amountError: null,\r\n      currency: null,\r\n      currencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: isInitialDeposit == null ? \"\" : \"It's my first deposit\",\r\n      currencies: this.getDepositCurrencies()\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddFundingDialog;\r\n","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\n\r\nexport default class Portfolio {\r\n    constructor(previous, genesisTx) {\r\n      this.previous = previous;\r\n      this.genesisTx = genesisTx;\r\n      this.balances = new Map();\r\n      this.tradeCount = this.calculateTradeCount();\r\n\r\n      this.calculateCurrencyBalances();\r\n    }\r\n\r\n    calculateTradeCount() {\r\n        let count = this.previous != null ? this.previous.tradeCount : 0;\r\n        if(this.genesisTx != null && this.genesisTx.isTrade) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    calculateCurrencyBalances() {\r\n        if(this.previous !== null) {\r\n            this.balances = new Map(this.previous.balances);\r\n        }\r\n        if(this.genesisTx !== null) {\r\n            // add usd to balances only if not funding\r\n            let isNotFunding = this.genesisTx.pair.counter.code !== 'USD' || \r\n            (this.genesisTx.pair.counter.code === 'USD' && this.genesisTx.isTrade);\r\n\r\n            // if no base and counter in map, add them first\r\n            if(this.balances.get(this.genesisTx.pair.base) === undefined) {\r\n                this.balances.set(this.genesisTx.pair.base, 0);\r\n            }\r\n            if(this.balances.get(this.genesisTx.pair.counter) === undefined) {\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, 0);\r\n                }\r\n            }\r\n\r\n            // then do the calculation\r\n            if(this.genesisTx.isBuy) {\r\n                //  add base and subtract counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) + this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) - this.genesisTx.counterAmount);\r\n                }\r\n            } else {\r\n                //  subtract base and add counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) - this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) + this.genesisTx.counterAmount);\r\n                }\r\n            }            \r\n        }\r\n    }\r\n\r\n    sortBalances(resModel) {\r\n        this.balances = new Map([...this.balances.entries()].sort(\r\n            (a, b) => this.getCurrencyBalance(resModel, b[0], resModel.usd) - this.getCurrencyBalance(resModel, a[0], resModel.usd)            \r\n        ));\r\n    }\r\n\r\n    getCurrencyBalance(resModel, currency, denomination) {\r\n        let priceInDenomination = 1;\r\n        if(currency !== denomination) {\r\n            let lastPrice = resModel.getLastPrice(currency, denomination);\r\n            if(lastPrice !== null) {\r\n                priceInDenomination = lastPrice;\r\n            }\r\n        }\r\n\r\n        return this.balances.get(currency) * priceInDenomination;\r\n    }\r\n\r\n    getTotalBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    getTotalCryptoBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            if(!k.isFiat) {\r\n                totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n            }\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    // returns balance of the currency on a date\r\n    getPastCurrencyBalance(currency, date) {\r\n        let currencyBalance = 0;\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return currencyBalance;\r\n    }\r\n\r\n    // returns total balance of portfolio in past for denominated\r\n    getPastTotalBalance(resModel, date, denomination) {\r\n        let totalPastBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            let pastPrice = resModel.getPastPrice(k, denomination, date);\r\n            totalPastBalance += pastPrice * this.getPastCurrencyBalance(k, date);\r\n        }\r\n\r\n        return totalPastBalance;\r\n\r\n        /*\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return totalPastBalance;*/\r\n    }\r\n\r\n    // returns portfolio was current at date\r\n    getPastPortfolio(date) {\r\n        let prev = this.previous;\r\n        while(prev !== null) {\r\n            if(prev.genesisTx == null || prev.genesisTx.time.getTime() < date.getTime()) {\r\n                return prev;\r\n            }\r\n            prev = prev.previous;\r\n        }\r\n\r\n        return null;\r\n    }\r\n  }","/*jshint esversion: 6 */\r\nimport moment from 'moment';\r\n\r\nclass DateUtils {\r\n  getDaysSince(sinceDate) {\r\n    return moment(new Date()).diff(moment(sinceDate), 'days');\r\n  }\r\n}\r\n\r\nexport let dateUtils = new DateUtils();","/*jshint esversion: 6 */\r\nimport Portfolio from './Portfolio';\r\nimport { dateUtils } from './../utils/DateUtils';\r\n\r\n\r\nexport default class UserModel {\r\n  constructor(transactions = [], positions = [], resModel) {\r\n    this.transactions = transactions;\r\n    this.positions = positions;\r\n    this.portfolios = [];\r\n\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  updateTransactions(transactions, resModel) {\r\n    this.transactions = transactions;\r\n    this.portfolios = [];\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  preparePortfolios(resModel) {\r\n    //console.log(\"Preparing portfolios..\");\r\n    let empty = new Portfolio(null, null);\r\n    empty.sortBalances(resModel);\r\n    this.portfolios.push(empty);\r\n\r\n    let previous = empty;\r\n    for(let tx of this.transactions) {\r\n      let portfolio = new Portfolio(previous, tx);\r\n      portfolio.sortBalances(resModel);\r\n      this.portfolios.push(portfolio);\r\n      previous = portfolio;\r\n    } \r\n  }\r\n\r\n  // returns all portfolios created after date\r\n  getPortfoliosSince(date) {\r\n    let selected = [];\r\n    for(let p of this.portfolios) {\r\n      if(p.genesisTx !== null && p.genesisTx.isTrade) {\r\n        if(p.genesisTx.time.getTime() > date.getTime() || p === this.portfolios[this.portfolios.length - 1]) {\r\n          selected.push(p);\r\n        }\r\n      }\r\n    }\r\n\r\n    // always add the one before the first one\r\n    if(selected.length > 0) {\r\n      selected.unshift(selected[0].previous);\r\n    }\r\n\r\n    return selected;\r\n  }\r\n\r\n  getDaysSinceFirstTx() {\r\n    if(this.transactions.length > 0) {\r\n      let firstDate = new Date(this.transactions[0].time);\r\n      return dateUtils.getDaysSince(firstDate);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","import UserModel from \"../UserModel\"\r\nimport ResModel from \"../ResModel\"\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nexport var resModel = new ResModel();\r\nexport let userModel = new UserModel([], resModel);\r\n\r\n\r\nexport const rangeSelectorModel = {\r\n    inputPosition: {\r\n        align: 'left',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buttonPosition: {\r\n        align: 'right',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    //selected: 2,\r\n    buttons: [ {\r\n        type: 'day',\r\n        count: 7,\r\n        text: '1w',\r\n        days: 7,\r\n        userFriendlyText: 'Last 7 days',\r\n    },{\r\n        type: 'month',\r\n        count: 1,\r\n        text: '1m',\r\n        days: 30,\r\n        userFriendlyText: 'Last 30 days',\r\n    }, {\r\n        type: 'month',\r\n        count: 3,\r\n        text: '3m',\r\n        days: 90,\r\n        userFriendlyText: 'Last 3 months',\r\n    }, {\r\n        type: 'ytd',\r\n        text: 'YTD',\r\n        days: dateUtils.getDaysSince(new Date(new Date().getFullYear(), 0, 0)),\r\n        userFriendlyText: 'Year-to-date',\r\n    }, {\r\n        type: 'year',\r\n        count: 1,\r\n        text: '1y',\r\n        days: 365,\r\n        userFriendlyText: 'Last year',\r\n    }, {\r\n        type: 'all',\r\n        text: 'All',\r\n        userFriendlyText: 'All time',\r\n    }]\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class ResModel {\r\n  constructor() {\r\n    this.usd = null;\r\n    this.dailyTickers = new Map();\r\n    this.recentTickers = new Map();\r\n  }\r\n\r\n  clone() {\r\n    let newModel = new ResModel();\r\n    newModel.usd = this.usd;\r\n    newModel.dailyTickers = this.dailyTickers;\r\n    newModel.recentTickers = this.recentTickers;\r\n    return newModel;\r\n  }\r\n\r\n  getLastPrice(base, counter) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      // counter usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null) {\r\n        return this.recentTickers.get(base.code).price;\r\n      }\r\n      // counter usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null) {\r\n        return this.dailyTickers.get(base).slice(-1)[0].price;\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null && \r\n          this.recentTickers.get(counter) != null) {\r\n        let baseUsd = this.recentTickers.get(base.code).price;\r\n        let counterUsd = this.recentTickers.get(counter.code).price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n\r\n      // counter not usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null && \r\n          this.dailyTickers.get(counter).slice(-1)[0] != null) {\r\n        let baseUsd = this.dailyTickers.get(base).slice(-1)[0].price;\r\n        let counterUsd = this.dailyTickers.get(counter).slice(-1)[0].price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getPercentChange24h(currency) {\r\n    if(this.recentTickers.get(currency) != null) {\r\n      return this.recentTickers.get(currency).percentChange24h;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  // returns the price of base denominated in counter on date\r\n  getPastPrice(base, counter, date) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      for(let t of this.dailyTickers.get(base)) {\r\n        if(this.sameDay(date, t.time)) {\r\n          return t.price;\r\n        }\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      // not implemented for now\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  findCurrencyByCode(code) {\r\n    for (const key of this.dailyTickers.keys()) {\r\n      if(key.code === code) {\r\n        return key;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport ReactTable from \"react-table\";\r\nimport Highstock from 'highcharts/highstock';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport InsightsCard from './common/InsightsCard';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport HelpCard from './common/HelpCard';\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass PortfolioView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getPerformanceChartOptions = this.getPerformanceChartOptions.bind(this);\r\n    this.getTotalBalance = this.getTotalBalance.bind(this);\r\n    this.getTableColumnsDesktop = this.getTableColumnsDesktop.bind(this);\r\n    this.getTableColumnsMobile = this.getTableColumnsMobile.bind(this);\r\n    this.getTableData = this.getTableData.bind(this);\r\n    this.getLogoURL = this.getLogoURL.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  getTotalBalance(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.total[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  downsizeTokenLogo(originalLogoURL) {\r\n    return originalLogoURL.replace(\"64x64\", \"32x32\");\r\n  }\r\n\r\n  getTableColumnsDesktop() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"name\", maxWidth: 180, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 120,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"24h\", accessor: \"percentChange24h\", maxWidth: 80,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Balance\", accessor: \"balance\", maxWidth: 160, sortable: false, \r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Share\", accessor: \"share\", maxWidth: 80, \r\n      Footer: (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>100%</strong>{\" \"}\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value, 2) + \"%\"}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Total\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getTableColumnsMobile() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"code\", maxWidth: 100, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 100,\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toGreenRedPercentStyle(row.value[1])}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      \r\n      { Header: \"Balance\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toShortFormat(row.value[1][0], 2).substr(1)}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getLogoURL(currency) {\r\n    if(currency.meta == null) {\r\n        return \"fiat-logos/\" + (currency.isFiat ? currency.code.toLowerCase() : \"empty\") + \".png\";\r\n    }\r\n\r\n    return currency.meta.logo;\r\n  }\r\n\r\n  // gets table data for desktop and mobile\r\n  getTableData(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(props.resModel, props.resModel.usd);\r\n\r\n    const tableData = [];\r\n    for (let [k, v] of currentPortfolio.balances) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, k, props.resModel.usd);\r\n      let name = [this.getLogoURL(k), k.name];\r\n      let code = [this.getLogoURL(k), k.code];\r\n      let percentChange24h = props.resModel.getPercentChange24h(k.code);\r\n      let price = [props.resModel.getLastPrice(k, props.resModel.usd), percentChange24h];\r\n      let balance = [v, k.code];\r\n      let share = (currencyBalance / totalBalance * 100);\r\n      let total = [currencyBalance, balance];\r\n      tableData.push({\r\n        id: tableData.length, \r\n        name: name, \r\n        code: code, \r\n        price: price,\r\n        percentChange24h: percentChange24h,\r\n        balance: balance,\r\n        share: share,\r\n        total: total\r\n      });\r\n    }\r\n\r\n    return tableData;\r\n  }\r\n\r\n  getPerformanceChartOptions(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n\r\n    // prepare portfolio performance chart\r\n    const series = [];\r\n    for (const currency of currentPortfolio.balances.keys()) {\r\n      const serie = [];\r\n      for(let t of props.resModel.dailyTickers.get(currency)) {       \r\n          let balanceInDenominated = t.price * currentPortfolio.getPastCurrencyBalance(t.pair.base, t.time);\r\n          serie.push([t.time.getTime(), balanceInDenominated]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {\r\n        serie.slice(-1)[0][1] = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd)\r\n        series.push({name: currency.code, data: serie});\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'area'\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          stacking: 'normal',\r\n          lineColor: '#666666',\r\n          lineWidth: 1,\r\n          marker: {\r\n              lineWidth: 1,\r\n              lineColor: '#666666'\r\n          }\r\n        }\r\n      },     \r\n      series: series,\r\n      rangeSelector: rangeSelectorModel,\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let assetCount = currentPortfolio.balances.size;\r\n    const showPagination = assetCount > 10;\r\n    const isMobile = window.innerWidth <= 992;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n        isInitialDeposit\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Balance sheet panel displays \r\n      all crypto and fiat currencies (coins) you own at this \r\n      moment. This is your portfolio. You can check live prices \r\n      of your currencies, total balance of a currency in USD, \r\n      and the total value in USD at the bottom. <br/><br/> \r\n      24H column displays a change in USD price in the last 24 hours.\r\n    </Tooltip>; \r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <HelpCard \r\n                isHelpPanelShown={this.props.isHelpPanelShown}\r\n                hideHelpPanel={this.props.hideHelpPanel}\r\n                showAddFundingDialog={this.props.showAddFundingDialog}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              <Card\r\n                title=\"What's my balance sheet today?\"\r\n                category={assetCount + \" asset\" + (assetCount === 1 ? \"\" : \"s\")}\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.getTableData(this.props)}\r\n                    columns={isMobile ? this.getTableColumnsMobile(this.props) : this.getTableColumnsDesktop(this.props)}\r\n                    defaultPageSize={10}\r\n                    showPageSizeOptions={false}\r\n                    showPagination={showPagination}\r\n                    noDataText={formatUtils.getNoDataText('assets', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <InsightsCard\r\n                title=\"Portfolio insights\"\r\n                portfolio={this.props.userModel.portfolios.slice(-1)[0]}\r\n                resModel={this.props.resModel}\r\n                userModel={this.props.userModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What's my portfolio history?\"\r\n                //category=\"24 Hours performance\"\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <HighchartsReact\r\n                    highcharts={Highstock}\r\n                    constructorType={'stockChart'}\r\n                    options={this.getPerformanceChartOptions(this.props)}\r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioView;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Nav,\r\n  NavItem,\r\n  Tab\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonTradeDialog extends Component {\r\n\r\n  isValidBuyAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ buyAmountError: null }) : this.setState({\r\n      buyAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidBuyCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      buyCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ buyCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidSellAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ sellAmountError: null }) : this.setState({\r\n      sellAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidSellCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      sellCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ sellCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n      })\r\n    : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getBuyCurrencies(nextProps) {\r\n    let buyCurrencies = [];\r\n    for(let c of nextProps.resModel.dailyTickers.keys()) {\r\n      buyCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return buyCurrencies;\r\n  }\r\n\r\n  getSellCurrencies(nextProps) {\r\n    let currentPortfolio = nextProps.userModel.portfolios.slice(-1)[0];\r\n    let sellCurrencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      sellCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return sellCurrencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  /*isAllowedAmount(strValue, sellCurrency) {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let numValue = parseFloat(strValue);\r\n    //console.log(sellCurrency.value)\r\n    if(sellCurrency != null) {\r\n      console.log(sellCurrency.value)\r\n      console.log(currentPortfolio.balances.get(sellCurrency.value));\r\n    }\r\n    let isAllowed = sellCurrency != null ? numValue <= currentPortfolio.balances.get(sellCurrency.value) : true;\r\n    return isAllowed;\r\n  }\r\n\r\n  getMaxSellValueAndCurrency(sellCurrency) {\r\n    if(sellCurrency != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.balances.get(sellCurrency.value) + \" \" + sellCurrency.value.code;\r\n    }\r\n\r\n    return \"\";\r\n  }*/\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuyFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          min={0}\r\n          name=\"buyAmount\"\r\n          value={this.state.buyAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              buyAmount: event.target.value\r\n            });\r\n            this.isValidBuyAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.buyAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"buyCurrency\"\r\n          value={this.state.buyCurrency}\r\n          options={this.state.buyCurrencies}\r\n          onChange={value => {\r\n            this.setState({ buyCurrency: value });\r\n            this.isValidBuyCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.buyCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getSellFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"sellAmount\"\r\n          min={0}\r\n          value={this.state.sellAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              sellAmount: event.target.value\r\n            });\r\n            this.isValidSellAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.sellAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"sellCurrency\"\r\n          value={this.state.sellCurrency}\r\n          options={this.state.sellCurrencies}\r\n          onChange={value => {\r\n            this.setState({ sellCurrency: value });\r\n            this.isValidSellCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.sellCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate()});\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let defaultActiveKey = \"buy\";\r\n    if(this.props.editedTransaction != null && !this.props.editedTransaction.isBuy) {\r\n      defaultActiveKey = \"sell\";\r\n    }\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tab.Container id=\"tabs-with-dropdown\" defaultActiveKey={defaultActiveKey}>\r\n                    <Row className=\"clearfix\">\r\n                      <Col sm={12}>\r\n                        <Nav bsStyle=\"tabs\">\r\n                          <NavItem eventKey=\"buy\">Buy</NavItem>\r\n                          <NavItem eventKey=\"sell\">Sell</NavItem>\r\n                        </Nav>\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <Tab.Content animation>\r\n                          <Tab.Pane eventKey=\"buy\">\r\n                            <Form horizontal>  \r\n                              {this.getBuyFormGroup(\"Buy amount\", \"How much to buy?\")}\r\n                              {this.getSellFormGroup(\"Cost\", \"How much is cost?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                          <Tab.Pane eventKey=\"sell\">\r\n                            <Form horizontal>  \r\n                              {this.getSellFormGroup(\"Sell amount\", \"How much to sell?\")}\r\n                              {this.getBuyFormGroup(\"Proceeds\", \"How much to receive?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                        </Tab.Content>\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonTradeDialog;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/addTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // track ga\r\n    /*if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addTrade');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(nextProps) {\r\n    return {\r\n      isDialogShown: nextProps.isDialogShown,\r\n      title: \"Add trade\",\r\n      buttonText: \"Add\",\r\n      buyAmount: \"\",\r\n      buyAmountError: null,\r\n      buyCurrency: null,\r\n      buyCurrencyError: null,\r\n      sellAmount: \"\",\r\n      sellAmountError: null,\r\n      sellCurrency: null,\r\n      sellCurrencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: \"\",\r\n      buyCurrencies: this.getBuyCurrencies(nextProps),\r\n      sellCurrencies: this.getSellCurrencies(nextProps),\r\n    }\r\n  }\r\n\r\n  getPair(buyCurrency, sellCurrency, buyAmount, sellAmount) {\r\n    let buyRank = buyCurrency.rank + (buyCurrency.isFiat ? -1000000 : 0);\r\n    let sellRank = sellCurrency.rank + (sellCurrency.isFiat ? -1000000 : 0);\r\n    // reverse if needed for ranks, or in special case where ETH/ETH and 0\r\n    if(buyRank < sellRank || (buyRank === sellRank && buyAmount === 0)) {\r\n      return {\r\n        pair: new CurrencyPair(sellCurrency, buyCurrency),\r\n        isBuy: false,\r\n        buyAmount: sellAmount,\r\n        sellAmount: buyAmount\r\n      }\r\n    }\r\n\r\n    return {\r\n      pair: new CurrencyPair(buyCurrency, sellCurrency),\r\n      isBuy: true,\r\n      buyAmount: buyAmount,\r\n      sellAmount: sellAmount\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n      \r\n\r\n      let pairBuy = this.getPair(this.state.buyCurrency.value, this.state.sellCurrency.value, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount));\r\n      let pair = pairBuy.pair;\r\n      let isBuy = pairBuy.isBuy;\r\n      let buyAmount = pairBuy.buyAmount;\r\n      let sellAmount = pairBuy.sellAmount;\r\n\r\n      let tx = new Transaction(true, isBuy, pair, buyAmount, sellAmount, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.setState(this.getInitialState(this.props));\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddTradeDialog;","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update trade\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      buyAmount: props.editedTransaction.baseAmount.toString(),\r\n      buyAmountError: null,\r\n      buyCurrency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      buyCurrencyError: null,\r\n      buyCurrencies: this.getBuyCurrencies(props),\r\n      sellAmount: props.editedTransaction.counterAmount.toString(),\r\n      sellAmountError: null,\r\n      sellCurrency: this.getSelectObject(props.editedTransaction.pair.counter),\r\n      sellCurrencyError: null,\r\n      sellCurrencies: this.getSellCurrencies(props),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/editTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        buyAmount: nextProps.editedTransaction.baseAmount.toString(),\r\n        buyAmountError: null,\r\n        buyCurrency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        buyCurrencyError: null,\r\n        buyCurrencies: this.getBuyCurrencies(nextProps),\r\n        sellAmount: nextProps.editedTransaction.counterAmount.toString(),\r\n        sellAmountError: null,\r\n        sellCurrency: this.getSelectObject(nextProps.editedTransaction.pair.counter),\r\n        sellCurrencyError: null,\r\n        sellCurrencies: this.getSellCurrencies(nextProps),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editTrade');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.buyCurrency.value, this.state.sellCurrency.value);\r\n      let tx = new Transaction(true, this.state.editedTransaction.isBuy, pair, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount), this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditTradeDialog;","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\n\r\nclass ConfirmRemoveTransactionDialog extends Component {\r\n\r\n  getType() {\r\n    if (this.props.removedTransaction != null) {\r\n      return this.props.removedTransaction.isTrade ? \"trade\" : \"funding\";\r\n    }\r\n  }\r\n\r\n  getDescription() {\r\n    if (this.props.removedTransaction != null) {\r\n      return (this.props.removedTransaction.isTrade ? \"Trade\" : \"Funding\") + \": \" + this.props.removedTransaction.toShortString();\r\n    }\r\n  }\r\n\r\n  getDate() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Date: \" + this.props.removedTransaction.time.toISOString().split('T')[0];\r\n    }\r\n  }\r\n\r\n  getComment() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Comment: \" + this.props.removedTransaction.comment;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm remove</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                    Are you sure you want to remove this {this.getType()}?\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    {this.getDescription()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getDate()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getComment()}\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.removeTransaction()}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmRemoveTransactionDialog;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass TradesView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if (tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let pair = tx.pair.base.code + \"/\" + tx.pair.counter.code;\r\n        let type = tx.isBuy ? \"Buy\" : \"Sell\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        let price = [tx.getPrice(), tx.pair.counter.code];\r\n        let cost = [tx.counterAmount, tx.pair.counter.code];\r\n        let profitPercent = tx.getProfitPercent(props.resModel);\r\n        let profit = [tx.getProfit(props.resModel, props.resModel.usd), props.resModel.usd.code];\r\n        tableData.push([tx, date, pair, type, comment, volume, price, cost, profitPercent, profit]);\r\n      }\r\n    }\r\n\r\n    // second, map to state\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        pair: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        price: prop[6],\r\n        cost: prop[7],\r\n        profitpercentage: prop[8],\r\n        profit: prop[9],\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTotalVolume(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.volume[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalPrice(rows) {\r\n    return this.getTotalCost(rows) / this.getTotalVolume(rows);\r\n  }\r\n\r\n  getTotalCost(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.cost[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalProfitPercentage(rows) {\r\n    let pairStr = rows.data[0].pair.split('/');\r\n    let base = this.props.resModel.findCurrencyByCode(pairStr[0]);\r\n    let counter = this.props.resModel.findCurrencyByCode(pairStr[1]);\r\n    if(base !== null && counter !== null) {\r\n      let totalCost = this.getTotalCost(rows);\r\n      let totalCostInUsd = totalCost * this.props.resModel.getLastPrice(counter, this.props.resModel.usd);\r\n      let totalProfit = this.getTotalProfit(rows);\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      totalCostInUsd = totalCostInUsd * (isBuy ? 1 : -1);\r\n      // check eth/usd and rep/usd\r\n      return (totalProfit / Math.max(0, totalCostInUsd)) * 100; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getTotalProfit(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.profit[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  isOnePair(rows) {\r\n    for(let row of rows.data) {\r\n      if(row.pair !== rows.data[0].pair) {\r\n        return false;\r\n      }\r\n    }\r\n    return rows.data.length !== 0;\r\n  }\r\n\r\n  getPairFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return rows.data[0].pair;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTypeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return this.getTotalVolume(rows) >= 0 ? \"Buy\" : \"Sell\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getVolumeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(Math.abs(this.getTotalVolume(rows)), 2) + \" \" + rows.data[0].volume[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getPriceFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalPrice(rows), 6) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getCostFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      return formatUtils.formatNumber(this.getTotalCost(rows) * (isBuy ? 1 : -1), 2) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getProfitPercentageFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalProfitPercentage(rows), 2) + \"%\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Pair\", accessor: \"pair\", maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n        <span>\r\n          <strong>\r\n            {this.getPairFooter(rows)}\r\n          </strong>\r\n        </span>\r\n        )\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", maxWidth: 50,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n          <span>\r\n            <strong>\r\n              {this.getTypeFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", maxWidth: 300,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", maxWidth: 140, filterable: false,\r\n        Cell: row => (\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; \r\n        }, Footer: rows => (\r\n            <span style={{ float: \"right\" }}>\r\n              <strong>\r\n                {this.getVolumeFooter(rows)}\r\n              </strong>\r\n            </span>\r\n          )\r\n      },\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 6) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {this.getPriceFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Cost\", accessor: \"cost\", maxWidth: 140, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getCostFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit [%]\", accessor: \"profitpercentage\", maxWidth: 80, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getProfitPercentageFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit\", accessor: \"profit\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getTotalProfit(rows), 2) + \" USD\"}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Trades panel displays all your trades. A trade is when you exchange one currency for another. <br/><br/> \r\n      To add a trade, click on the Add trade button. To edit or remove a trade, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      PROFIT column will give you a trade's profit in USD for prices right now. There's also a total profit for all trades on the bottom. <br/><br/> \r\n      Trades can be sorted, and filtered in multiple ways. For example, to show all ETH/USD trades in 2018, enter ETH/USD in the PAIR filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent trades?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special   \r\n                    onClick={() => this.props.showAddTradeDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add trade\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                    <i className={\"fa fa-question-circle\"} /> Help \r\n                  </Button> \r\n                </OverlayTrigger>\r\n                </div>\r\n                }\r\n                category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TradesView;\r\n","\r\n\t\t\r\nclass CoinGeckoPrices {\t\t\r\n    // gets usd prices from coingecko api\r\n\tstatic async getTokenPriceInUSD(address) {\t\r\n\t\tlet url = \"https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=\" + address.toLowerCase() + \"&vs_currencies=USD\";\r\n\t\tconst response = await fetch(url);\r\n\t\tconst myJson = await response.json();\r\n\t\tif(myJson[address.toLowerCase()]) {\r\n\t\t\treturn Number(myJson[address.toLowerCase()].usd);\r\n\t\t}\r\n\t\t\t\r\n\t\treturn 1;\r\n\t}\r\n}\t\t\r\n\r\nexport { CoinGeckoPrices };\r\n","\r\n\t\t\r\n\r\n\r\n// token addresses\r\nexport const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\r\nexport const cdaiAddress = \"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643\";\r\nexport const usdcAddress = \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\";\r\nexport const cusdcAddress = \"0x39aa39c021dfbae8fac545936693ac917d5e7563\";\r\nexport const batAddress = \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\";\r\nexport const sethAddress = \"0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb\";\r\nexport const wethAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\t\t\r\nexport const compAddress = \"0xc00e94cb662c3520282e6f5717214004a7f26888\";\r\nexport const sushiAddress = \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\";\r\nexport const alphaAddress = \"0xa1faa113cbe53436df28ff0aee54275c13b40975\";\r\nexport const ibethAddress = \"0x67B66C99D3Eb37Fa76Aa3Ed1ff33E8e39F0b9c7A\";\r\nexport const bacAddress = \"0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a\";\r\nexport const wbtcAddress = \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\";\r\n\r\nexport const ustAddress = \"0xa47c8bf37f92abed4a126bda807a7b7498661acd\";\r\nexport const mmsftAddress = \"0x41bbedd7286daab5910a1f15d12cbda839852bd7\";\r\nexport const mgoogAddress = \"0x59a921db27dd6d4d974745b7ffc5c33932653442\";\r\nexport const mtwtrAddress = \"0xedb0414627e6f1e3f082de65cd4f9c693d78cca9\";\r\n\r\n\r\n\r\n// uniswap v2 exchange addresses\r\nexport const uniswapV2DAIWETHAddress = \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\";\r\nexport const uniswapV2USDCWETHAddress = \"0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc\";\r\nexport const uniswapV2BATWETHAddress = \"0xb6909b960dbbe7392d405429eb2b3649752b4838\";\r\nexport const uniswapV2DAIUSDCAddress = \"0xae461ca67b15dc8dc81ce7615e0320da1a9ab8d5\";\r\nexport const uniswapV2ALPHAIBETHAddress = \"0x411a9b902f364817a0f9c4261ce28b5566a42875\";\r\nexport const uniswapV2USTmMSFTAddress = \"0xeAfAD3065de347b910bb88f09A5abE580a09D655\";\r\nexport const uniswapV2USTmGOOGAddress = \"0x4b70ccD1Cf9905BE1FaEd025EADbD3Ab124efe9a\";\r\nexport const uniswapV2USTmTWTRAddress = \"0x34856be886A2dBa5F7c38c4df7FD86869aB08040\";\r\nexport const uniswapV2DAIBACAddress = \"0xd4405f0704621dbe9d4dea60e128e0c3b26bddbd\";\r\n\r\nexport const sushiswapV2COMPETHAddress = \"0x31503dcb60119a812fee820bb7042752019f2355\";\r\nexport const sushiswapV2SUSHIETHAddress = \"0x795065dcc9f64b5614c407a6efdc400da6221fb0\";\r\n\r\nexport const inchV2DAIETHAddress = \"0x7566126f2fd0f2dddae01bb8a6ea49b760383d5a\";\r\n\r\nexport function getContractInstance(web3, abi, address) {\t\t\t\r\n\t//console.log(\"Loading contract instance for address: \" + address)\r\n\treturn new web3.eth.Contract(abi, address);\r\n}\r\n\r\n/*export function checkBalances(market, balanceLPT) {\r\n    let balanceETH = balanceLPT * market.poolUNDER / market.poolLIQ;\r\n    let balanceToken = balanceLPT * market.poolBASE / market.poolLIQ;\r\n    return [balanceETH, balanceToken];\r\n}*/\r\n  \r\nexport function debalanceETH(currentPrice, startBASE, ethTokens, daiTokens) {\r\n    let diffDai = startBASE - daiTokens;\r\n    let newETH = ethTokens - diffDai / currentPrice;\r\n    \r\n    return [newETH, startBASE];\r\n  }\r\n  \r\nexport function debalanceDAI(currentPrice, startUNDER, ethTokens, daiTokens) {\r\n    let diffETH = startUNDER - ethTokens;\r\n    let newDAI = daiTokens - diffETH * currentPrice;\r\n    \r\n    return [startUNDER, newDAI];\r\n}\r\n\r\n/**\r\n * @function\r\n * @description Deep clone a class instance.\r\n * @param {object} instance The class instance you want to clone.\r\n * @returns {object} A new cloned instance.\r\n */\r\nexport function clone(original) {\r\n  var copied = Object.assign(\r\n    Object.create(\r\n      Object.getPrototypeOf(original)\r\n    ),\r\n    original\r\n  );\r\n  return copied;\r\n}\r\n\r\n//----------------- BLACK-SCHOLES -----------------------\r\n/*\r\n  PutCallFlag: Either \"put\" or \"call\"\r\n  S: Stock Price\r\n  X: Strike Price\r\n  T: Time to expiration (in years)\r\n  r: Risk-free rate\r\n  v: Volatility\r\n  This is the same one found in http://www.espenhaug.com/black_scholes.html\r\n  but written with proper indentation and a === instead of == because it's\r\n  faster, and it doesn't declare 5 useless variables (although if you really\r\n  want to do it to have more elegant code I left a commented CND function in\r\n  the end)\r\n*/\r\nexport class OptionMath {\r\n\tblackScholes(PutCallFlag, S, X, T, r, v) {\r\n\t  let d1 = (Math.log(S / X) + (r + v * v / 2) * T) / (v * Math.sqrt(T));\r\n\t  let d2 = d1 - v * Math.sqrt(T);\r\n\t  if (PutCallFlag === \"call\") {\r\n\t\treturn ( S * this.CND(d1)-X * Math.exp(-r * T) * this.CND(d2) );\r\n\t  } else {\r\n\t\treturn ( X * Math.exp(-r * T) * this.CND(-d2) - S * this.CND(-d1) );\r\n\t  }\r\n\t}\r\n\r\n\t/* The cummulative Normal distribution function: */\r\n\tCND(x){\r\n\t  if(x < 0) {\r\n\t\treturn ( 1-this.CND(-x) );\r\n\t  } else {\r\n\t\tlet k = 1 / (1 + .2316419 * x);\r\n\t\treturn ( 1 - Math.exp(-x * x / 2)/ Math.sqrt(2*Math.PI) * k * (.31938153 + k * (-.356563782 + k * (1.781477937 + k * (-1.821255978 + k * 1.330274429)))) );\r\n\t  }\r\n\t}\r\n}","import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\nimport uniswapABI from \"../abis/uniswapABI.json\";\r\nimport daiABI from \"../abis/daiABI.json\";\r\nimport { usdcAddress, wbtcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class Uniswap {\t\t\r\n\tconstructor(marketAddress, addressBASE, addressUNDER, myLIQ, apr) {\r\n\t\tthis.marketAddress = marketAddress;\r\n\t\tthis.addressBASE = addressBASE;\r\n\t\tthis.addressUNDER = addressUNDER;\r\n\t\tthis.feeInPercent = 0.3;\r\n\r\n\t\t// my position\r\n\t\tthis.myBASE = 0;\r\n\t\tthis.myUNDER = 0;\r\n\t\tthis.myLIQ = myLIQ;\r\n\r\n\t\t// pool \r\n\t\tthis.poolBASE = 0;\r\n\t\tthis.poolUNDER = 0;\r\n\t\tthis.poolLIQ = 0;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\tthis.apr = apr;\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tlet marketInstance = getContractInstance(web3, uniswapABI, this.marketAddress);\r\n\t\tlet baseInstance = getContractInstance(web3, daiABI, this.addressBASE);\r\n\t\tlet underInstance = getContractInstance(web3, daiABI, this.addressUNDER);\r\n\r\n\t\tlet ethBalance = await web3.eth.getBalance(this.marketAddress);\r\n\t\tlet poolLIQ = await marketInstance.methods.totalSupply().call();\r\n\t\tlet poolBASE = await baseInstance.methods.balanceOf(this.marketAddress).call();\r\n\t\tlet poolUNDER = await underInstance.methods.balanceOf(this.marketAddress).call();\r\n\r\n\t\t// if pool is using eth instead of weth\r\n\t\tif(poolUNDER / 10 ** 18 === 0 && ethBalance / 10 ** 18 > 0) {\r\n\t\t\tpoolUNDER = ethBalance;\r\n\t\t}\r\n\r\n\t\t// save to position\r\n\t\tthis.poolUNDER = poolUNDER / 10 ** this.getDecimals(this.addressUNDER); \r\n\t\tthis.poolLIQ = poolLIQ / 10 ** 18; \r\n\t\tthis.poolBASE = poolBASE / (this.addressBASE !== usdcAddress ? 10 ** 18 : 10 ** 6);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\t//this.priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\t//this.priceLIQBASE = this.poolBASE / this.poolLIQ;\r\n\t\t//this.priceUNDERBASE = this.poolBASE / this.poolUNDER;\r\n\r\n\t\tthis.priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressBASE);\r\n\t\tthis.priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressUNDER);\r\n\r\n\t\tconsole.log(\"AMM market data loaded. \" + position.base.symbol + \": \" + this.priceBASEUSD + \" USD, \" + position.under.symbol + \": \" + this.priceUNDERUSD + \" USD\");\r\n\t}\r\n\r\n\t// when one of the members are updated, others can be updated here\r\n\tupdate(subpos, currentPrice) {\r\n\t\t// do nothing\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price. \r\n\t// Moves price to newPrice, calculates, and later returns market to \r\n\t// passedDays - days that passed since \r\n\tgetCurrentValue(newPrice, passedDays) {\r\n\t\t// move to new price\r\n\t\tlet oldPrice = this.getPrice();\r\n\t\tthis.setMarketPrice(newPrice);\r\n\r\n\t\t// apply APR\r\n\t\tlet poolBASEWithAPR = this.poolBASE * (1 + this.apr / 100 * passedDays / 365);\r\n\t\tlet poolUNDERWithAPR = this.poolUNDER * (1 + this.apr / 100 * passedDays / 365);\r\n\r\n\t\t// calc my share\r\n\t\tlet myShare = this.myLIQ / this.poolLIQ;\r\n\t\tlet myBASE = poolBASEWithAPR * myShare + poolUNDERWithAPR * myShare * newPrice;\r\n\t\tlet myUNDER = myBASE / newPrice;\r\n\r\n\t\t// back to old price\r\n\t\tthis.setMarketPrice(oldPrice);\r\n\r\n\t\treturn [myBASE, myUNDER];\r\n\t}\r\n\r\n\taddLiquidity(exactUNDER, exactBASE) {\r\n\t\tlet exactLIQ = exactUNDER * (this.poolLIQ / this.poolUNDER);\r\n\t\t//console.log(\"Pool before: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.poolLIQ += exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\treturn exactLIQ;\r\n\t}\r\n\t\r\n\tremoveLiquidity(exactLIQ) {\r\n\t\tlet priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\tlet priceLIQDAI = this.poolBASE / this.poolLIQ;\r\n\t\tlet exactUNDER = exactLIQ * priceLIQUNDER;\r\n\t\tlet exactBASE = exactLIQ * priceLIQDAI;\r\n\t\t//console.log(\"Pool before: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\tthis.poolUNDER -= exactUNDER;\r\n\t\tthis.poolBASE -= exactBASE;\r\n\t\tthis.poolLIQ -= exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\treturn [exactUNDER, exactBASE];\r\n\t}\r\n\r\n\tbuyUNDER(exactBASE) {\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactUNDER = Math.abs(this.k / (this.poolBASE + exactBASE) - this.poolUNDER);\r\n\t\t\t\t\t\t\r\n\t\t// apply fee\r\n\t\tlet exactUNDERWithFees = exactUNDER * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER -= exactUNDERWithFees;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactUNDERWithFees;\r\n\t}\r\n\r\n\tsellUNDER(exactUNDER) {\t\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactBASE = Math.abs(this.k / (this.poolUNDER + exactUNDER) - this.poolBASE);\r\n\t\t\r\n\t\t// apply fee\r\n\t\tlet exactBASEWithFees = exactBASE * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE -= exactBASEWithFees;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactBASEWithFees;\r\n\t}\r\n\r\n\tgetInputPrice(inputAmount, inputPool, outputPool) {\r\n\t\treturn (inputAmount * outputPool) / (inputPool + inputAmount);\r\n\t}\r\n\r\n\t// helper method to set new price\r\n\tsetMarketPrice(newPrice) {\r\n\t\tlet k = this.poolBASE * this.poolUNDER;\r\n\t\tthis.poolUNDER = Math.sqrt(k / newPrice);\r\n\t\tthis.poolBASE = Math.sqrt(k * newPrice);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t}\r\n\r\n\tgetPrice() {\r\n\t\treturn this.poolBASE / this.poolUNDER;\r\n\t}\r\n\r\n\tgetDecimals() {\r\n\t\tif(this.addressUNDER === usdcAddress) {\r\n\t\t\treturn 6;\r\n\t\t} else if (this.addressUNDER === wbtcAddress) {\r\n\t\t\treturn 8;\r\n\t\t}\r\n\r\n\t\treturn 18;\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXLong {\t\t\r\n\tconstructor(collateralUNDER, quantity, borrowedBASE, boughtUNDER, openingPrice) {\r\n\t\tthis.collateralUNDER = collateralUNDER;\r\n\t\tthis.quantity = quantity;\r\n\t\tthis.borrowedBASE = borrowedBASE;\r\n\t\tthis.boughtUNDER = boughtUNDER;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\t\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXLong market data loaded. \");\r\n\t}\r\n\r\n\t// when one of the members are updated, others can be updated here\r\n\tupdate(subpos, currentPrice) {\r\n\t\t// calculate collateral, borrowed and bought based on quantity\r\n\t\tthis.collateralUNDER = this.quantity;\r\n\t\tthis.borrowedBASE = this.quantity * currentPrice;\r\n\t\tthis.boughtUNDER = this.quantity;\r\n\r\n\t\t// todo: remove json, move everything to service, use it, don't duplicate\r\n\t\tsubpos.under.start = this.quantity;\r\n\t\tsubpos.borrowedBASE = this.quantity * currentPrice;\r\n\t\tsubpos.boughtUNDER = this.quantity; \r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = (this.collateralUNDER + this.boughtUNDER) * currentPrice - this.borrowedBASE;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXShort {\t\t\r\n\tconstructor(collateralBASE, quantity, borrowedUNDER, boughtBASE, openingPrice) {\r\n\t\tthis.collateralBASE = collateralBASE;\r\n\t\tthis.quantity = quantity;\r\n\t\tthis.borrowedUNDER = borrowedUNDER;\r\n\t\tthis.boughtBASE = boughtBASE;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXShort market data loaded. \");\r\n\t}\r\n\r\n\t// when one of the members are updated, others can be updated here\r\n\tupdate(subpos, currentPrice) {\r\n\t\t// calculate collateral, borrowed and bought based on quantity\r\n\t\tthis.collateralBASE = this.quantity * currentPrice;\r\n\t\tthis.borrowedUNDER = this.quantity;\r\n\t\tthis.boughtBASE = this.quantity * currentPrice;\r\n\r\n\t\t// todo: remove json, move everything to service, use it, don't duplicate\r\n\t\tsubpos.base.start = this.quantity * currentPrice;\r\n\t\tsubpos.borrowedUNDER = this.quantity;\r\n\t\tsubpos.boughtBASE = this.quantity * currentPrice;\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.collateralBASE + this.boughtBASE - this.borrowedUNDER * currentPrice;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","import { OptionMath } from './common.js'\r\nexport default class GammaOptions {\t\t\r\n\tconstructor(isCall, isLong, quantity, strike, daysToExpiry, iv) {\r\n\t\tthis.isCall = isCall;\r\n\t\tthis.isLong = isLong;\r\n\t\tthis.quantity = quantity;\r\n\t\tthis.strike = strike;\r\n\t\tthis.daysToExpiry = daysToExpiry;\r\n\t\tthis.iv = iv;\r\n\t\tthis.optionMath = new OptionMath(); \r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"GammaOptions market data loaded. \");\r\n\t}\r\n\r\n\t// when one of the members are updated, others can be updated here\r\n\tupdate(subpos, currentPrice) {\r\n\t\tlet currentValue = this.getCurrentValue(currentPrice, 0)[0];\r\n\t\tif(this.isLong) {\r\n\t\t\tsubpos.base.start = currentValue;\r\n\t\t\tsubpos.under.start = 0;\r\n\t\t} else {\r\n\t\t\tif(this.isCall) {\r\n\t\t\t\tsubpos.base.start = currentValue - this.quantity * currentPrice;\r\n\t\t\t\tsubpos.under.start = this.quantity;\r\n\t\t\t} else {\r\n\t\t\t\tsubpos.base.start = currentValue;\r\n\t\t\t\tsubpos.under.start = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\t// passedDays - days that passed since \r\n\tgetCurrentValue(currentPrice, passedDays) {\r\n\t\tlet currentValueBASE = this.quantity * this.optionMath.blackScholes(this.isCall ? 'call' : 'put', currentPrice, this.strike, (this.daysToExpiry - passedDays) / 365, 0.02, this.iv / 100);\r\n\t\t// long\r\n\t\tif(this.isLong) {\r\n\t\t\treturn [currentValueBASE, currentValueBASE / currentPrice];\r\n\t\t}\r\n\r\n\t\t// short call\r\n\t\tif(this.isCall) {\r\n\t\t\treturn [this.quantity * currentPrice - currentValueBASE, (this.quantity * currentPrice - currentValueBASE) / currentPrice];\r\n\t\t}\r\n\t\t\r\n\t\t// short put\r\n\t\treturn [this.quantity * this.strike - currentValueBASE, (this.quantity * this.strike - currentValueBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class Manual {\t\t\r\n\tconstructor(startBASE, extraBASE, startUNDER, extraUNDER) {\r\n\t\tthis.startBASE = startBASE;\r\n\t\tthis.extraBASE = extraBASE;\r\n\t\tthis.startUNDER = startUNDER;\r\n\t\tthis.extraUNDER = extraUNDER;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"Manual market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// when one of the members are updated, others can be updated here\r\n\tupdate(subpos, currentPrice) {\r\n\t\t// do nothing\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.startBASE + this.startUNDER * currentPrice;\r\n\t\treturn [positionBASE, positionBASE / currentPrice];\r\n\t}\r\n}\t\t\r\n","import { getContractInstance } from './common.js'\r\nimport {\r\n\tabi as NFT_MANAGER_ABI,\r\n\t//bytecode as NFT_MANAGER_BYTECODE,\r\n  } from '@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json'\r\n\t\t\r\nexport default class UniswapV3 {\t\t\r\n\tconstructor(myBASE, myUNDER, openingPrice, minPrice, maxPrice, feeInPercent, poolID, ignoreImpermanentLoss, apr) {\r\n\t\tthis.myBASE = myBASE;             // user invested in BASE\r\n\t\tthis.myUNDER = myUNDER;           // user invested in UNDER\r\n\t\tthis.openingPrice = openingPrice; // price when liq position is opened\r\n\t\tthis.minPrice = minPrice;\r\n\t\tthis.maxPrice = maxPrice;\r\n\t\tthis.feeInPercent = feeInPercent; // NOTE: not used\r\n\t\tthis.poolID = poolID;\r\n\t\tthis.ignoreImpermanentLoss = ignoreImpermanentLoss; \r\n\t\tthis.apr = apr;\r\n\r\n\t\tthis.collectedFeesBASE = 0;\r\n\t\tthis.collectedFeesUNDER = 0;\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tif(this.poolID > 0) {\r\n\t\t\tlet managerInstance = getContractInstance(web3, NFT_MANAGER_ABI, \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\r\n\t\t\tlet collectResult = await managerInstance.methods.collect(\r\n\t\t\t\t{\r\n\t\t\t\t\ttokenId: this.poolID,\r\n\t\t\t\t\trecipient: position.address,\r\n\t\t\t\t\tamount0Max: this.tokens(web3, 1000000000).toString(),\r\n\t\t\t\t\tamount1Max: this.tokens(web3, 1000000000).toString()\r\n\t\t\t\t}\r\n\t\t\t).call({ from: position.address });\r\n\t\t\t//console.log(collectResult);\r\n\t\t\t//console.log(collectResult.amount0)\r\n\t\r\n\t\t\t// set collect fees\r\n\t\t\tthis.collectedFeesBASE = collectResult.amount0 / 10 ** (collectResult.amount0.length >= 15 ? 18 : 6);\r\n\t\t\tthis.collectedFeesUNDER = collectResult.amount1 / 10 ** (collectResult.amount1.length >= 15 ? 18 : 6);\r\n\t\r\n\t\t\tconsole.log(\"UniswapV3 market data loaded\");\r\n\t\t}\r\n\t}\r\n\r\n\t// when one of the members are updated, others can be updated here\r\n\tupdate(subpos, currentPrice) {\r\n\t\t// do nothing\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price \r\n\tgetCurrentValue(newPrice, passedDays) {\r\n\t\tif(this.ignoreImpermanentLoss) {\r\n\t\t\tlet newTotalBASE = this.myBASE + this.myUNDER * newPrice;\r\n\t\t\tlet collectedFeesTotalBASE = this.collectedFeesBASE + this.collectedFeesUNDER * newPrice;\r\n\t\t\treturn [newTotalBASE + collectedFeesTotalBASE, (newTotalBASE + collectedFeesTotalBASE) / newPrice]\r\n\t\t}\r\n\t\t// total in BASE amd total in UNDER\r\n\t\tthis.openingTotalBASE = this.myBASE + this.myUNDER * this.openingPrice;\r\n\r\n\t\tthis.token1V2 = this.openingTotalBASE / 2;\r\n\t\tthis.token2V2 = this.token1V2 / this.openingPrice;\r\n\t\tthis.L = Math.sqrt(this.token1V2 * this.token2V2);\r\n\t\tthis.L2 = this.token1V2 * this.token2V2;\r\n\t\tthis.T = this.L * Math.sqrt(this.minPrice);\r\n\t\tthis.H = this.L / Math.sqrt(this.maxPrice);\r\n\t\tthis.maxToken2 = this.L2 / this.H - this.T;\r\n\t\tthis.maxToken1 = this.L2 / this.T - this.H;\r\n\t\tthis.LP_a = this.openingPrice > this.maxPrice ? 0 : (this.L / Math.sqrt(this.openingPrice) - this.H) * this.openingPrice;\r\n\t\tthis.LP_b = this.openingPrice > this.maxPrice ? this.maxToken2 : this.L * Math.sqrt(this.openingPrice) - this.T;\r\n\t\tthis.LP = this.LP_a + this.LP_b;\r\n\t\tthis.multiplier = this.openingPrice > this.minPrice ? this.openingTotalBASE / this.LP : this.openingTotalBASE / (this.openingPrice * this.maxToken1);\r\n\r\n\t\t\t\t\r\n\t\tlet x, y, value; // x is BASE. y is UNDER\r\n\t\tif (newPrice < this.minPrice) {\r\n\t\t\tx = this.maxToken1 * this.multiplier;\r\n\t\t\ty = 0;\r\n\t\t\tvalue = x * newPrice;\r\n\t\t} else if (newPrice >= this.minPrice && newPrice <= this.maxPrice) {\r\n\t\t\tx = (this.L / Math.sqrt(newPrice) - this.H) * this.multiplier;\r\n\t\t\ty = (this.L * Math.sqrt(newPrice) - this.T) * this.multiplier;\r\n\t\t\tvalue = x * newPrice + y;\r\n\t\t} else if (newPrice > this.maxPrice) {\r\n\t\t\tx = 0;\r\n\t\t\ty = this.maxToken2 * this.multiplier;\r\n\t\t\tvalue = y;\r\n\t\t}\r\n\r\n\t\tlet aprMultiplier = (1 + this.apr / 100 * passedDays / 365);\r\n\r\n\t\treturn [value * aprMultiplier, (value * aprMultiplier) / newPrice];\r\n\t}\r\n\r\n\ttokens(web3, n) {\r\n\t\treturn new web3.utils.BN(web3.utils.toWei(n.toString()));\r\n\t};\r\n}\t\t\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { \r\n  Col, \r\n  Row\r\n} from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass AddSubpositionCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedType: { value: 'uniswap', label: 'uniswap' }\r\n    }\r\n  }\r\n\r\n  getTypes() {\r\n    return this.props.types.map((type, index) => {\r\n      return { value: type, label: type };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={'Add New'}\r\n        content={\r\n          <div>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div className=\"table-responsive\">\r\n                  <h5>Select subposition</h5>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n              <Select\r\n                placeholder=\"Type\"\r\n                name=\"type\"\r\n                value={this.state.selectedType}\r\n                options={this.getTypes()}\r\n                onChange={value => {\r\n                  this.setState({ selectedType: value });\r\n                }}\r\n              />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Button\r\n                  bsStyle=\"info\"\r\n                  fill\r\n                  //special   \r\n                  onClick={() => this.props.addSubposition(this.state.selectedType.value)}\r\n                >\r\n                  <i className={\"fa fa-plus\"} /> Add subposition\r\n                </Button> \r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSubpositionCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass UniswapV2Card extends Component {\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.start = Number(newValue);\r\n    subpos.service.myLIQ = Number(newValue) + subpos.liq.extra;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.extra = Number(newValue);\r\n    subpos.service.myLIQ = subpos.liq.start + Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeAPR(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.apr = Number(newValue);\r\n    subpos.service.apr = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          UniswapV2\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.extra}\r\n                onChange={(event) => this.onChangeExtraBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.extra}\r\n                onChange={(event) => this.onChangeExtraUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.start}\r\n                onChange={(event) => this.onChangeStartLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.extra}\r\n                onChange={(event) => this.onChangeExtraLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              APR [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"%\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.apr}\r\n                onChange={(event) => this.onChangeAPR(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default UniswapV2Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass UniswapV3Card extends Component {\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    subpos.service.myBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    subpos.service.myUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeMinPrice(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.minPrice = Number(newValue);\r\n    subpos.service.minPrice = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeMaxPrice(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.maxPrice = Number(newValue);\r\n    subpos.service.maxPrice = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeOpeningPrice(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.openingPrice = Number(newValue);\r\n    subpos.service.openingPrice = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIgnoreImpermanentLoss(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.ignoreImpermanentLoss = newValue === 1;\r\n    subpos.service.ignoreImpermanentLoss = newValue === 1;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeAPR(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.apr = Number(newValue);\r\n    subpos.service.apr = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          UniswapV3\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.extra}\r\n                onChange={(event) => this.onChangeExtraBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.extra}\r\n                onChange={(event) => this.onChangeExtraUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Min price:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"MinPrice\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.minPrice}\r\n                onChange={(event) => this.onChangeMinPrice(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Max price:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"MaxPrice\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.maxPrice}\r\n                onChange={(event) => this.onChangeMaxPrice(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Opening price:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"OpeningPrice\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.openingPrice}\r\n                onChange={(event) => this.onChangeOpeningPrice(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Ignore IL:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"IgnoreImpermanentLoss\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.ignoreImpermanentLoss ? 1 : 0}\r\n                onChange={(event) => this.onChangeIgnoreImpermanentLoss(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              APR [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"APR\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.apr}\r\n                onChange={(event) => this.onChangeAPR(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default UniswapV3Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXLongCard extends Component {\r\n\r\n  onChangeQuantity(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.quantity = Number(newValue);\r\n    subpos.service.quantity = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    subpos.service.collateralUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedBASE = Number(newValue);\r\n    subpos.service.borrowedBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtUNDER = Number(newValue);\r\n    subpos.service.boughtUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          dYdX Long\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Quantity:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Quantity\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.quantity}\r\n                onChange={(event) => this.onChangeQuantity(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                disabled\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                disabled\r\n                min={0}\r\n                value={this.props.subposition.borrowedBASE}\r\n                onChange={(event) => this.onChangeBorrowedBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                disabled\r\n                min={0}\r\n                value={this.props.subposition.boughtUNDER}\r\n                onChange={(event) => this.onChangeBoughtUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXLongCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXShortCard extends Component {\r\n\r\n  onChangeQuantity(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.quantity = Number(newValue);\r\n    subpos.service.quantity = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    subpos.service.collateralBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedUNDER = Number(newValue);\r\n    subpos.service.borrowedUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtBASE = Number(newValue);\r\n    subpos.service.boughtBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          dYdX Short\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Quantity:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Quantity\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.quantity}\r\n                onChange={(event) => this.onChangeQuantity(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                disabled\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                disabled\r\n                min={0}\r\n                value={this.props.subposition.borrowedUNDER}\r\n                onChange={(event) => this.onChangeBorrowedUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                disabled\r\n                min={0}\r\n                value={this.props.subposition.boughtBASE}\r\n                onChange={(event) => this.onChangeBoughtBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXShortCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass GammaOptionsCard extends Component {\r\n\r\n  //onChangeStartBase(newValue) {\r\n  //  let subpos = clone(this.props.subposition);\r\n  //  subpos.base.start = Number(newValue);\r\n  //  this.props.updateSubposition(this.props.index, subpos);\r\n  //}\r\n  onChangeIsLong(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.isLong = newValue === 'B';\r\n    subpos.service.isLong = newValue === 'B';\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIsCall(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.isCall = newValue === 'C';\r\n    subpos.service.isCall = newValue === 'C';\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeQuantity(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.quantity = Number(newValue);\r\n    subpos.service.quantity = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStrike(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.strike = Number(newValue);\r\n    subpos.service.strike = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeDaysToExpiry(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.daysToExpiry = Number(newValue);\r\n    subpos.service.daysToExpiry = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIV(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.iv = Number(newValue);\r\n    subpos.service.iv = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeEnabled(checked) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.enabled = checked;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n      <Row>\r\n        <Col md={4}>\r\n          <FormControl\r\n            type=\"checkbox\"\r\n            checked={this.props.subposition.enabled}\r\n            onChange={(event) => this.onChangeEnabled(event.target.checked)}\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          Gamma Options\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.getTitle()}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Buy or Sell:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"BuyOrSell\"}\r\n                type=\"text\"\r\n                value={this.props.subposition.isLong ? 'B' : 'S'}\r\n                onChange={(event) => this.onChangeIsLong(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Call or Put:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"text\"\r\n                value={this.props.subposition.isCall ? 'C' : 'P'}\r\n                onChange={(event) => this.onChangeIsCall(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Quantity:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.quantity}\r\n                onChange={(event) => this.onChangeQuantity(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Strike:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.strike}\r\n                onChange={(event) => this.onChangeStrike(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Days to expiry:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.daysToExpiry}\r\n                onChange={(event) => this.onChangeDaysToExpiry(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              IV [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.iv}\r\n                onChange={(event) => this.onChangeIV(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                disabled\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                value={this.props.subposition.base.start.toFixed(2)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                disabled\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start.toFixed(2)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default GammaOptionsCard;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport { \r\n  Tooltip, \r\n  OverlayTrigger,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl\r\n } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport AddSubpositionCard from \"./AddSubpositionCard.jsx\";\r\nimport UniswapV2Card from \"./subpositions/UniswapV2Card.jsx\";\r\nimport UniswapV3Card from \"./subpositions/UniswapV3Card.jsx\";\r\nimport DYDXLongCard from \"./subpositions/DYDXLongCard.jsx\";\r\nimport DYDXShortCard from \"./subpositions/DYDXShortCard.jsx\";\r\nimport GammaOptionsCard from \"./subpositions/GammaOptionsCard.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { debalanceETH, debalanceDAI, clone } from '../../web3/common.js';\r\nimport { CoinGeckoPrices } from '../../web3/CoinGeckoPrices.js';\r\n\r\nclass PositionChartCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chartLoaded: false,\r\n      chartData: [Math.random() * 5, 2, 1],\r\n      customMinX: 100,\r\n      customMaxX: 3000,\r\n      customXUserSet: false,\r\n      customMinY: undefined,\r\n      customMaxY: undefined,\r\n      currentPrice: 0\r\n    };\r\n\r\n    this.addSubposition = this.addSubposition.bind(this);\r\n    this.updateSubposition = this.updateSubposition.bind(this);\r\n    this.removeSubposition = this.removeSubposition.bind(this);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (this.userModelLoaded() && this.props.selectedPosition) {\r\n      // set customPosition if there is a change in props\r\n      if(prevProps.selectedPosition !== this.props.selectedPosition) {\r\n        let customPosition = clone(this.props.selectedPosition);\r\n        // add enabled flag\r\n        for(let j = 0; j < customPosition.subpositions.length; j++) {\r\n          customPosition.subpositions[j].enabled = true;\r\n        }\r\n        this.setState({\r\n          customPosition: customPosition\r\n        });\r\n      } else {\r\n        // refresh chart if customPosition is updated\r\n        if(prevState.customPosition !== this.state.customPosition) {\r\n          await this.refreshChart();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  userModelLoaded() {\r\n    let userModel = this.props.userModel;\r\n    return userModel && userModel.positions && Array.isArray(userModel.positions);\r\n  }\r\n\r\n  async refreshChart() {\r\n    console.log(\"Refreshing chart data. Position: \");\r\n    let pos = this.state.customPosition;   \r\n    console.log(pos)\r\n\r\n    // chart data on today\r\n    let todayData = await this.prepareChartData(pos, 0);\r\n\r\n    // chart data in 30 days\r\n    let futureData = await this.prepareChartData(pos, 30);\r\n\r\n    this.setState({\r\n      chartLoaded: true,\r\n      chartData1: todayData.aprsBASE,\r\n      chartData2: todayData.profitsBASE,\r\n      chartData3: todayData.profitsUNDER,\r\n      chartData4: futureData.profitsBASE,\r\n      rangeEdgesBASE: todayData.rangeEdgesBASE, \r\n      rangeEdgesUNDER: todayData.rangeEdgesUNDER,\r\n      currentPrice: todayData.currentPrice,\r\n      customMinX: this.state.customXUserSet ? this.state.customMinX : todayData.customMinX,\r\n      customMaxX: this.state.customXUserSet ? this.state.customMaxX : todayData.customMaxX\r\n    });\r\n\r\n  }  \r\n\r\n  async prepareChartData(pos, passedDays) { \r\n    // time \r\n    let daysSinceStart = (new Date() - new Date(pos.startDate)) / (1000 * 60 * 60 * 24);\r\n    \r\n    let chartWindow = this.getChartWindow(pos);\r\n    let currentPrice = 0;\r\n    let startPrice = chartWindow.step * 25;\r\n    let endPrice = chartWindow.right;\t\r\n    let step = chartWindow.step;\t\r\n    let aprsBASE = [], profitsBASE = [], profitsUNDER = [];\r\n    for(let i = startPrice; i < endPrice; i += step) {\r\n      let totalOutBASE = 0, totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        if(subpos.enabled) {\r\n          // get ins\r\n          startBASE += subpos.base.start;\r\n          startUNDER += subpos.under.start;\r\n\r\n          // get outs\r\n          let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n          totalOutBASE += subpos.service.getCurrentValue(i, passedDays)[0] + extraBASE;\r\n\r\n          let extraUNDER = subpos.base.extra / i + subpos.under.extra;\r\n          totalOutUNDER += subpos.service.getCurrentValue(i, passedDays)[1] + extraUNDER;\r\n        }\r\n\r\n        if(currentPrice === 0) {\r\n          if(subpos.type === \"uniswap\") {\r\n            currentPrice = subpos.service.getPrice();\r\n          } else {\r\n            // todo: used here and in PositionsView, move somewhere\r\n            let market = {\r\n              priceBASEUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address),\r\n              priceUNDERUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address)\r\n            }\r\n            currentPrice = market.priceUNDERUSD / market.priceBASEUSD;\r\n          }\r\n        }\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalancedBASE = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced BASE @\" + i.toFixed(3) + \": \" + debalancedBASE[0].toFixed(4) + \" UNDER + \" + debalancedBASE[1].toFixed(4) + \" BASE\");\r\n      let profitBASE = debalancedBASE[1] - startBASE;\r\n      let hodlBASE = startBASE + startUNDER * i;\r\n      let aprTargetBASE = profitBASE / hodlBASE / daysSinceStart * 365 * 100;\r\n\r\n      // debalance for max UNDER\r\n      let debalancedUNDER = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced UNDER @\" + i.toFixed(3) + \": \" + debalancedUNDER[0].toFixed(4) + \" UNDER + \" + debalancedUNDER[1].toFixed(4) + \" BASE\");\r\n      let profitUNDER = debalancedUNDER[0] - startUNDER;\r\n      //let hodlUNDER = startBASE / i + startUNDER;\r\n      //let aprTargetUNDER = profitUNDER / hodlUNDER / daysSinceStart * 365 * 100;\r\n\r\n      aprsBASE.push({x: i, y: aprTargetBASE});\r\n      profitsBASE.push({x: i, y: profitBASE});\r\n      profitsUNDER.push({x: i, y: profitUNDER});\r\n    }\r\n\r\n    let rangeEdgesBASE = this.getRangePoints(profitsBASE);\r\n    let rangeEdgesUNDER = this.getRangePoints(profitsUNDER);\r\n\r\n    return {\r\n      aprsBASE: aprsBASE,\r\n      profitsBASE: profitsBASE,\r\n      profitsUNDER: profitsUNDER,\r\n      rangeEdgesBASE: rangeEdgesBASE, \r\n      rangeEdgesUNDER: rangeEdgesUNDER,\r\n      currentPrice: currentPrice,\r\n      customMinX: chartWindow.left,\r\n      customMaxX: chartWindow.right\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns start, end prices for chart.\r\n   *\r\n   * @param {object}   pos       Position.\r\n   * @return {type} Return value description.\r\n   */\r\n  getChartWindow(pos) {\r\n    let pivot = pos.entryPrice;\r\n    let step;\r\n    if(pivot < 1) {\r\n      step = 0.001;\r\n    } else if(pivot < 10) {\r\n      step = 0.01;\r\n    } else if(pivot < 100) {\r\n      step = 0.1;\r\n    } else if(pivot < 1000) {\r\n      step = 1;\r\n    } else if(pivot < 10000) {\r\n      step = 10;\r\n    } else if(pivot < 100000) {\r\n      step = 100;\r\n    }\r\n\r\n    return {\r\n      left: Number(pivot / 3),\r\n      right: 10000,//Number(pivot * 5),\r\n      step: step\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns points for range ploting (90%).\r\n   *\r\n   * @param {Array}   profits       Profit points on chart.\r\n   * @return {type} Return value description.\r\n   */\r\n  getRangePoints(profits) {\r\n    // find maximum profit\r\n    let maxProfit = -100000000000;\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(maxProfit < profits[i].y) {\r\n        maxProfit = profits[i].y;\r\n      }\r\n    }\r\n\r\n    //console.log(\"maxProfit: \" + maxProfit)\r\n\r\n    let firstPoint = { x: profits[0].x, y: profits[0].y };\r\n    let leftPoint = firstPoint; \r\n    let rightPoint = null, prevPoint;\r\n    // find left and right range edge [90%]\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(leftPoint === firstPoint && profits[i].y >= maxProfit * 0.9) {\r\n        leftPoint = { x: profits[i].x, y: profits[i].y };\r\n      } \r\n      \r\n      if(leftPoint !== firstPoint && rightPoint === null && profits[i].y < maxProfit * 0.9) {\r\n        rightPoint = prevPoint;\r\n      }\r\n\r\n      prevPoint = { x: profits[i].x, y: profits[i].y };\r\n    }\r\n\r\n    if(rightPoint === null) {\r\n      rightPoint = prevPoint;\r\n    }\r\n\r\n    return [leftPoint, rightPoint]\r\n  }\r\n\r\n  getPerformanceChartOptions() {\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'line',\r\n        height: '600'\r\n      },\r\n      title: {\r\n        text: 'Position: ' + (this.state.customPosition != null ? this.state.customPosition.name : 'unknown')\r\n      },\r\n      xAxis: {\r\n        min: this.state.customMinX,\r\n        max: this.state.customMaxX,\r\n        plotLines: [{\r\n          color: '#3D3D3D',\r\n          width: 2,\r\n          value: this.state.currentPrice ? this.state.currentPrice : 0,\r\n          label: {\r\n            text: \"Current price\"\r\n          }\r\n        }],\r\n        plotBands: [\r\n          {\r\n            from: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[0].x : 0,\r\n            to: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[1].x : 0,\r\n            color: 'rgba(165, 244, 151, 0.4)',\r\n            label: {\r\n                text: '90% UNDER',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          },\r\n          { \r\n            from: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[0].x : 0,\r\n            to: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[1].x : 0,\r\n            color: 'rgba(242, 240, 150, 0.4)',\r\n            label: {\r\n                text: '90% BASE',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      yAxis: [\r\n        {\r\n          title: {\r\n            text: 'APR [%]'\r\n          },\r\n          min: -100,\r\n          plotBands: [\r\n            {\r\n              from: 0,\r\n              to: -10000000000,\r\n              color: 'rgba(255, 33, 33, 0.06)',\r\n              label: {\r\n                  text: 'Red Zone',\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [BASE]'\r\n          },\r\n          opposite: true,\r\n          min: this.state.customMinY,\r\n          max: this.state.customMaxY,\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [UNDER]'\r\n          },\r\n          opposite: true\r\n        }\r\n      ],\r\n      series: [\r\n        { \r\n          name: \"APR [%] (BASE or UNDER)\", \r\n          data: this.state.chartData1,\r\n          tooltip: {\r\n            valueSuffix: '%'\r\n          },\r\n          turboThreshold: 10000\r\n        },\r\n        { \r\n          name: \"Profit Today [BASE]\", \r\n          data: this.state.chartData2, \r\n          yAxis: 1,\r\n          tooltip: {\r\n            valueSuffix: ' BASE' // todo\r\n          },\r\n          turboThreshold: 10000,\r\n        },\r\n        /*{ \r\n          name: \"Profit [UNDER]\", \r\n          data: this.state.chartData3,\r\n          yAxis: 2,\r\n          tooltip: {\r\n            valueSuffix: ' UNDER' // todo\r\n          },\r\n          turboThreshold: 10000\r\n        },*/\r\n        { \r\n          name: \"Profit Future [BASE]\", \r\n          data: this.state.chartData4, \r\n          yAxis: 1,\r\n          tooltip: {\r\n            valueSuffix: ' BASE' // todo\r\n          },\r\n          turboThreshold: 10000,\r\n        }\r\n      ],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  async addSubposition(type) {\r\n    let newSubpos;\r\n    if(type === 'uniswap') {\r\n      newSubpos = {\r\n        type: type,\r\n        marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n        base: {\r\n          start: 1800,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        liq: {\r\n          start: 30.67,\r\n          extra: 0\r\n        },\r\n        apr: 20\r\n      }\r\n    } else if(type === 'uniswapv3') {\r\n      newSubpos = {\r\n        type: type,\r\n        marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n        openingPrice: this.state.currentPrice,\r\n        base: {\r\n          start: 1000,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        minPrice: 3900 * 0.8, \r\n        maxPrice: 3900 * 1.2, \r\n        feeInPercent: 0.3\r\n      }\r\n    } else if(type === 'dydx-long') {\r\n      newSubpos = {\r\n        type: \"dydx-long\",\r\n        base: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        quantity: 1, \r\n        borrowedBASE: 2700, \r\n        boughtUNDER: 1, \r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'dydx-short') {\r\n      newSubpos = {\r\n        type: \"dydx-short\",\r\n        base: {\r\n          start: 2700,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        quantity: 1, \r\n        borrowedUNDER: 1,\r\n        boughtBASE: 2700,\r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'option') {\r\n      newSubpos = {\r\n        type: type,\r\n        base: {\r\n          start: 183,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        isCall: true, \r\n        isLong: true, \r\n        quantity: 1, \r\n        strike: 3200,\r\n        daysToExpiry: 30,\r\n        iv: 86\r\n      }\r\n    }\r\n    await this.props.addService(this.state.customPosition, newSubpos);\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    newSubpos.enabled = true;\r\n    updatedPosition.subpositions.push(newSubpos);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  updateSubposition(index, subpos) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions[index] = subpos;\r\n    subpos.service.update(subpos, this.state.currentPrice);\r\n    console.log(updatedPosition)\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  removeSubposition(index) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions.splice(index, 1);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  displayCard(subpos, index) {\r\n\r\n    if(subpos.type === 'uniswap') {\r\n      return (\r\n        <UniswapV2Card\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'uniswapv3') {\r\n      return (\r\n        <UniswapV3Card\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-long') {\r\n      return (\r\n        <DYDXLongCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-short') {\r\n      return (\r\n        <DYDXShortCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'option') {\r\n      return (\r\n        <GammaOptionsCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  getSubpositionCards() {\r\n    if(this.state.customPosition) {\r\n      return this.state.customPosition.subpositions.map((subpos, index) => {\r\n        return (\r\n          <Col md={4} key={index}>\r\n            {this.displayCard(subpos, index)}\r\n          </Col>\r\n        )\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <Card\r\n        title=\"How does my position looks like?\"\r\n        //category=\"24 Hours performance\"\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special // for share button: fa fa-share-alt\r\n              //speciallarge \r\n              //pullRight\r\n              simple\r\n              >\r\n              <i className={\"fa fa-question-circle\"} /> Help \r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div className=\"main-content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col md={12}>\r\n                <HighchartsReact\r\n                  highcharts={Highcharts}\r\n                  options={this.getPerformanceChartOptions()}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={2}>\r\n                Price:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Min X\"}\r\n                  type=\"number\"\r\n                  name=\"customMinX\"\r\n                  min={0}\r\n                  value={this.state.customMinX}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMinX: Number(event.target.value),\r\n                      customXUserSet: true\r\n                    });\r\n                  }}\r\n                />\r\n                {' '}\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Max X\"}\r\n                  type=\"number\"\r\n                  name=\"customMaxX\"\r\n                  min={0}\r\n                  value={this.state.customMaxX}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMaxX: Number(event.target.value),\r\n                      customXUserSet: true\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={2}>\r\n                Profit [BASE]:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Min Y\"}\r\n                  type=\"number\"\r\n                  name=\"customMinY\"\r\n                  value={this.state.customMinY}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMinY: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n                &nbsp;\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Max Y\"}\r\n                  type=\"number\"\r\n                  name=\"customMaxY\"\r\n                  value={this.state.customMaxY}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMaxY: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n             </Row>\r\n            <Row>\r\n              {this.getSubpositionCards()}\r\n              <Col md={4}>\r\n                <AddSubpositionCard\r\n                  types={['uniswap','uniswapv3', 'dydx-long', 'dydx-short', 'option']}\r\n                  addSubposition={this.addSubposition}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionChartCard;","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from '../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\nimport Web3 from 'web3';\r\nimport Uniswap from '../web3/Uniswap';\r\nimport dYdXLong from '../web3/dYdXLong';\r\nimport dYdXShort from '../web3/dYdXShort';\r\nimport GammaOptions from '../web3/GammaOptions';\r\nimport Manual from '../web3/Manual';\r\nimport UniswapV3 from '../web3/UniswapV3';\r\nimport PositionChartCard from \"./positions/PositionChartCard\";\r\nimport { clone, debalanceETH, debalanceDAI } from '../web3/common.js';\r\nimport { CoinGeckoPrices } from '../web3/CoinGeckoPrices.js';\r\n/*import { \r\n  uniswapdYdXTest, \r\n  dydxShortTest, \r\n  callOptionTest, \r\n  putOptionTest,\r\n  uniswapv3Test,\r\n  shortCallOptionTest,\r\n  shortPutOptionTest\r\n } from '../web3/templates/positions.js';*/\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nclass PositionsView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.hideChartDialog = this.hideChartDialog.bind(this);\r\n    this.loadWeb3Account = this.loadWeb3Account.bind(this);\r\n    this.addService = this.addService.bind(this);\r\n\r\n    this.state = {\r\n      //data: null,\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null,\r\n      isChartDialogShown: false,\r\n      web3DataLoaded: false,\r\n      selectedPosition: null,\r\n      console: \"Loading positions...\"\r\n    };\r\n  }\r\n  \r\n  async componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n\r\n    const providerOptions = {\r\n      /* See Provider Options Section */\r\n      walletconnect: {\r\n        package: WalletConnectProvider, // required\r\n        options: {\r\n          infuraId: \"1e22b4bd561c46ada64b5690d1fbb261\" // required\r\n        }\r\n      }\r\n    };\r\n    \r\n    const web3Modal = new Web3Modal({\r\n      network: \"mainnet\", // optional\r\n      cacheProvider: true, // optional\r\n      providerOptions // required\r\n    });\r\n    \r\n    const provider = await web3Modal.connect();\r\n    \r\n    const web3 = new Web3(provider);\r\n\r\n    // Subscribe to accounts change\r\n    provider.on(\"accountsChanged\", (accounts: string[]) => {\r\n      console.log(\"accountsChanged: \" + accounts);\r\n    });\r\n\r\n    // Subscribe to chainId change\r\n    provider.on(\"chainChanged\", (chainId: number) => {\r\n      console.log(\"chainChanged: \" + chainId);\r\n    });\r\n\r\n    // Subscribe to provider connection\r\n    provider.on(\"connect\", (info: { chainId: number }) => {\r\n      console.log(\"connect: \" + info);\r\n    });\r\n\r\n    // Subscribe to provider disconnection\r\n    provider.on(\"disconnect\", (error: { code: number; message: string }) => {\r\n      console.log(\"disconnect: \" + error);\r\n    });\r\n\r\n    this.setState({\r\n      web3: web3\r\n    });\r\n  }\r\n  \r\n  async loadWeb3Account(web3) {\r\n    try {\r\n      await window.ethereum.enable();\r\n      const accounts = await web3.eth.getAccounts();\r\n      return accounts[0];\r\n    } catch (e) {\r\n      console.error(\"Unable to load web3 account. Please enable web3 wallet in your browser. Message: \" + e.getMessage());\r\n    }\r\n  };\r\n\r\n  async componentDidUpdate() {\r\n    if (this.props.userModel && this.props.userModel.positions && Array.isArray(this.props.userModel.positions) && this.state.web3) {\r\n      // call only once\r\n      if (!this.state.web3DataLoaded) {\r\n        console.log(\"Loading web3 data and setting up data for table\")\r\n        this.setState({\r\n          console: \"Loading web3 data and setting up data for table\"\r\n        })\r\n        this.setState({\r\n          web3DataLoaded: true\r\n        });\r\n\r\n        this.setState({\r\n          console: \"Loading web3 data and setting up data for table\"\r\n        })\r\n\r\n        // NOTE: here I can create JSON objects and append to positions\r\n        let appendedPositions = [...this.props.userModel.positions];\r\n        //let appendedPositions = [this.props.userModel.positions[0]];\r\n        //let appendedPositions = [shortCallOptionTest, shortPutOptionTest, callOptionTest, this.props.userModel.positions[0]];\r\n\r\n        // get live market data from smart contracts via web3\r\n        await this.loadWeb3Data(appendedPositions);\r\n\r\n        this.setState({\r\n          console: \"Preparing table data...\"\r\n        })\r\n\r\n        // calculate data for table\r\n        let tableData = await this.prepareTableData(appendedPositions);\r\n\r\n        // update table\r\n        this.setState({\r\n          data: tableData,\r\n          selectedPosition: appendedPositions[0]\r\n        });\r\n\r\n        this.setState({\r\n          console: appendedPositions.length + \" positions\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadWeb3Data(positions) {\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        this.setState({\r\n          console: \"Loading \" + (i + 1) + \"/\" + positions.length + \"...\"\r\n        })\r\n        await this.addService(pos, subpos);\r\n      }\r\n    }\r\n  }\r\n\r\n  async addService(pos, subpos) {\r\n    let service;\r\n    switch (subpos.type) {\r\n      case \"uniswap\":\r\n        service = new Uniswap(subpos.marketAddress, pos.base.address, pos.under.address, subpos.liq.start, subpos.apr);\r\n        break;\r\n      case \"dydx-long\":\r\n        service = new dYdXLong(subpos.under.start, subpos.quantity, subpos.borrowedBASE, subpos.boughtUNDER, subpos.openingPrice);\r\n        break;\r\n      case \"dydx-short\":\r\n        service = new dYdXShort(subpos.base.start, subpos.quantity, subpos.borrowedUNDER, subpos.boughtBASE, subpos.openingPrice);\r\n        break;\r\n      case \"option\":\r\n        service = new GammaOptions(subpos.isCall, subpos.isLong, subpos.quantity, subpos.strike, subpos.daysToExpiry, subpos.iv);\r\n        break;\r\n      case \"manual\":\r\n        service = new Manual(subpos.base.start, subpos.base.extra, subpos.under.start, subpos.under.extra);\r\n        break;\r\n      case \"uniswapv3\":\r\n        service = new UniswapV3(subpos.base.start, subpos.under.start, subpos.openingPrice, subpos.minPrice, subpos.maxPrice, subpos.feeInPercent, subpos.poolID, subpos.ignoreImpermanentLoss, subpos.apr);\r\n        break;\r\n      default:\r\n        console.log(\"There was an error in addService()\")\r\n    }\r\n\r\n    await service.getMarketData(this.state.web3, pos);\r\n    console.log(service)\r\n    // todo: dirty adding to position\r\n    subpos.service = service;\r\n  }\r\n\r\n  async prepareTableData(positions) {\r\n    let uniswapTableSet = [];\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      // time \r\n      let startDate = new Date(pos.startDate);\r\n      let daysSinceStart = (new Date() - startDate) / (1000 * 60 * 60 * 24);\r\n\r\n      // find uniswap market\r\n      let market, currentPrice;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        if(subpos.type === \"uniswap\") {\r\n          market = clone(subpos.service);\r\n          currentPrice = market.getPrice();\r\n        }\r\n      }\r\n\r\n      // if there is no uniswap market, use coingecko api\r\n      if(!market) {\r\n        market = {\r\n          priceBASEUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address),\r\n          priceUNDERUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address)\r\n        }\r\n        currentPrice = market.priceUNDERUSD / market.priceBASEUSD;\r\n      }\r\n\r\n\r\n      let totalInBASE = 0, totalOutBASE = 0;//, startBASE = 0, startUNDER = 0;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        // calculate Ins\r\n        if(!subpos.isStacked) {\r\n          totalInBASE += subpos.base.start + subpos.under.start * currentPrice;\r\n        }\r\n\r\n        // calculate Outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * currentPrice;\r\n        if(subpos.isStacked) {\r\n          // if stacked, just add profits from stacked position to extraBase\r\n          let inBASE = subpos.base.start + subpos.under.start * currentPrice;\r\n          totalOutBASE += subpos.service.getCurrentValue(currentPrice, 0)[0] + extraBASE - inBASE; \r\n        } else {\r\n          totalOutBASE += subpos.service.getCurrentValue(currentPrice, 0)[0] + extraBASE; \r\n        }\r\n      }\r\n\r\n      // today\r\n      let profitTodayToken = totalOutBASE - totalInBASE;\t\t\t\t\r\n      let profitPerMonthTodayToken = profitTodayToken * 30.4167 / daysSinceStart;\t\t\t\t\t\t\r\n      let aprToday = profitTodayToken / totalInBASE / daysSinceStart * 365 * 100;\t\r\n\r\n      let subpos = pos.subpositions[0];\r\n\r\n      // target UNDER\r\n      // default is if there is only one asset on opening\r\n      let targetPriceUNDER = currentPrice;\r\n      let targetProfitUNDER = profitTodayToken / currentPrice;\r\n      let profitPerMonthTargetUNDER = profitPerMonthTodayToken / currentPrice;\r\n      let aprTargetUNDER = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitUNDER = this.findMaxUNDER(pos);\r\n        targetPriceUNDER = priceAndProfitUNDER[0];\r\n        targetProfitUNDER = priceAndProfitUNDER[1];\r\n        let targetHodlUNDER = priceAndProfitUNDER[2];\r\n        profitPerMonthTargetUNDER = targetProfitUNDER * 30.4167 / daysSinceStart;\t\r\n        aprTargetUNDER = targetProfitUNDER / targetHodlUNDER / daysSinceStart * 365 * 100;\r\n      } \r\n\r\n      // target BASE\r\n      // default is if there is only one asset on opening\r\n      let targetPriceBASE = currentPrice;\r\n      let targetProfitBASE = profitTodayToken;\r\n      let profitPerMonthTargetBASE = profitPerMonthTodayToken;\r\n      let aprTargetBASE = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitBASE = this.findMaxBASE(pos);\r\n        targetPriceBASE = priceAndProfitBASE[0];\r\n        targetProfitBASE = priceAndProfitBASE[1];\r\n        let targetHodlBASE = priceAndProfitBASE[2];\r\n        //console.log(\"targetHodlBASE: \" + targetHodlBASE)\r\n        profitPerMonthTargetBASE = targetProfitBASE * 30.4167 / daysSinceStart;\t\r\n        aprTargetBASE = targetProfitBASE / targetHodlBASE / daysSinceStart * 365 * 100;\r\n      } \r\n            \r\n      // profits in (USD)\r\n      let profitTargetETHUSD = targetProfitUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? targetProfitBASE * market.priceBASEUSD : targetProfitBASE / targetPriceBASE * market.priceUNDERUSD;\r\n      let profitPerMonthTargetETHUSD = profitPerMonthTargetUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitPerMonthTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? profitPerMonthTargetBASE * market.priceBASEUSD : profitPerMonthTargetBASE / targetPriceBASE * market.priceUNDERUSD;\r\n\r\n      pos.maxProfitTargetUSD = Math.max(profitTargetETHUSD, profitTargetTokenUSD);\r\n      pos.maxProfitPerMonthTargetUSD = Math.max(profitPerMonthTargetTokenUSD, profitPerMonthTargetETHUSD);\r\n      \r\n      // prepare dataset for table\r\n      uniswapTableSet.push({\r\n        id: pos,\r\n        position: [pos.name, pos.description, pos.address], \r\n        sizedays: {\r\n          size: [totalOutBASE * market.priceBASEUSD, \"USD\"],\r\n          days: [daysSinceStart.toFixed(0), \"days\"],\r\n        },\r\n        price: {\r\n          lower: [targetPriceUNDER, pos.base.symbol],\r\n          current: [currentPrice, pos.base.symbol],\r\n          higher: [targetPriceBASE, pos.base.symbol]\r\n        },\r\n        totalprofit: {\r\n          lower: [targetProfitUNDER, pos.under.symbol, profitTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitTodayToken, \"USD\", market.priceBASEUSD * profitTodayToken],\r\n          higher: [targetProfitBASE, pos.base.symbol, profitTargetTokenUSD]\r\n        },\r\n        monthlyprofit: {\r\n          lower: [profitPerMonthTargetUNDER, pos.under.symbol, profitPerMonthTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitPerMonthTodayToken, \"USD\", market.priceBASEUSD * profitPerMonthTodayToken],\r\n          higher: [profitPerMonthTargetBASE, pos.base.symbol, profitPerMonthTargetTokenUSD]\r\n        },\r\n        apr: {\r\n          lower: [aprTargetUNDER, \"%\"],\r\n          current: [aprToday, \"%\"],\r\n          higher: [aprTargetBASE, \"%\"]\r\n        },\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isChartDialogShown: false, // todo: maybe enable later\r\n                  selectedPosition: positions[i]\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fas fa-chart-area\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                //this.props.setEditedTransaction(this.state.data[key].id);\r\n                //this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  //removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n    return uniswapTableSet;\r\n  }\r\n\r\n  findMaxBASE(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceBASE = -100000000000;\r\n    let maxProfitBASE = -100000000000;\r\n    let maxTotalHodlBASE = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutBASE = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        if(!subpos.isStacked) {\r\n          startBASE += subpos.base.start;\r\n          startUNDER += subpos.under.start;\r\n        }\r\n\r\n        // get outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        if(subpos.isStacked) {\r\n          // if stacked, just add profits from stacked position to totalOutBASE\r\n          let inBASE = subpos.base.start + subpos.under.start * i;\r\n          totalOutBASE += subpos.service.getCurrentValue(i, 0)[0] + extraBASE - inBASE; \r\n        } else {\r\n          totalOutBASE += subpos.service.getCurrentValue(i, 0)[0] + extraBASE; \r\n        }\r\n\r\n        // get outs\r\n        //let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        //totalOutBASE += subpos.service.getCurrentValue(i, 0)[0] + extraBASE;\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalanced = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" UNDER + \" + debalanced[1].toFixed(4) + \" BASE\");\r\n      if(maxBalanceBASE < debalanced[1]) {\r\n        maxBalanceBASE = debalanced[1];\r\n        maxProfitBASE = debalanced[1] - startBASE;\r\n        maxPrice = i;\r\n        maxTotalHodlBASE = startBASE + startUNDER * maxPrice;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitBASE, maxTotalHodlBASE];\r\n  }\r\n\r\n  findMaxUNDER(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceUNDER = -100000000000;\r\n    let maxProfitUNDER = -100000000000;\r\n    let maxTotalHodlUNDER = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        if(!subpos.isStacked) {\r\n          startBASE += subpos.base.start;\r\n          startUNDER += subpos.under.start;\r\n        }\r\n\r\n        // get outs\r\n        let extraUNDER = subpos.under.extra + subpos.base.extra / i;\r\n        if(subpos.isStacked) {\r\n          // if stacked, just add profits from stacked position to totalOutUNDER\r\n          let inUNDER = subpos.base.start / i + subpos.under.start;\r\n          totalOutUNDER += subpos.service.getCurrentValue(i, 0)[1] + extraUNDER - inUNDER; \r\n        } else {\r\n          totalOutUNDER += subpos.service.getCurrentValue(i, 0)[1] + extraUNDER; \r\n        }\r\n      }\r\n\r\n      // debalance for max UNDER\r\n      let debalanced = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" ETH + \" + debalanced[1].toFixed(4) + \" COMP\");\r\n      if(maxBalanceUNDER < debalanced[0]) {\r\n        maxBalanceUNDER = debalanced[0];\r\n        maxProfitUNDER = debalanced[0] - startUNDER;\r\n        maxPrice = i;\r\n        maxTotalHodlUNDER = startBASE / maxPrice + startUNDER;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitUNDER, maxTotalHodlUNDER];\r\n  }\r\n\r\n  getTotalProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitTargetUSD;\r\n      } \r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getMonthlyProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitPerMonthTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitPerMonthTargetUSD;\r\n      }\r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getSumFooter(rows, columnName, subName, index) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row[columnName][subName][index];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  displayDescription = (description) => {\r\n    return (description ? description.text : null)\r\n  };\r\n\r\n  displayLinks = (description) => {\r\n    if(description) {\r\n      return (\r\n        description.links.map((link, key) => {\r\n          return (\r\n            <span key={key}>\r\n              <a href={link.link}>{link.anchor}</a>{\" \"}\r\n            </span>\r\n          );\r\n        })\r\n      )\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { \r\n        Header: \"Position\", accessor: \"position\", maxWidth: 550, style: { 'whiteSpace': 'unset' },\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Cell: row => {\r\n          return (\r\n            <span style={{ float: \"left\" }}>\r\n              <b>{row.value[0]}</b><br></br>\r\n              {this.displayDescription(row.value[1])}<br></br>\r\n              {this.displayLinks(row.value[1])}\r\n              <a href={\"https://zapper.fi/account/\" + row.value[2]}>Zap</a>\r\n            </span>\r\n          )\r\n        },\r\n      },\r\n      { \r\n        Header: \"Size/Days\", accessor: \"sizedays\", maxWidth: 120, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {\"$\" + formatUtils.formatNumber(row.value.size[0], 0)}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.days[0], 0) + \" \" + row.value.days[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"sizedays\", \"size\", 0), 0) + \" \" + rows.data[0][\"sizedays\"][\"size\"][1]}\r\n            </strong>\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }\r\n      },\r\n      { \r\n        Header: \"Price\", accessor: \"price\", maxWidth: 130, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \" \" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \" \" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \" \" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              @current\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              @target\r\n              </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Total Profit\", accessor: \"totalprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"totalprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getTotalProfitSum(), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Monthly Profit\", accessor: \"monthlyprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum(), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"APR\", accessor: \"apr\", maxWidth: 70, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \"\" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \"\" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \"\" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b - a; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0) * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum() * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false \r\n      }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  hideChartDialog() {\r\n    this.setState({\r\n      isChartDialogShown: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      123 help\r\n    </Tooltip>;\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my opened positions?\"\r\n                category={this.state.console}\r\n                rightSection={\r\n                  <span>\r\n                    <Button\r\n                      // was like this for without color\r\n                      //simple\r\n                      bsStyle=\"info\"\r\n                      fill\r\n                      special   \r\n                      onClick={() => this.props.showAddTradeDialog()}\r\n                    >\r\n                      <i className={\"fa fa-plus\"} /> Add trade\r\n                    </Button>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                      <Button\r\n                        bsStyle=\"default\"\r\n                        special // for share button: fa fa-share-alt\r\n                        //speciallarge \r\n                        //pullRight\r\n                        simple\r\n                      >\r\n                        <i className={\"fa fa-question-circle\"} /> Help \r\n                      </Button> \r\n                    </OverlayTrigger>\r\n                  </span>\r\n                }\r\n                content={this.state.data ? \r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                : null}\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <PositionChartCard \r\n                selectedPosition={this.state.selectedPosition}\r\n                userModel={this.props.userModel}\r\n                resModel={this.props.resModel}\r\n                addService={this.addService}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionsView;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update funding\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      isDeposit: props.editedTransaction.isBuy, \r\n      amount: props.editedTransaction.baseAmount.toString(),\r\n      amountError: null,\r\n      currency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      currencyError: null,\r\n      currencies: props.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    // track ga\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/editFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        isDeposit: nextProps.editedTransaction.isBuy, \r\n        amount: nextProps.editedTransaction.baseAmount.toString(),\r\n        amountError: null,\r\n        currency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        currencyError: null,\r\n        currencies: nextProps.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editFunding');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default EditFundingDialog;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport EditFundingDialog from \"./dialogs/EditFundingDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass FundingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n  \r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if(!tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let name = tx.pair.base.name;\r\n        let type = tx.isBuy ? \"Deposit\" : \"Withdrawal\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        tableData.push([tx, date, name, type, comment, volume]);\r\n      }\r\n    }\r\n\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        name: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        actions: (\r\n          // we've added some custom button actions\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditFundingDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, width: 160,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Name\", accessor: \"name\", minWidth: 120, width: 200,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", minWidth: 95, width: 120,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", minWidth: 100, width: 300, maxWidth: 500,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", minWidth: 120, width: 150, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }\r\n    },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 80, maxWidth: 80, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let fundingCount = this.props.userModel.transactions.length - currentPortfolio.tradeCount;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editFundingDialog = (\r\n      <EditFundingDialog\r\n        isDialogShown={this.props.isEditFundingDialogShown}\r\n        hideDialog={this.props.hideEditFundingDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Funding panel displays all your portfolio fundings: deposits and withdrawals. Deposit is when you add currency to your portfolio, and withdrawal is when you remove it. <br/><br/> \r\n      To add a funding, click on the Add funding button. To edit or remove a funding, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      Fundings can be sorted, and filtered in multiple ways. For example, to show all USD withdrawals in 2018, enter United States Dollar in the NAME filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent deposits and withdrawals?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special                   \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add funding\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                  </div>\r\n                }\r\n                category={fundingCount + \" funding\" + (fundingCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}                    \r\n                    noDataText={this.getNoDataText('deposits or withdrawals', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n              {this.props.isEditFundingDialogShown ? editFundingDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundingView;\r\n","import React, { Component } from \"react\";\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport Card from \"components/Card/Card.jsx\";\r\n\r\nclass PortfolioPie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartOptions: this.getPieOptions(props)\r\n    };\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n        chartOptions: this.getPieOptions(nextProps)\r\n    });\r\n  }\r\n\r\n  getPieOptions(props) {\r\n    let currentPortfolio = props.portfolio;\r\n\r\n    // prepare portfolio pie chart\r\n    const data = [];\r\n    for (let currency of currentPortfolio.balances.keys()) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd);\r\n      data.push({name: currency.code, y: currencyBalance});\r\n    }\r\n\r\n    const pieOptions = {\r\n      chart: {\r\n        type: \"pie\",\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      series: [{\r\n        name: \"Allocation\",\r\n        data: data\r\n      }],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return pieOptions;\r\n  }\r\n   render() {\r\n     let tradeCount = this.props.portfolio.tradeCount;\r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n        content={<HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={this.state.chartOptions}\r\n        />}\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioPie;\r\n","import PortfolioView from \"views/PortfolioView.jsx\";\r\nimport TradesView from \"views/TradesView.jsx\";\r\nimport PositionsView from \"views/PositionsView.jsx\";\r\nimport FundingView from \"views/FundingView.jsx\";\r\nimport PerformanceView from \"views/PerformanceView.jsx\";\r\n\r\nvar dashboardRoutes = [\r\n  {\r\n    path: \"/portfolio\",\r\n    name: \"Portfolio\",\r\n    icon: \"fa fa-pie-chart\",\r\n    component: PortfolioView\r\n  }, {\r\n    path: \"/trades\",\r\n    name: \"Trades\",\r\n    icon: \"fa fa-retweet\",\r\n    component: TradesView\r\n  }, {\r\n    path: \"/positions\",\r\n    name: \"Positions\",\r\n    icon: \"fa fa-piggy-bank\",\r\n    component: PositionsView\r\n  }, {\r\n    path: \"/funding\",\r\n    name: \"Funding\",\r\n    icon: \"fa fa-money\",\r\n    component: FundingView\r\n  }, {\r\n    path: \"/performance\",\r\n    name: \"Performance\",\r\n    icon: \"fa fa-line-chart\",//fa fa-calculator, fa fa-area-chart\r\n    component: PerformanceView\r\n  }, {\r\n    collapse: true,\r\n    path: \"/manage\",\r\n    name: \"Manage\",\r\n    state: \"openManage\",\r\n    icon: \"fa fa-folder\",\r\n    views: [\r\n      {\r\n        path: \"/placeholder\",\r\n        name: \"Placeholder\",\r\n        mini: \"P\",\r\n        component: null\r\n      }\r\n    ]\r\n  },\r\n  /*{\r\n    path: \"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\",\r\n    name: \"Feedback\",\r\n    icon: \"fa fa-comments\",\r\n    component: null\r\n  },*/\r\n  { redirect: true, path: \"/\", pathTo: \"/portfolio\", name: \"Portfolio\" }\r\n];\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Highstock from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport PortfolioPie from './common/PortfolioPie'\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nclass PerformanceView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rangeClickHandler = this.rangeClickHandler.bind(this);\r\n\r\n    let daysSince = props.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(props, daysSince);\r\n    this.state = {\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(props, portfolios.best, portfolios.current, portfolios.worst)\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    rangeSelectorModel.days = this.props.userModel.getDaysSinceFirstTx();;\r\n    rangeSelectorModel.userFriendlyText = \"All time\";\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    let daysSince = nextProps.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(nextProps, daysSince); \r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(nextProps, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  rangeClickHandler() {\r\n    let portfolios = this.getBestCurrentWorstPortfolio(this.props, rangeSelectorModel.days);\r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(this.props, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  getBestCurrentWorstPortfolio(props, days) {\r\n\r\n    // TODO: what's this\r\n    let since = new Date(2018,4,28);\r\n    since.setHours(2,0,0,0);\r\n    //console.log(since)\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null && \r\n      props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0] != null) {\r\n      since = props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0].time;\r\n      //console.log(since)\r\n    }\r\n    //console.log(since)\r\n    let portfoliosSince = props.userModel.getPortfoliosSince(since);\r\n    //console.log(portfoliosSince);\r\n\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let bestPortfolio = currentPortfolio, worstPortfolio = currentPortfolio;\r\n    for(let p of portfoliosSince) {\r\n      let totalBalance = p.getTotalBalance(props.resModel, props.resModel.usd);\r\n      // best \r\n      if(totalBalance >= bestPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        bestPortfolio = p;\r\n      }\r\n      // worst\r\n      if(totalBalance <= worstPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        worstPortfolio = p;\r\n      }\r\n    }\r\n\r\n    // TODO: add future fundings here\r\n\r\n    return {\r\n      best: bestPortfolio, \r\n      current: currentPortfolio,\r\n      worst: worstPortfolio\r\n    };\r\n  }\r\n\r\n  getPortfolioSeries(props, portfolio) {\r\n    const serie = [];\r\n    // take usd tickers as template for dates\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null) {\r\n      for(let t of props.resModel.dailyTickers.get(props.resModel.usd)) {\r\n        let totalPastBalance = portfolio.getPastTotalBalance(props.resModel, t.time, props.resModel.usd);\r\n        serie.push([t.time.getTime(), totalPastBalance]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {     \r\n        serie.slice(-1)[0][1] = portfolio.getTotalBalance(props.resModel, props.resModel.usd)\r\n      }\r\n    }\r\n\r\n    return serie;\r\n  }\r\n\r\n  getPerformanceChartOptions(props, best, current, worst) {   \r\n    let series = [];\r\n    series.push({name: \"Best portfolio\", data: this.getPortfolioSeries(props, best)});\r\n    series.push({name: \"Current portfolio\", data: this.getPortfolioSeries(props, current)});    \r\n    series.push({name: \"Worst portfolio\", data: this.getPortfolioSeries(props, worst)});\r\n\r\n    var externalCaller = this.rangeClickHandler;\r\n    for(let i = 0; i < rangeSelectorModel.buttons.length; i++) {\r\n      rangeSelectorModel.buttons[i].events = {\r\n        click: function() {\r\n          rangeSelectorModel.days = rangeSelectorModel.buttons[i].days;\r\n          rangeSelectorModel.userFriendlyText = rangeSelectorModel.buttons[i].userFriendlyText;\r\n          externalCaller.call();\r\n        }\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      title: {\r\n        text: null\r\n      },\r\n      rangeSelector: rangeSelectorModel,\r\n      series: series, \r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      },\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Performance panel displays a chart of best, worst and current portfolio in a selected time period. Click on a zoom buttons to select time period. <br/><br/> \r\n      Chart is useful to evaluate your trading performance in selected time period. The closer your current is to the best portfolio, the better. <br/><br/> \r\n      Current portfolio is portfolio with all your trades, portfolio you have right now. <br/><br/> \r\n      Best/worst portfolio is portfolio with highest/lowest value in USD if you'd stopped trading altogether at some moment in selected time period. \r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"How does my current portfolio compare to past portfolios?\"\r\n                category={rangeSelectorModel.userFriendlyText != null ? rangeSelectorModel.userFriendlyText : \"All time\" }\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={<HighchartsReact\r\n                  highcharts={Highstock}\r\n                  constructorType={'stockChart'}\r\n                  options={this.state.performanceChartOptions}\r\n                />}\r\n                /*stats={\r\n                  <div>\r\n                    <i className=\"fa fa-history\" /> Updated 3 minutes ago\r\n                  </div>\r\n                }*/\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4}>\r\n            <PortfolioPie\r\n                title=\"Best portfolio\"\r\n                portfolio={this.state.bestPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Current portfolio\"\r\n                portfolio={this.state.currentPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Worst portfolio\"\r\n                portfolio={this.state.worstPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PerformanceView;\r\n","// @flow\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Portal } from 'react-portal';\r\n\r\nclass InputFiles extends React.Component<{\r\n  children: React.Node,\r\n  onChange: (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n  accept?: string,\r\n  style?: Object,\r\n}> {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onChange: PropTypes.func, // (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n    accept: PropTypes.string,\r\n    style: PropTypes.object,\r\n  };\r\n  static defaultProps = {\r\n    accept: 'image/*',\r\n  };\r\n  onInputRef = (node: any): void => {\r\n    this.input = node;\r\n  };\r\n  onClick = (e: SyntheticEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (this.input) this.input.click();\r\n  };\r\n  onChange = (e: Object) => {\r\n    this.props.onChange(e.target.files, e);\r\n    e.target.value=null;\r\n  };\r\n  input: ?React.ElementRef<'input'>;\r\n  render() {\r\n    const { children, accept, style } = this.props;\r\n    const { onInputRef, onClick, onChange } = this;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          onClick={onClick}\r\n          onKeyPress={onClick}\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n          style={{ display: 'inline-block', ...style }}\r\n        >\r\n          {children}\r\n        </div>\r\n\r\n        <Portal>\r\n          <input\r\n            ref={onInputRef}\r\n            type=\"file\"\r\n            accept={accept}\r\n            onChange={onChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFiles;","import React, { Component } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// this is used to create scrollbars on windows devices like the ones from apple devices\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// backgroundImage for Sidebar\r\nimport image from \"assets/img/full-screen-image-3.jpg\";\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n//import InputFiles from 'react-input-files';\r\nimport InputFiles from './../Input/InputFiles.js'\r\n\r\n//const bgImage = { backgroundImage: \"url(\" + image + \")\" };\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onOpenClick = this.onOpenClick.bind(this);\r\n    this.state = {\r\n      isWindows: navigator.platform.indexOf(\"Win\") > -1 ? true : false,\r\n      width: window.innerWidth\r\n    };\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  // if the windows width changes CSS has to make some changes\r\n  // this functions tell react what width is the window\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    // add event listener for windows resize\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebarWrapper, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      setTimeout(() => {\r\n        ps.update();\r\n      }, 350);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n\r\n  onOpenClick() {\r\n    document.getElementById('input-files').click();     \r\n    return false;\r\n  }\r\n\r\n  getChangeCount() {\r\n    return this.props.changeCount > 0 ? \" (\" + this.props.changeCount + \")\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\" data-color=\"black\" data-image={image}>\r\n        {/*<div className=\"sidebar-background\" style={bgImage} />*/}\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-mini\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              <i className=\"fa fa-book\"></i>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            ForkFolio\r\n          </a>\r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebarWrapper\">\r\n          <ul className=\"nav\">\r\n            {/* If we are on responsive, we want both links from navbar and sidebar\r\n                            to appear in sidebar, so we render here HeaderLinks */}\r\n            {/*this.state.width <= 992 ? <HeaderLinks {...this.props} /> : null*/}\r\n            {/*\r\n                            here we render the links in the sidebar\r\n                            if the link is simple, we make a simple link, if not,\r\n                            we have to create a collapsible group,\r\n                            with the speciffic parent button and with it's children which are the links\r\n                        */}\r\n            {dashboardRoutes.map((prop, key) => {\r\n              var st = {};\r\n              st[prop[\"state\"]] = !this.state[prop.state];\r\n              if (prop.collapse) {\r\n                return (\r\n                  <li className={this.activeRoute(prop.path)} key={key}>\r\n                    <a onClick={() => this.setState(st)}>\r\n                      <i className={prop.icon} />\r\n                      <p>\r\n                        {prop.name + (this.state[prop.state] ? \"\" : this.getChangeCount())}\r\n                        <b\r\n                          className={\r\n                            this.state[prop.state]\r\n                              ? \"caret rotate-180\"\r\n                              : \"caret\"\r\n                          }\r\n                        />\r\n                      </p>\r\n                    </a>\r\n                    <Collapse in={this.state[prop.state]}>\r\n                      <ul className=\"nav\">\r\n                        <li className={\"\"} key={5}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.newPortfolio()}>\r\n                              <i className={\"fa fa-file-text-o\"} />\r\n                              <p>New</p>\r\n                            </a>\r\n                        </li>                      \r\n                        <li className={\"\"} key={6}>\r\n                          <a className=\"nav-link\" onClick={() => this.onOpenClick()}>\r\n                              <i className={\"fa fa-folder-open\"} />\r\n                              <p>Open</p>\r\n                            </a>\r\n                        </li>\r\n                        <li className={\"\"} key={7}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.downloadPortfolio()}>\r\n                            <i className={\"fa fa-floppy-o\"} />\r\n                            <p>Save{this.getChangeCount()}</p>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </Collapse>\r\n                    <InputFiles \r\n                      onChange={this.props.uploadPortfolioFromFile}\r\n                      accept=\"application/json\">\r\n                      <a id=\"input-files\">\r\n                      </a>\r\n                    </InputFiles>\r\n                  </li>\r\n                );\r\n              } else {\r\n                if (prop.redirect) {\r\n                  return null;\r\n                } else {\r\n                  return (\r\n                    <li className={this.activeRoute(prop.path)} key={key}>\r\n                      <NavLink\r\n                        to={prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n            <li className={\"\"} key={8}>\r\n              <a className=\"nav-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className={\"fa fa-comments\"} />\r\n                <p>Feedback</p>\r\n              </a>    \r\n            </li>\r\n            <li className={\"\"} key={9}>\r\n              <a href=\"/#\" className=\"nav-link\" onClick={() => this.props.showHelpPanel()}>\r\n                <i className={\"fa fa-question-circle\"} />\r\n                <p>Help</p>\r\n              </a>    \r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n} from \"react-bootstrap\";\r\nimport { formatUtils } from './../../utils/FormatUtils';\r\n\r\nclass HeaderLinks extends Component {\r\n\r\n  getTotalBalance() {\r\n    if(this.props.userModel != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    } \r\n\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav pullRight>\r\n          <NavItem eventKey={3} href=\"#/portfolio\">\r\n            <p>{formatUtils.toShortFormat(this.getTotalBalance())}</p>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\n// links that appear in navbar - they are separated from this component (navbar) so that we can redner them on responsive in sidebar as well\r\n\r\nimport HeaderLinks from \"./HeaderLinks.jsx\";\r\n\r\n// we import here the routes for dashboard pages (links that appear in sidebar) to set navbar's name\r\n\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMinimizeSidebar = this.handleMinimizeSidebar.bind(this);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n  }\r\n  makeBrand() {\r\n    var name;\r\n    dashboardRoutes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n  // function that makes the sidebar from normal to mini and vice-versa\r\n  handleMinimizeSidebar() {\r\n    document.body.classList.toggle(\"sidebar-mini\");\r\n  }\r\n  // function for responsive that hides/shows the sidebar\r\n  mobileSidebarToggle(e) {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <div className=\"navbar-minimize\">\r\n          <button\r\n            id=\"minimizeSidebar\"\r\n            className=\"btn btn-default btn-fill btn-round btn-icon\"\r\n            onClick={this.handleMinimizeSidebar}\r\n          >\r\n            <i className=\"fa fa-ellipsis-v visible-on-sidebar-regular\" />\r\n            <i className=\"fa fa-navicon visible-on-sidebar-mini\" />\r\n          </button>\r\n        </div>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            {/* Here we create navbar brand, based on route name */}\r\n            {this.makeBrand()}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n\r\n        {/* Here we import the links that appear in navbar */}\r\n        {window.innerWidth > 992 ? (\r\n          <HeaderLinks \r\n            {...this.props}\r\n          />\r\n        ) : null}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nclass Footer extends Component {\r\n  /*\r\n  <li>\r\n    <a href=\"https://facebook.com/link-here\">\r\n      <i className=\"fa fa-facebook\"></i> Facebook \r\n    </a>\r\n  </li>\r\n  <li>\r\n    <a href=\"https://googleplus.com/link-here\">\r\n      <i className=\"fa fa-google-plus\"></i> Google Plus \r\n    </a>\r\n  </li>\r\n  */\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={\r\n          \"footer\" +\r\n          (this.props.transparent !== undefined ? \" footer-transparent\" : \"\")\r\n        }\r\n      >\r\n        <div\r\n          className={\r\n            \"container\" + (this.props.fluid !== undefined ? \"-fluid\" : \"\")\r\n          }\r\n        >\r\n          <nav className=\"pull-left\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://twitter.com/forkfol_io\">\r\n                  <i className=\"fa fa-twitter\"></i> Twitter \r\n                </a>\r\n              </li>             \r\n            </ul>\r\n          </nav>\r\n          <p className=\"copyright pull-right\">\r\n            Copyright &copy; {1900 + new Date().getYear()}{\" \"} ForkFol.io {packageJson.version}\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","/*jshint esversion: 6 */\r\n\r\nexport default class Ticker {\r\n  constructor(pair, price, time, percentChange24h) {\r\n    this.pair = pair;\r\n    this.price = price;\r\n    this.time = time;\r\n    this.percentChange24h = percentChange24h;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class Currency {\r\n  constructor(code, name, rank, isFiat = false) {\r\n    this.code = code;\r\n    this.name = name;\r\n    this.rank = rank;\r\n    this.isFiat = isFiat;\r\n    this.meta = null;\r\n  }\r\n}\r\n","function getRestURL() {\r\n    //console.log(window.location.host)\r\n    if (window.location.host === 'localhost:3000') {\r\n        //return 'http://localhost:8080/'\r\n        // bypass if server is not running on localhost\r\n        return 'https://forkfol.io/dummydata/';\r\n    } \r\n\r\n    return 'https://rest.forkfol.io/rest/';\r\n}\r\n\r\nfunction isLocalhost() {\r\n    console.log(\"Is localhost: \" + (window.location.host === 'localhost:3000'))\r\n    return window.location.host === 'localhost:3000';\r\n}\r\n\r\nexport const config = {\r\n    restURL: getRestURL(),\r\n    isLocalhost: isLocalhost()\r\n}","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col, Modal} from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass ConfirmNewPortfolioDialog extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm new portfolio</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                  You have {this.props.changeCount} unsaved change{this.props.changeCount > 1 ? \"s\" : \"\"} in your current portfolio. If you create a\r\n\t\t              new portfolio, all unsaved changes will be lost.\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    Are you sure you want to create a new portfolio?\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.createNew()}\r\n                  >\r\n                    Yes\r\n                  </Button>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.saveCurrentAndCreateNew()}\r\n                  >\r\n                    Save current and create new\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmNewPortfolioDialog;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nclass DemoCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={12} md={12}>\r\n                  <p><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> You're seeing a live demo, showcasing features on a sample portfolio. <a href=\"https://forkfol.io/app/\">Click here to create your portfolio now <i className=\"fa fa-check\" aria-hidden=\"true\"></i></a></p>            \r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DemoCard;\r\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\r\n\r\nvar indexRoutes = [\r\n  { path: \"/\", name: \"Home\", component: Dashboard }\r\n];\r\n\r\nexport default indexRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// react component that creates notifications (like some alerts with messages)\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\nimport Header from \"components/Header/Header.jsx\";\r\nimport Footer from \"components/Footer/Footer.jsx\";\r\nimport Promise from \"bluebird\";\r\n// dinamically create dashboard routes\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\n// style for notifications\r\nimport { style } from \"variables/Variables.jsx\";\r\nimport { userModel, resModel } from \"../../model/init/ResModelInit.js\";\r\n\r\nimport Ticker from \"../../model/Ticker\";\r\nimport demofolio from '../../model/init/demofolio.json';\r\nimport Currency from \"../../model/Currency\";\r\nimport CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport UserModel from \"../../model/UserModel\";\r\nimport { config } from \"../../config/Config.js\";\r\nimport FileSaver from 'file-saver';\r\nimport cookie from 'react-cookies';\r\nimport ConfirmNewPortfolioDialog from \"../../views/dialogs/ConfirmNewPortfolioDialog\";\r\nimport DemoCard from \"../../views/common/DemoCard\";\r\nimport ReactGA from 'react-ga';\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNotificationClick = this.handleNotificationClick.bind(this);\r\n    \r\n    this.showHelpPanel = this.showHelpPanel.bind(this);\r\n    this.hideHelpPanel = this.hideHelpPanel.bind(this);\r\n\r\n    this.showAddTradeDialog = this.showAddTradeDialog.bind(this);\r\n    this.hideAddTradeDialog = this.hideAddTradeDialog.bind(this);\r\n    this.showAddFundingDialog = this.showAddFundingDialog.bind(this);\r\n    this.hideAddFundingDialog = this.hideAddFundingDialog.bind(this);\r\n\r\n    this.showEditTradeDialog = this.showEditTradeDialog.bind(this);\r\n    this.hideEditTradeDialog = this.hideEditTradeDialog.bind(this);\r\n    this.showEditFundingDialog = this.showEditFundingDialog.bind(this);\r\n    this.hideEditFundingDialog = this.hideEditFundingDialog.bind(this);\r\n\r\n    this.hideConfirmNewPortfolioDialog = this.hideConfirmNewPortfolioDialog.bind(this);\r\n\r\n    this.addTransaction = this.addTransaction.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.updateTransaction = this.updateTransaction.bind(this);\r\n\r\n    this.setEditedTransaction = this.setEditedTransaction.bind(this);\r\n\r\n    this.fetchRecentPrices = this.fetchRecentPrices.bind(this);\r\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\r\n    this.getCurrenciesToFetch = this.getCurrenciesToFetch.bind(this);\r\n    this.fetchAllAndRender = this.fetchAllAndRender.bind(this);\r\n    this.fetchHistoday = this.fetchHistoday.bind(this);\r\n    this.fetchMeta = this.fetchMeta.bind(this);\r\n    this.isDemo = this.isDemo.bind(this);\r\n\r\n    this.updateUserModel = this.updateUserModel.bind(this);\r\n\r\n    this.newPortfolio = this.newPortfolio.bind(this);\r\n    this.openPortfolio = this.openPortfolio.bind(this);\r\n    this.savePortfolio = this.savePortfolio.bind(this);\r\n    this.saveCurrentAndCreateNewPortfolio = this.saveCurrentAndCreateNewPortfolio.bind(this);\r\n\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      isHelpPanelShown: false,\r\n      isAddTradeDialogShown: false,\r\n      isAddFundingDialogShown: false,\r\n      isEditTradeDialogShown: false,\r\n      isEditFundingDialogShown: false,\r\n      isConfirmNewPortfolioDialogShown: false,\r\n      userModel: userModel,\r\n      resModel: resModel,\r\n      editedTransaction: null,\r\n      changeCount: 0\r\n    };\r\n  }\r\n  \r\n  toTokensString(currencies) {\r\n    let str = \"\";\r\n    for(let c of currencies) {\r\n      str += (c.code + \",\");\r\n    }\r\n  \r\n    return str.slice(0,-1);\r\n  }\r\n\r\n  isDemo() {\r\n    return new Promise((accept, reject) => {\r\n      fetch('appversion.json').then(res => res.json()).then((out) => {\r\n        accept(out.isDemo);\r\n        return;\r\n      }).catch(err => { \r\n        reject(err);\r\n        return;  \r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchRecentPrices() {\r\n    let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n    if(currencies.length > 0) {\r\n      fetch(config.restURL + 'recent?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let tickers = JSON.parse(body);\r\n        let count = 0;\r\n        for (let i = 0; i < tickers.length; i++) {\r\n          let newPrice = parseFloat(tickers[i].l);\r\n          //console.log(\"--------\")\r\n          //console.log(\"Received token: \");\r\n          //console.log(tickers[i])\r\n          //console.log(\"Existing ticker:\");\r\n          //console.log(resModel.recentTickers.get(tickers[i].c))\r\n          // remove shitcoin duplicates\r\n          if(newPrice > 0.001) {\r\n            // if ticker doesn't exist or is updated\r\n            if(resModel.recentTickers.get(tickers[i].c) == null ||\r\n              newPrice !== resModel.recentTickers.get(tickers[i].c).price) {\r\n              let pair = new CurrencyPair(tickers[i].c, resModel.usd);\r\n              resModel.recentTickers.set(tickers[i].c, new Ticker(pair, newPrice, new Date(parseInt(tickers[i].t, 10) * 1000), tickers[i].p))\r\n              count++;\r\n            }\r\n          }\r\n        }\r\n        // if there is update, render\r\n        if(count > 0) {\r\n          console.log(\"Recent prices updated (\" + count + \" tickers).\")\r\n          let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n          this.setState({\r\n            userModel: newModel,\r\n            resModel: this.state.resModel.clone()\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // fetches a list of all curencies, crypto and fiat, and stores them in resModel\r\n  fetchCurrencies() {\r\n    return new Promise((accept, reject) => {\r\n      let url = config.restURL + (config.isLocalhost ? 'currencies.json' : 'currencies');\r\n      console.log(\"Fetching: \" + url)\r\n      fetch(url).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        for (let c of JSON.parse(body)) {\r\n          let currency = new Currency(c.c, c.n, c.r, c.f);\r\n          resModel.dailyTickers.set(currency, []);\r\n          if(currency.code === 'USD') {\r\n            resModel.usd = currency;\r\n          }\r\n        }\r\n        accept();\r\n        return;\r\n      })\r\n    });\r\n  }\r\n  \r\n  getCurrenciesToFetch(userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const k of currentPortfolio.balances.keys()) {\r\n      currencies.push(k);\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n  \r\n  fetchAllAndRender(currencies, daysSince) {\r\n\r\n    // fetch meta first for loading speed\r\n    this.fetchMeta().then(() => {\r\n      // prepare all promises\r\n      const promises = [];\r\n      for(let currency of currencies) {\r\n        promises.push(this.fetchHistoday(currency, daysSince));\r\n      }\r\n    \r\n      // resolve, then render\r\n      Promise.all(promises).then(() => {\r\n        console.log(\"History prices updated (\" + promises.length + \" series).\");\r\n\r\n        // re-render\r\n        let newResModel = this.state.resModel.clone();\r\n        let newUserModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, newResModel);\r\n        this.setState({\r\n          userModel: newUserModel,     \r\n          resModel: newResModel\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchHistoday(currency, days) {\r\n    return new Promise((accept, reject) => {\r\n      fetch(config.restURL + 'histoday?range=' + days + '&tokens=' + currency.code)\r\n      .then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let repacked = [];\r\n        for (let t of JSON.parse(body)) {\r\n          let pair = new CurrencyPair(currency, resModel.usd);\r\n          repacked.push(new Ticker(pair, t.l, new Date(parseInt(t.t, 10) * 1000)));\r\n        }\r\n        resModel.dailyTickers.set(currency, repacked);\r\n        accept();\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchMeta() {\r\n    return new Promise((accept, reject) => {\r\n      let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n      if(currencies.length > 0) {\r\n        fetch(config.restURL + 'meta?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n          return response.text()\r\n        }).then((body) => {\r\n          let tickers = JSON.parse(body);\r\n          for (let i = 0; i < tickers.length; i++) {\r\n            let currency = resModel.findCurrencyByCode(tickers[i].c);\r\n            currency.meta = JSON.parse(tickers[i].m);\r\n          }\r\n          accept();\r\n          return;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ \r\n      _notificationSystem: this.refs.notificationSystem,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.action === \"PUSH\" &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    // start fetching prices based on user model\r\n    this.fetchCurrencies().then(() => {\r\n      this.isDemo().then((isDemo) => {\r\n        let showHelpPanel = false;\r\n        let newModel;\r\n        if(!isDemo) {\r\n          // check if cookie is not set, then it's the first load, and set it always\r\n          showHelpPanel = cookie.load('showGettingStarted') === undefined;\r\n          cookie.save('showGettingStarted', \"1\", { path: '/', maxAge: 31536000});\r\n\r\n          // if app, set model from local storage if any, or empty\r\n          let portfolioJson = localStorage.getItem('portfolio01');\r\n          if(portfolioJson != null && portfolioJson !== '') {\r\n            let portfolioObject = JSON.parse(portfolioJson);\r\n            console.log('Loaded portfolio from local storage.')\r\n            newModel = this.updateUserModel(portfolioObject, portfolioObject.changeCount);\r\n          } else {\r\n            newModel = this.updateUserModel({}, 0);\r\n          }\r\n        } else {\r\n          // if demo, set model from demofolio file\r\n          console.log('Loaded default portfolio.')\r\n          newModel = this.updateUserModel(demofolio, 0);\r\n        }\r\n\r\n        this.setState({\r\n          isHelpPanelShown: showHelpPanel,\r\n          isDemo: isDemo,\r\n        });\r\n\r\n        if(newModel.transactions[0] != null) {\r\n          let daysSince = newModel.getDaysSinceFirstTx();\r\n          this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), daysSince + 2);\r\n        }\r\n\r\n        // start checking recent prices periodically\r\n        this.fetchRecentPrices();\r\n        setInterval(this.fetchRecentPrices, 60000);\r\n      });\r\n    });\r\n    \r\n\r\n    if (document.documentElement.className.indexOf(\"nav-open\") !== -1) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n  // function that shows/hides notifications - it was put here, because the wrapper div has to be outside the main-panel class div\r\n  handleNotificationClick(position) {\r\n    var color = Math.floor(Math.random() * 4 + 1);\r\n    var level;\r\n    switch (color) {\r\n      case 1:\r\n        level = \"success\";\r\n        break;\r\n      case 2:\r\n        level = \"warning\";\r\n        break;\r\n      case 3:\r\n        level = \"error\";\r\n        break;\r\n      case 4:\r\n        level = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.state._notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n      message: (\r\n        <div>\r\n          Notification text\r\n        </div>\r\n      ),\r\n      level: level,\r\n      position: position,\r\n      autoDismiss: 15\r\n    });\r\n  }\r\n\r\n  // TODO: merge show hide to one\r\n\r\n  showHelpPanel() {\r\n    this.setState({ isHelpPanelShown: true });\r\n  }\r\n\r\n  hideHelpPanel() {\r\n    this.setState({ isHelpPanelShown: false });\r\n  }\r\n\r\n  showAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: true });\r\n  }\r\n\r\n  hideAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: false });\r\n  }\r\n\r\n  showAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: true });\r\n  }\r\n\r\n  hideAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: false });\r\n  }\r\n\r\n  showEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: true });\r\n  }\r\n\r\n  hideEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: false });\r\n  }\r\n\r\n  showEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: true });\r\n  }\r\n  \r\n  hideEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: false });\r\n  }\r\n\r\n  \r\n  hideConfirmNewPortfolioDialog() {\r\n    this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n  }\r\n\r\n  addTransaction(tx) {\r\n    let isOldest = true, hasNewBalance = true;\r\n    // check if historic prices need to be updated\r\n    if(this.state.userModel.portfolios[1] != null) {\r\n      let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n      isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n      hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n    }\r\n\r\n    // add transaction and sort\r\n    this.state.userModel.transactions.push(tx);\r\n    this.state.userModel.transactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  updateTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, add, sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== this.state.editedTransaction;\r\n    })\r\n    newTransactions.push(tx);\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  removeTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) >= dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, and sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== tx;\r\n    });\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n  \r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction removed. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  setEditedTransaction(tx) {\r\n    this.setState({ editedTransaction: tx });\r\n  }\r\n\r\n  newPortfolio() {\r\n    // if there are unsaved changes, show confirm dialog\r\n    if(this.state.changeCount > 0 && !this.state.isConfirmNewPortfolioDialogShown) {\r\n      this.setState({\r\n        isConfirmNewPortfolioDialogShown: true\r\n      });\r\n    } else {\r\n      console.log(\"New portfolio created\");\r\n      // save to model\r\n      this.updateUserModel({}, 0);\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', '');\r\n      }\r\n\r\n      this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n\r\n      ReactGA.event({category: 'User', action: 'New'});\r\n    }\r\n  }\r\n\r\n  saveCurrentAndCreateNewPortfolio() {\r\n    this.savePortfolio();\r\n    this.newPortfolio();\r\n  }\r\n\r\n\r\n  updateUserModel(fileFormatPortfolio, changeCount) {\r\n    let transactions = [], positions = [];\r\n    // parse fileFormatPortfolio and get transactions \r\n    if(fileFormatPortfolio.transactions) {\r\n      transactions = this.stringifiedToObjectsTransactions(fileFormatPortfolio.transactions);\r\n    }\r\n    // parse fileFormatPortfolio and get positions \r\n    if(fileFormatPortfolio.positions) {\r\n      positions = fileFormatPortfolio.positions;\r\n    }\r\n    \r\n    // update userModel with new transactions\r\n    let newModel = new UserModel(transactions, positions, this.state.resModel);\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: changeCount\r\n    });\r\n\r\n    return newModel;\r\n  }\r\n\r\n  openPortfolio(files) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      // TODO: check if format ok, version number\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', reader.result);\r\n      }\r\n\r\n      // parse json string to object\r\n      let portfolioObj = JSON.parse(reader.result);\r\n\r\n      // set new model, and get prices\r\n      let newModel = this.updateUserModel(portfolioObj, 0);\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n\r\n      ReactGA.event({category: 'User', action: 'Open'});\r\n    }, false);\r\n    if (files.length > 0) {\r\n      reader.readAsText(files[0]);\r\n    } else {\r\n      //this.props.showError(new InpulidationError(\"Portfolio file should be in JSON file format.\"));\r\n    }\r\n  }\r\n\r\n  savePortfolio() {\r\n    // create json string\r\n    let portfolioJson = this.getPortfolioJson(this.state.userModel, 0);\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', portfolioJson);\r\n    }\r\n\r\n    // save to file\r\n    let file = new File([portfolioJson], \"my-forkfolio-\" + this.state.userModel.transactions.length + \".json\", {type: \"text/plain;charset=utf-8\"});\r\n    FileSaver.saveAs(file);\r\n\r\n    this.setState({\r\n      changeCount: 0\r\n    });\r\n\r\n    ReactGA.event({category: 'User', action: 'Save'});\r\n  }\r\n\r\n  getPortfolioJson(userModel, changeCount) {\r\n    let fileTransactions = [];\r\n    for(let tx of userModel.transactions) {\r\n      let trade = {\r\n        isTrade: tx.isTrade,\r\n        isBuy: tx.isBuy,\r\n        pair: tx.pair.base.code + \"/\" + tx.pair.counter.code,\r\n        baseAmount: tx.baseAmount,\r\n        counterAmount: tx.counterAmount,\r\n        time: tx.time.getTime(),\r\n        comment: tx.comment\r\n      }\r\n      fileTransactions.push(trade);\r\n    }\r\n    let portfolioFile = {\r\n      version: 1,\r\n      credit: \"This json file is created by ForkFolio App at https://forkfol.io\",\r\n      transactions: fileTransactions,\r\n      changeCount: changeCount\r\n    }\r\n\r\n    return JSON.stringify(portfolioFile, null, \"\\t\");\r\n  }\r\n\r\n  stringifiedToObjectsTransactions(fileFormatTransactions) {\r\n    // got through file transactions, and create objects from pair strings\r\n    let transactions = [];\r\n    for(let t of fileFormatTransactions) {\r\n      let pairStr = t.pair.split('/');\r\n      let base = resModel.findCurrencyByCode(pairStr[0]);\r\n      let counter = resModel.findCurrencyByCode(pairStr[1]);\r\n      if(base !== null && counter !== null) {\r\n        let pair = new CurrencyPair(base, counter);\r\n        let tx = new Transaction(t.isTrade, t.isBuy, pair, t.baseAmount, t.counterAmount, new Date(t.time), t.comment);\r\n        transactions.push(tx);\r\n      }\r\n    }\r\n\r\n    return transactions;\r\n  }\r\n\r\n  render() {\r\n    let confirmNewPortfolioDialog = (\r\n      <ConfirmNewPortfolioDialog\r\n        isDialogShown={this.state.isConfirmNewPortfolioDialogShown}\r\n        hideDialog={this.hideConfirmNewPortfolioDialog}\r\n        createNew={this.newPortfolio}\r\n        saveCurrentAndCreateNew={this.saveCurrentAndCreateNewPortfolio}\r\n        changeCount={this.state.changeCount}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props}\r\n          newPortfolio={this.newPortfolio} \r\n          uploadPortfolioFromFile={this.openPortfolio} \r\n          downloadPortfolio={this.savePortfolio} \r\n          showHelpPanel={this.showHelpPanel} \r\n          userModel={this.state.userModel}\r\n          resModel={this.state.resModel}\r\n          changeCount={this.state.changeCount}\r\n        />\r\n        <div\r\n          className={\r\n            \"main-panel\" +\r\n            (this.props.location.pathname === \"/maps/full-screen-maps\"\r\n              ? \" main-panel-maps\"\r\n              : \"\")\r\n          }\r\n          ref=\"mainPanel\"\r\n        >\r\n          <Header \r\n            location={this.props.location}\r\n            userModel={this.state.userModel}\r\n            resModel={this.state.resModel}\r\n          />\r\n          {this.state.isDemo ? (\r\n            <div className=\"demo-content\">\r\n              <DemoCard />\r\n            </div>\r\n          ) : \"\"\r\n          }\r\n          \r\n          <Switch>\r\n            {dashboardRoutes.map((prop, key) => {\r\n              if (prop.collapse) {\r\n                return prop.views.map((prop, key) => {\r\n                  if (prop.name === \"Notifications\") {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        key={key}\r\n                        render={routeProps => (\r\n                          <prop.component\r\n                            {...routeProps}\r\n                            handleClick={this.handleNotificationClick}\r\n                          />\r\n                        )}\r\n                      />\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        component={prop.component}\r\n                        key={key}\r\n                      />\r\n                    );\r\n                  }\r\n                });\r\n              } else {\r\n                if (prop.redirect)\r\n                  return (\r\n                    <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                  );\r\n                else\r\n                  return (\r\n                    <Route\r\n                      path={prop.path}\r\n                      //component={prop.component}\r\n                      key={key}\r\n                      render={routeProps => (\r\n                        <prop.component\r\n                          {...routeProps}\r\n                          handleClick={this.handleNotificationClick}\r\n                          userModel={this.state.userModel}\r\n                          resModel={this.state.resModel}\r\n\r\n                          isHelpPanelShown={this.state.isHelpPanelShown}\r\n                          hideHelpPanel={this.hideHelpPanel}\r\n\r\n                          isAddTradeDialogShown={this.state.isAddTradeDialogShown}\r\n                          showAddTradeDialog={this.showAddTradeDialog}\r\n                          hideAddTradeDialog={this.hideAddTradeDialog}\r\n\r\n                          isAddFundingDialogShown={this.state.isAddFundingDialogShown}\r\n                          showAddFundingDialog={this.showAddFundingDialog}\r\n                          hideAddFundingDialog={this.hideAddFundingDialog}\r\n\r\n                          isEditTradeDialogShown={this.state.isEditTradeDialogShown}\r\n                          showEditTradeDialog={this.showEditTradeDialog}\r\n                          hideEditTradeDialog={this.hideEditTradeDialog}\r\n\r\n                          isEditFundingDialogShown={this.state.isEditFundingDialogShown}\r\n                          showEditFundingDialog={this.showEditFundingDialog}\r\n                          hideEditFundingDialog={this.hideEditFundingDialog}\r\n\r\n                          addTransaction={this.addTransaction}\r\n                          removeTransaction={this.removeTransaction}\r\n\r\n                          updateTransaction={this.updateTransaction}\r\n                          setEditedTransaction={this.setEditedTransaction}\r\n                          editedTransaction={this.state.editedTransaction}\r\n                        />\r\n                      )}\r\n                    />\r\n                  );\r\n              }\r\n            })}\r\n          </Switch>\r\n          <Footer fluid />\r\n          {this.state.isConfirmNewPortfolioDialogShown ? confirmNewPortfolioDialog : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport indexRoutes from \"./routes/index.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard.css?v=1.1.1\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction initializeReactGA() {\r\n  ReactGA.initialize('UA-112760038-1');\r\n}\r\n\r\nfunction render() {\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <Switch>\r\n        {indexRoutes.map((prop, key) => {\r\n          return <Route \r\n                  path={prop.path} \r\n                  key={key}\r\n                  render={routeProps => (\r\n                    <prop.component\r\n                      {...routeProps}\r\n                    />\r\n                  )}\r\n                 />;\r\n        })}\r\n      </Switch>\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n\r\ninitializeReactGA();\r\nrender();\r\n"],"sourceRoot":""}