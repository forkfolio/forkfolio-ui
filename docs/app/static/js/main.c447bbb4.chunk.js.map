{"version":3,"sources":["views/dialogs/AddTradeDialog.jsx","views/dialogs/CommonTradeDialog.jsx","views/dialogs/EditTradeDialog.jsx","utils/FormatUtils.js","components/CustomButton/CustomButton.jsx","web3/common.js","components/Card/Card.jsx","assets/img/full-screen-image-3.jpg","views/PositionsView.jsx","web3/Uniswap.js","web3/dYdXLong.js","web3/dYdXShort.js","web3/GammaOptions.js","web3/Manual.js","web3/UniswapV3.js","web3/templates/positions.js","views/positions/AddSubpositionCard.jsx","views/positions/subpositions/UniswapV2Card.jsx","views/positions/subpositions/DYDXLongCard.jsx","views/positions/subpositions/DYDXShortCard.jsx","views/positions/subpositions/GammaOptionsCard.jsx","views/positions/PositionChartCard.jsx","model/CurrencyPair.js","model/Transaction.js","views/common/InsightsCard.jsx","views/common/HelpCard.jsx","views/dialogs/CommonFundingDialog.jsx","views/dialogs/AddFundingDialog.jsx","model/Portfolio.js","utils/DateUtils.js","model/UserModel.js","model/init/ResModelInit.js","model/ResModel.js","views/PortfolioView.jsx","views/TradesView.jsx","views/dialogs/EditFundingDialog.jsx","views/FundingView.jsx","views/common/PortfolioPie.jsx","views/PerformanceView.jsx","routes/dashboard.jsx","components/Input/InputFiles.js","components/Sidebar/Sidebar.jsx","components/Header/HeaderLinks.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","model/Ticker.js","model/Currency.js","config/Config.js","views/dialogs/ConfirmNewPortfolioDialog.jsx","views/common/DemoCard.jsx","routes/index.jsx","layouts/Dashboard/Dashboard.jsx","index.js","views/dialogs/ConfirmRemoveTransactionDialog.jsx","web3/CoinGeckoPrices.js"],"names":["AddTradeDialog","props","_this","Object","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","getInitialState","console","log","window","location","pathname","ReactGA","modalview","nextProps","isDialogShown","title","buttonText","buyAmount","buyAmountError","buyCurrency","buyCurrencyError","sellAmount","sellAmountError","sellCurrency","sellCurrencyError","date","Date","dateError","comment","buyCurrencies","getBuyCurrencies","sellCurrencies","getSellCurrencies","buyRank","rank","isFiat","sellRank","pair","CurrencyPair","isBuy","isValidBuyAmount","isValidBuyCurrency","isValidSellAmount","isValidSellCurrency","isValidDate","pairBuy","getPair","value","parseFloat","tx","Transaction","addTransaction","setState","hideDialog","CommonTradeDialog","isValidNumber","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","isInvalid","_step","_iterator","_createForOfIteratorHelper","resModel","dailyTickers","keys","s","n","done","c","push","label","code","err","e","f","_step2","_iterator2","userModel","portfolios","slice","balances","strValue","numValue","isNaN","current","isAfter","isBefore","Datetime","moment","name","placeholder","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","controlId","componentClass","ControlLabel","sm","smOffset","type","min","onChange","event","target","react_select__WEBPACK_IMPORTED_MODULE_6__","options","_this2","_this3","react_datetime__WEBPACK_IMPORTED_MODULE_8___default","isEnabledDate","dateFormat","timeFormat","closeOnSelect","inputProps","toDate","_this4","_this5","defaultActiveKey","editedTransaction","fluid","md","show","onHide","Header","closeButton","Title","Body","Container","id","bsStyle","eventKey","Content","animation","Pane","horizontal","getBuyFormGroup","getSellFormGroup","getDateFormGroup","getCommentFormGroup","Footer","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_10__","simple","onClick","fill","wd","handleSaveButtonClick","bind","Component","EditTradeDialog","baseAmount","toString","getSelectObject","base","counterAmount","counter","time","currency","updateTransaction","formatUtils","digits","toLocaleString","minimumFractionDigits","maximumFractionDigits","balance","short","adder","formatNumber","length","style1","Math","abs","react__WEBPACK_IMPORTED_MODULE_2___default","tradeCount","transactions","CustomButton","_this$props","special","speciallarge","table","pullRight","block","round","icon","neutral","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","rest","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","btnClasses","cx","btn-special","btn-special-large","btn-table","btn-fill","btn-simple","pull-right","btn-block","btn-wd","btn-round","btn-icon","btn-neutral","btn-social btn-twitter","btn-social btn-facebook","btn-social btn-google","btn-social btn-linkedin","btn-social btn-pinterest","btn-social btn-youtube","btn-social btn-tumblr","btn-social btn-github","btn-social btn-behance","btn-social btn-dribbble","btn-social btn-reddit","btn-social btn-stumbleupon","react__WEBPACK_IMPORTED_MODULE_6___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","assign","usdcAddress","wbtcAddress","getContractInstance","web3","abi","address","eth","Contract","debalanceETH","currentPrice","startBASE","ethTokens","daiTokens","debalanceDAI","startUNDER","clone","original","create","getPrototypeOf","OptionMath","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","PutCallFlag","S","X","T","r","v","d1","sqrt","d2","CND","exp","x","k","PI","Card","hidden","calendar","plain","wizard","undefined","category","textCenter","rightSection","ctAllIcons","ctFullWidth","ctTextCenter","tableFullWidth","content","stats","legend","ftTextCenter","module","exports","__webpack_require__","p","PositionsView","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","displayDescription","description","text","displayLinks","links","map","link","react__WEBPACK_IMPORTED_MODULE_9___default","href","anchor","hideConfirmDialog","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","removeTransaction","hideChartDialog","loadWeb3","loadWeb3Account","addService","isConfirmDialogShown","removedTransaction","isChartDialogShown","account","web3DataLoaded","selectedPosition","hash","pageview","userAccount","global","ethereum","Web3","currentProvider","providers","HttpProvider","enable","getAccounts","accounts","error","_context2","t0","getMessage","positions","Array","isArray","appendedPositions","uniswapv3Test","loadWeb3Data","prepareTableData","tableData","data","i","pos","j","subpositions","subpos","service","Uniswap","marketAddress","under","liq","start","dYdXLong","borrowedBASE","boughtUNDER","openingPrice","dYdXShort","borrowedUNDER","boughtBASE","GammaOptions","isCall","isLong","quantity","strike","daysToExpiry","iv","Manual","extra","UniswapV3","entryPrice","minPrice","maxPrice","feeInPercent","getMarketData","uniswapTableSet","startDate","daysSinceStart","market","getPrice","CoinGeckoPrices","getTokenPriceInUSD","priceBASEUSD","priceUNDERUSD","totalInBASE","totalOutBASE","extraBASE","getCurrentValue","profitPerMonthTodayToken","profitTodayToken","aprToday","targetPriceUNDER","targetProfitUNDER","profitPerMonthTargetUNDER","aprTargetUNDER","priceAndProfitUNDER","findMaxUNDER","targetHodlUNDER","targetPriceBASE","targetProfitBASE","profitPerMonthTargetBASE","aprTargetBASE","priceAndProfitBASE","findMaxBASE","targetHodlBASE","profitTargetETHUSD","profitTargetTokenUSD","symbol","profitPerMonthTargetETHUSD","profitPerMonthTargetTokenUSD","maxProfitTargetUSD","max","maxProfitPerMonthTargetUSD","position","sizedays","size","days","toFixed","price","lower","higher","totalprofit","monthlyprofit","apr","actions","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_13__","maxBalanceBASE","maxProfitBASE","maxTotalHodlBASE","debalanced","maxBalanceUNDER","maxProfitUNDER","maxTotalHodlUNDER","totalOutUNDER","extraUNDER","sumA","rows","columnName","subName","index","total","accessor","maxWidth","style","whiteSpace","filterMethod","filter","row","toLowerCase","indexOf","Cell","float","filterable","getSumFooter","sortMethod","b","getTotalProfitSum","getMonthlyProfitSum","minWidth","sortable","addTradeDialog","_dialogs_AddTradeDialog__WEBPACK_IMPORTED_MODULE_14__","isAddTradeDialogShown","hideAddTradeDialog","editTradeDialog","_dialogs_EditTradeDialog__WEBPACK_IMPORTED_MODULE_15__","isEditTradeDialogShown","hideEditTradeDialog","confirmRemoveTransactionDialog","_dialogs_ConfirmRemoveTransactionDialog__WEBPACK_IMPORTED_MODULE_16__","tooltipHelpText1","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","components_Card_Card_jsx__WEBPACK_IMPORTED_MODULE_12__","showAddTradeDialog","placement","overlay","react_table__WEBPACK_IMPORTED_MODULE_10__","columns","getTableColumns","defaultPageSize","noDataText","getNoDataText","_positions_PositionChartCard__WEBPACK_IMPORTED_MODULE_26__","addressBASE","addressUNDER","myLIQ","D_workspace_forkfolio_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","myBASE","myUNDER","poolBASE","poolUNDER","poolLIQ","marketInstance","uniswapABI","baseInstance","daiABI","underInstance","getBalance","ethBalance","methods","totalSupply","balanceOf","pow","getDecimals","newPrice","oldPrice","setMarketPrice","myShare","exactUNDER","exactBASE","exactLIQ","exactUNDERWithFees","exactBASEWithFees","inputAmount","inputPool","outputPool","collateralUNDER","positionBASE","collateralBASE","optionMath","currentValueBASE","blackScholes","openingTotalBASE","token1V2","token2V2","L","L2","H","maxToken2","maxToken1","LP_a","LP_b","LP","multiplier","d","__webpack_exports__","dai","AddSubpositionCard","classCallCheck","possibleConstructorReturn","selectedType","types","react_default","es","react_select_es","getTypes","addSubposition","UniswapV2Card","newValue","subposition","Number","updateSubposition","tooltipHelpText","removeSubposition","onChangeStartBase","onChangeExtraBase","onChangeStartUnder","onChangeExtraUnder","onChangeStartLiq","onChangeExtraLiq","customMin","DYDXLongCard","onChangeBorrowedBase","onChangeBoughtUnder","DYDXShortCard","onChangeBorrowedUnder","onChangeBoughtBase","GammaOptionsCard","onChangeIsCall","onChangeQuantity","onChangeStrike","onChangeDaysToExpiry","onChangeIV","PositionChartCard","chartLoaded","chartData","random","customMax","assertThisInitialized","prevProps","prevState","userModelLoaded","customPosition","refreshChart","chartWindow","getChartWindow","startPrice","step","endPrice","right","aprsBASE","profitsBASE","profitsUNDER","profitBASE","profitUNDER","y","rangeEdgesBASE","getRangePoints","rangeEdgesUNDER","chartData1","chartData2","chartData3","left","pivot","profits","maxProfit","prevPoint","firstPoint","leftPoint","rightPoint","chart","height","xAxis","plotLines","color","width","plotBands","from","to","yAxis","opposite","series","tooltip","valueSuffix","turboThreshold","shared","valueDecimals","credits","enabled","newSubpos","updatedPosition","splice","subpositions_UniswapV2Card","subpositions_DYDXLongCard","subpositions_DYDXShortCard","subpositions_GammaOptionsCard","displayCard","tooltipHelpText2","highcharts_react_official_default","highcharts","Highcharts","getPerformanceChartOptions","getSubpositionCards","positions_AddSubpositionCard","isTrade","denomination","priceThen","priceNow","getLastPrice","profit","InsightsCard","getTradingProfit","totalProfit","getProfit","usd","totalDeposits","totalWithdrawals","lastPrice","getPastPrice","currentPortfolio","totalBalance","getTotalCryptoBalance","toShortFormat","addon","getTotalBalance","tradingProfit","fundings","getTotalFundings","holdingProfit","exposureToCrypto","getExposureToCryptoPercentage","react_bootstrap_es","toDecimalFormatStyled","toShortFormatStyled","HelpCard","isHelpPanelShown","lg","xs","class","danger","showAddFundingDialog","src","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","mdOffset","hideHelpPanel","CommonFundingDialog","handleTabSelect","amountError","currencyError","currencies","CommonFundingDialog_createForOfIteratorHelper","selected","amount","isValidAmount","isValidCurrency","DateTime_default","isDeposit","getDepositCurrencies","getWithdrawalCurrencies","activeKey","onSelect","getBuySellFormGroup","AddFundingDialog","isInitialDeposit","Portfolio","previous","genesisTx","Map","calculateTradeCount","calculateCurrencyBalances","count","isNotFunding","get","set","toConsumableArray","entries","sort","getCurrencyBalance","priceInDenomination","Portfolio_createForOfIteratorHelper","currencyBalance","getTime","pastPortfolio","getPastPortfolio","_step3","totalPastBalance","_iterator3","getPastCurrencyBalance","prev","dateUtils","sinceDate","diff","UserModel","arguments","preparePortfolios","empty","sortBalances","UserModel_createForOfIteratorHelper","portfolio","unshift","firstDate","getDaysSince","ResModel","recentTickers","newModel","percentChange24h","getFullYear","getMonth","getDate","ResModel_createForOfIteratorHelper","t","sameDay","rangeSelectorModel","inputPosition","align","buttonPosition","buttons","userFriendlyText","PortfolioView","getTableColumnsDesktop","getTableColumnsMobile","getTableData","getLogoURL","innerWidth","addEventListener","updateWidth","PortfolioView_createForOfIteratorHelper","originalLogoURL","replace","downsizeTokenLogo","alt","toGreenRedPercentStyle","substr","meta","logo","_ref3","_ref2","slicedToArray","getPercentChange24h","share","_step4","serie","_iterator4","balanceInDenominated","plotOptions","stacking","lineColor","lineWidth","marker","rangeSelector","assetCount","showPagination","isMobile","addFundingDialog","dialogs_AddFundingDialog","isAddFundingDialogShown","hideAddFundingDialog","common_HelpCard","react_table_es","showPageSizeOptions","common_InsightsCard","Highstock","constructorType","TradesView","mapTradesToState","newestFirst","TradesView_createForOfIteratorHelper","toISOString","split","volume","cost","profitPercent","getProfitPercent","prop","profitpercentage","setEditedTransaction","showEditTradeDialog","getTotalCost","getTotalVolume","pairStr","findCurrencyByCode","totalCostInUsd","getTotalProfit","getTypeFooter","_step5","_iterator5","isOnePair","getTotalPrice","getTotalProfitPercentage","getPairFooter","getVolumeFooter","getPriceFooter","getCostFooter","getProfitPercentageFooter","ConfirmRemoveTransactionDialog","EditFundingDialog","FundingView","FundingView_createForOfIteratorHelper","showEditFundingDialog","fundingCount","editFundingDialog","dialogs_EditFundingDialog","isEditFundingDialogShown","hideEditFundingDialog","PortfolioPie","chartOptions","getPieOptions","PortfolioPie_createForOfIteratorHelper","PerformanceView","rangeClickHandler","daysSince","getDaysSinceFirstTx","getBestCurrentWorstPortfolio","bestPortfolio","best","worstPortfolio","worst","performanceChartOptions","since","setHours","portfoliosSince","getPortfoliosSince","PerformanceView_createForOfIteratorHelper","getPastTotalBalance","getPortfolioSeries","externalCaller","_loop","events","click","common_PortfolioPie","dashboardRoutes","path","component","collapse","views","mini","redirect","pathTo","InputFiles","onInputRef","node","input","preventDefault","files","children","accept","react","onKeyPress","role","tabIndex","objectSpread","display","react_portal_es","ref","React","defaultProps","ps","Sidebar","onOpenClick","isWindows","navigator","platform","routeName","updateDimensions","PerfectScrollbar","refs","sidebarWrapper","suppressScrollX","suppressScrollY","setTimeout","update","destroy","document","getElementById","changeCount","data-color","data-image","image","st","activeRoute","getChangeCount","in","newPortfolio","downloadPortfolio","Input_InputFiles","uploadPortfolioFromFile","activeClassName","rel","showHelpPanel","HeaderLinks","handleMinimizeSidebar","mobileSidebarToggle","body","classList","toggle","documentElement","Brand","makeBrand","Toggle","Header_HeaderLinks","transparent","getYear","packageJson","version","Ticker","Currency","config","host","ConfirmNewPortfolioDialog","createNew","saveCurrentAndCreateNew","DemoCard","aria-hidden","indexRoutes","Dashboard","handleNotificationClick","hideConfirmNewPortfolioDialog","fetchRecentPrices","fetchCurrencies","getCurrenciesToFetch","fetchAllAndRender","fetchHistoday","fetchMeta","isDemo","updateUserModel","openPortfolio","savePortfolio","saveCurrentAndCreateNewPortfolio","_notificationSystem","isConfirmNewPortfolioDialogShown","str","Dashboard_createForOfIteratorHelper","Promise","reject","fetch","then","res","json","out","catch","toTokensString","response","tickers","JSON","parse","l","parseInt","promises","all","newResModel","newUserModel","repacked","m","notificationSystem","history","action","scrollTop","scrollingElement","mainPanel","demofolio","cookie","load","save","maxAge","portfolioJson","localStorage","getItem","portfolioObject","setInterval","level","floor","addNotification","data-notify","message","autoDismiss","isOldest","hasNewBalance","has","newChangeCount","setItem","getPortfolioJson","_this6","newTransactions","item","fileFormatPortfolio","stringifiedToObjectsTransactions","_this7","reader","FileReader","result","portfolioObj","readAsText","file","File","FileSaver","saveAs","_step6","fileTransactions","_iterator6","trade","portfolioFile","credit","stringify","fileFormatTransactions","_step7","_iterator7","_this8","confirmNewPortfolioDialog","dialogs_ConfirmNewPortfolioDialog","NotificationSystem_default","components_Sidebar_Sidebar","components_Header_Header","common_DemoCard","render","routeProps","handleClick","components_Footer_Footer","initialize","ReactDOM","toShortString","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","getType","getDescription","getComment","components_CustomButton_CustomButton_jsx__WEBPACK_IMPORTED_MODULE_7__","url","myJson"],"mappings":"+KAKMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQP,EAAKQ,gBAAgBT,GAElCU,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAW,cACzDC,IAAQC,UAAUJ,OAAOC,SAASC,SAAW,cAL5Bb,yFASOgB,4CAOVA,GACd,MAAO,CACLC,cAAeD,EAAUC,cACzBC,MAAO,YACPC,WAAY,MACZC,UAAW,GACXC,eAAgB,KAChBC,YAAa,KACbC,iBAAkB,KAClBC,WAAY,GACZC,gBAAiB,KACjBC,aAAc,KACdC,kBAAmB,KACnBC,KAAM,IAAIC,KACVC,UAAW,KACXC,QAAS,GACTC,cAAe7B,KAAK8B,iBAAiBjB,GACrCkB,eAAgB/B,KAAKgC,kBAAkBnB,oCAInCM,EAAaI,EAAcN,EAAWI,GAC5C,IAAIY,EAAUd,EAAYe,MAAQf,EAAYgB,QAAU,IAAU,GAC9DC,EAAWb,EAAaW,MAAQX,EAAaY,QAAU,IAAU,GAErE,OAAGF,EAAUG,GAAaH,IAAYG,GAA0B,IAAdnB,EACzC,CACLoB,KAAM,IAAIC,IAAaf,EAAcJ,GACrCoB,OAAO,EACPtB,UAAWI,EACXA,WAAYJ,GAIT,CACLoB,KAAM,IAAIC,IAAanB,EAAaI,GACpCgB,OAAO,EACPtB,UAAWA,EACXI,WAAYA,mDAOd,GAFAf,QAAQC,IAAI,sBAETP,KAAKwC,iBAAiBxC,KAAKI,MAAMa,YACjCjB,KAAKyC,mBAAmBzC,KAAKI,MAAMe,cACnCnB,KAAK0C,kBAAkB1C,KAAKI,MAAMiB,aAClCrB,KAAK2C,oBAAoB3C,KAAKI,MAAMmB,eACpCvB,KAAK4C,YAAY5C,KAAKI,MAAMqB,MAAO,CACpCnB,QAAQC,IAAI,oCAGZ,IAAIsC,EAAU7C,KAAK8C,QAAQ9C,KAAKI,MAAMe,YAAY4B,MAAO/C,KAAKI,MAAMmB,aAAawB,MAAOC,WAAWhD,KAAKI,MAAMa,WAAY+B,WAAWhD,KAAKI,MAAMiB,aAC5IgB,EAAOQ,EAAQR,KACfE,EAAQM,EAAQN,MAChBtB,EAAY4B,EAAQ5B,UACpBI,EAAawB,EAAQxB,WAErB4B,EAAK,IAAIC,KAAY,EAAMX,EAAOF,EAAMpB,EAAWI,EAAYrB,KAAKI,MAAMqB,KAAMzB,KAAKI,MAAMwB,SAC/F5B,KAAKJ,MAAMuD,eAAeF,GAC1BjD,KAAKoD,SAASpD,KAAKK,gBAAgBL,KAAKJ,QACxCI,KAAKJ,MAAMyD,qBA/EYC,KAoFd3D,+qCCnET2D,2LAEaP,GACf,IAAIQ,EAAgBvD,KAAKuD,cAAcR,GAOvC,OANAQ,EAAgBvD,KAAKoD,SAAS,CAAElC,eAAgB,OAAUlB,KAAKoD,SAAS,CACtElC,eACEsC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,qCAIGJ,6CAGUR,GACjB,IAAIa,EAAqB,MAATb,EAQhB,OAPAa,EAAY5D,KAAKoD,SAAS,CACxBhC,iBACEoC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,+BAIF3D,KAAKoD,SAAS,CAAEhC,iBAAkB,QAC5BwC,4CAGQb,GAChB,IAAIQ,EAAgBvD,KAAKuD,cAAcR,GAQvC,OAPAQ,EAAgBvD,KAAKoD,SAAS,CAAE9B,gBAAiB,OAAUtB,KAAKoD,SAAS,CACvE9B,gBACEkC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,qCAKGJ,8CAGWR,GAClB,IAAIa,EAAqB,MAATb,EAQhB,OAPAa,EAAY5D,KAAKoD,SAAS,CACxB5B,kBACEgC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,+BAIF3D,KAAKoD,SAAS,CAAE5B,kBAAmB,QAC7BoC,sCAGEb,GACV,IAAIa,EAAqB,MAATb,EAQhB,OAPAa,EAAY5D,KAAKoD,SAAS,CACxBzB,UACE6B,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAjB,yBAIF3D,KAAKoD,SAAS,CAAEzB,UAAW,QACrBiC,2CAGO/C,GACf,IAD0BgD,EACtBhC,EAAgB,GADMiC,EAAAC,EAEblD,EAAUmD,SAASC,aAAaC,QAFnB,IAE1B,IAAAJ,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAAqD,KAA7CC,EAA6CT,EAAAd,MACnDlB,EAAc0C,KAAK,CAAExB,MAAOuB,EAAGE,MAAOF,EAAEG,QAHhB,MAAAC,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAM1B,OAAO/C,4CAGShB,GAChB,IAD2BgE,EAEvB9C,EAAiB,GAFM+C,EAAAf,EACJlD,EAAUkE,UAAUC,WAAWC,OAAO,GAAG,GAE/BC,SAAShB,QAHf,IAG3B,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAkD,KAAvCC,EAAuCO,EAAA9B,MAChDhB,EAAewC,KAAK,CAAExB,MAAOuB,EAAGE,MAAOF,EAAEG,QAJhB,MAAAC,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAO3B,OAAO7C,wCAGKoD,GACZ,IAAIC,EAAWpC,WAAWmC,GAC1B,OAAQE,MAAMD,IAAaA,GAAW,wCAwB1BE,GAEZ,OAAOA,EAAQC,QAAQ,IAAI7D,KAAK,KAAM,GAAI,MAAQ4D,EAAQE,SAASC,IAASC,kDAG9DC,EAAMC,GAAa,IAAA/F,EAAAG,KACjC,OACEwD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,UAAU,wBACrBtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GACjDP,GAEHnC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,GACPzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACED,YAAaA,EACbO,KAAK,SACLC,IAAK,EACLT,KAAK,YACL5C,MAAO/C,KAAKI,MAAMa,UAClBoF,SAAU,SAAAC,GACRzG,EAAKuD,SAAS,CACZnC,UAAWqF,EAAMC,OAAOxD,QAE1BlD,EAAK2C,iBAAiB8D,EAAMC,OAAOxD,UAGtC/C,KAAKI,MAAMc,gBAEdsC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,GACPzC,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEZ,YAAY,WACZD,KAAK,cACL5C,MAAO/C,KAAKI,MAAMe,YAClBsF,QAASzG,KAAKI,MAAMyB,cACpBwE,SAAU,SAAAtD,GACRlD,EAAKuD,SAAS,CAAEjC,YAAa4B,IAC7BlD,EAAK4C,mBAAmBM,MAG3B/C,KAAKI,MAAMgB,4DAMDuE,EAAMC,GAAa,IAAAc,EAAA1G,KAClC,OACEwD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,UAAU,wBACrBtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GACjDP,GAEHnC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,GACPzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACED,YAAaA,EACbO,KAAK,SACLR,KAAK,aACLS,IAAK,EACLrD,MAAO/C,KAAKI,MAAMiB,WAClBgF,SAAU,SAAAC,GACRI,EAAKtD,SAAS,CACZ/B,WAAYiF,EAAMC,OAAOxD,QAE3B2D,EAAKhE,kBAAkB4D,EAAMC,OAAOxD,UAGvC/C,KAAKI,MAAMkB,iBAEdkC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,GACPzC,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEZ,YAAY,WACZD,KAAK,eACL5C,MAAO/C,KAAKI,MAAMmB,aAClBkF,QAASzG,KAAKI,MAAM2B,eACpBsE,SAAU,SAAAtD,GACR2D,EAAKtD,SAAS,CAAE7B,aAAcwB,IAC9B2D,EAAK/D,oBAAoBI,MAG5B/C,KAAKI,MAAMoB,+DAMC,IAAAmF,EAAA3G,KACjB,OACEwD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,UAAU,wBACrBtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GAApD,QAGA1C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,GACPzC,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CACEb,YAAa5C,KAAK6G,cAClBC,WAAY,aACZC,YAAY,EACZC,eAAe,EACfC,WAAY,CAAErB,YAAa,0BAC3B7C,MAAO/C,KAAKI,MAAMqB,KAClB4E,SAAU,SAAAC,GACRK,EAAKvD,SAAS,CAAE3B,KAAwB,kBAAV6E,EAAsB,KAAOA,EAAMY,WACjEP,EAAK/D,YAA8B,kBAAV0D,EAAsB,KAAOA,EAAMY,aAG/DlH,KAAKI,MAAMuB,0DAMI,IAAAwF,EAAAnH,KACpB,OACEwD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,UAAU,qBACrBtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKE,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GAApD,WAGA1C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,GACPzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACED,YAAY,mBACZO,KAAK,OACLR,KAAK,UACL5C,MAA8B,SAAvB/C,KAAKI,MAAMwB,QAAqB5B,KAAKI,MAAMwB,QAAU,GAC5DyE,SAAU,SAAAC,GACRa,EAAK/D,SAAS,CAAExB,QAAS0E,EAAMC,OAAOxD,8CAQvC,IAAAqE,EAAApH,KACHqH,EAAmB,MAIvB,OAHmC,MAAhCrH,KAAKJ,MAAM0H,mBAA8BtH,KAAKJ,MAAM0H,kBAAkB/E,QACvE8E,EAAmB,QAGnB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAM0B,OAAK,GACT/D,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAK2B,GAAI,GACPhE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE4B,KAAMzH,KAAKJ,MAAMkB,cACjB4G,OAAQ,kBAAMN,EAAKxH,MAAMyD,eAEzBG,EAAAC,EAAAC,cAACmC,EAAA,EAAM8B,OAAP,CAAcC,aAAW,GACvBpE,EAAAC,EAAAC,cAACmC,EAAA,EAAMgC,MAAP,KAAc7H,KAAKI,MAAMW,QAE3ByC,EAAAC,EAAAC,cAACmC,EAAA,EAAMiC,KAAP,KACEtE,EAAAC,EAAAC,cAACmC,EAAA,EAAIkC,UAAL,CAAeC,GAAG,qBAAqBX,iBAAkBA,GACvD7D,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKlC,UAAU,YACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,IACPzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKoC,QAAQ,QACXzE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASqC,SAAS,OAAlB,OACA1E,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAASqC,SAAS,QAAlB,UAGJ1E,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKI,GAAI,IACPzC,EAAAC,EAAAC,cAACmC,EAAA,EAAIsC,QAAL,CAAaC,WAAS,GACpB5E,EAAAC,EAAAC,cAACmC,EAAA,EAAIwC,KAAL,CAAUH,SAAS,OACjB1E,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMyC,YAAU,GACbtI,KAAKuI,gBAAgB,aAAc,oBACnCvI,KAAKwI,iBAAiB,OAAQ,qBAC9BxI,KAAKyI,mBACLzI,KAAK0I,wBAGVlF,EAAAC,EAAAC,cAACmC,EAAA,EAAIwC,KAAL,CAAUH,SAAS,QACjB1E,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMyC,YAAU,GACbtI,KAAKwI,iBAAiB,cAAe,qBACrCxI,KAAKuI,gBAAgB,WAAY,wBACjCvI,KAAKyI,mBACLzI,KAAK0I,6BAQpBlF,EAAAC,EAAAC,cAACmC,EAAA,EAAM8C,OAAP,KACEnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,kBAAM1B,EAAKxH,MAAMyD,eAF5B,UAMAG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEX,QAAQ,OACRc,MAAI,EACJC,IAAE,EACF7C,KAAK,SACL2C,QAAS9I,KAAKiJ,sBAAsBC,KAAKlJ,OAExCA,KAAKI,MAAMY,yBA1SAmI,aAsTjB7F,6HCvUT8F,cACJ,SAAAA,EAAYxJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,IACjBvJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsJ,GAAAjJ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXW,MAAO,eACPC,WAAY,SACZsG,kBAAmB1H,EAAM0H,kBACzBrG,UAAWrB,EAAM0H,kBAAkB+B,WAAWC,WAC9CpI,eAAgB,KAChBC,YAAatB,EAAK0J,gBAAgB3J,EAAM0H,kBAAkBjF,KAAKmH,MAC/DpI,iBAAkB,KAClBS,cAAehC,EAAKiC,iBAAiBlC,GACrCyB,WAAYzB,EAAM0H,kBAAkBmC,cAAcH,WAClDhI,gBAAiB,KACjBC,aAAc1B,EAAK0J,gBAAgB3J,EAAM0H,kBAAkBjF,KAAKqH,SAChElI,kBAAmB,KACnBO,eAAgBlC,EAAKmC,kBAAkBpC,GACvC6B,KAAM7B,EAAM0H,kBAAkBqC,KAC9BhI,UAAW,KACXC,QAAShC,EAAM0H,kBAAkB1F,SAGnCtB,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAW,eACzDC,IAAQC,UAAUJ,OAAOC,SAASC,SAAW,eAtB5Bb,yFA0BOgB,4CA2BV+I,GACd,MAAO,CACL7G,MAAO6G,EACPpF,MAAOoF,EAASnF,sDAOlB,GAFAnE,QAAQC,IAAI,sBAETP,KAAKwC,iBAAiBxC,KAAKI,MAAMa,YACjCjB,KAAKyC,mBAAmBzC,KAAKI,MAAMe,cACnCnB,KAAK0C,kBAAkB1C,KAAKI,MAAMiB,aAClCrB,KAAK2C,oBAAoB3C,KAAKI,MAAMmB,eACpCvB,KAAK4C,YAAY5C,KAAKI,MAAMqB,MAAO,CACpCnB,QAAQC,IAAI,oCAEZ,IAAI8B,EAAO,IAAIC,IAAatC,KAAKI,MAAMe,YAAY4B,MAAO/C,KAAKI,MAAMmB,aAAawB,OAC9EE,EAAK,IAAIC,KAAY,EAAMlD,KAAKI,MAAMkH,kBAAkB/E,MAAOF,EAAMW,WAAWhD,KAAKI,MAAMa,WAAY+B,WAAWhD,KAAKI,MAAMiB,YAAarB,KAAKI,MAAMqB,KAAMzB,KAAKI,MAAMwB,SAC1K5B,KAAKJ,MAAMiK,kBAAkB5G,GAC7BjD,KAAKJ,MAAMyD,qBA1EaC,KA+Ef8F,0GCpBJU,EAAc,yGA5DV/G,EAAOgH,GAClB,OAAa,MAAThH,EACKA,EAAMiH,eAAe,QAAS,CAAEC,sBAAuBF,EAAQG,sBAAuBH,IAGxF,0CAGKI,GACZ,IAAIC,EAAQD,EACRE,EAAQ,GAaZ,GAZGF,EAAU,MACXC,EAAQD,EAAU,IAClBE,EAAQ,KACAF,EAAU,KAClBC,EAAQD,EAAU,IAClBE,EAAQ,KACAF,EAAU,MAClBC,EAAQD,EAAU,IAClBE,EAAQ,KAIPF,EAAU,EAAG,CACd,IAAIpH,EAAQ+G,EAAYQ,aAAaF,EAAO,GAAKC,EACjD,MAAO,KAAOtH,EAAMkC,MAAM,EAAGlC,EAAMwH,QAGrC,MAAO,IAAMT,EAAYQ,aAAaF,EAAO,GAAKC,iDAG7BtH,GACrB,IAAIyH,EAAS,SAAWzH,GAAS,EAAI,QAAU,OAE/C,OADAyH,EAASC,KAAKC,IAAI3H,GAAS,KAAQ,GAAKyH,EAEtCG,EAAAlH,EAAAC,cAAA,OAAKC,UAAW6G,GACbV,EAAYQ,aAAavH,EAAO,GAAK,2CAK9B4C,EAAMZ,GAElB,GAAmC,IADZA,EAAUC,WAAWC,OAAO,GAAG,GAClC2F,WAElB,OAAqC,IAAlC7F,EAAU8F,aAAaN,OAChBI,EAAAlH,EAAAC,cAAA,YAAMiH,EAAAlH,EAAAC,cAAA,qDACZiH,EAAAlH,EAAAC,cAAA,UACEiH,EAAAlH,EAAAC,cAAA,2CACAiH,EAAAlH,EAAAC,cAAA,8CACAiH,EAAAlH,EAAAC,cAAA,uCAKEiH,EAAAlH,EAAAC,cAAA,kBAAUiC,EAAV,gJCpDRmF,mLACK,IAAAC,EA0BH/K,KAAKJ,MAxBPoL,EAFKD,EAELC,QACAC,EAHKF,EAGLE,aACAC,EAJKH,EAILG,MACAnC,EALKgC,EAKLhC,KACAF,EANKkC,EAMLlC,OACAsC,EAPKJ,EAOLI,UACAC,EARKL,EAQLK,MACApC,EATK+B,EASL/B,GACAqC,EAVKN,EAULM,MACAC,EAXKP,EAWLO,KACAC,EAZKR,EAYLQ,QACAC,EAbKT,EAaLS,QACAC,EAdKV,EAcLU,SACAC,EAfKX,EAeLW,OACAC,EAhBKZ,EAgBLY,SACAC,EAjBKb,EAiBLa,UACAC,EAlBKd,EAkBLc,QACAC,EAnBKf,EAmBLe,OACAC,EApBKhB,EAoBLgB,OACAC,EArBKjB,EAqBLiB,QACAC,EAtBKlB,EAsBLkB,SACAC,EAvBKnB,EAuBLmB,OACAC,EAxBKpB,EAwBLoB,YACGC,EAzBEtM,OAAAuM,EAAA,EAAAvM,CAAAiL,EAAA,mOA4BDuB,EAAaC,IAAG,CACpBC,cAAexB,EACfyB,oBAAqBxB,EACrByB,YAAaxB,EACbyB,WAAY5D,EACZ6D,aAAc/D,EACdgE,aAAc1B,EACd2B,YAAa1B,EACb2B,SAAU/D,EACVgE,YAAa3B,EACb4B,WAAY3B,EACZ4B,cAAe3B,EACf4B,yBAA0B3B,EAC1B4B,0BAA2B3B,EAC3B4B,wBAAyB3B,EACzB4B,0BAA2B3B,EAC3B4B,2BAA4B3B,EAC5B4B,yBAA0B3B,EAC1B4B,wBAAyB3B,EACzB4B,wBAAyB3B,EACzB4B,yBAA0B3B,EAC1B4B,0BAA2B3B,EAC3B4B,wBAAyB3B,EACzB4B,6BAA8B3B,IAGhC,OAAO4B,EAAAtK,EAAAC,cAACsK,EAAA,EAADlO,OAAAmO,OAAA,CAAQtK,UAAW2I,GAAgBF,WAvDnBjD,aAqFZ2B,wgKCrFFoD,EAAc,6CAUdC,EAAc,6CAyBpB,SAASC,EAAoBC,EAAMC,EAAKC,GAE9C,OAAO,IAAIF,EAAKG,IAAIC,SAASH,EAAKC,GAS5B,SAASG,EAAaC,EAAcC,EAAWC,EAAWC,GAI7D,MAAO,CAFMD,GADCD,EAAYE,GACSH,EAEnBC,GAGb,SAASG,EAAaJ,EAAcK,EAAYH,EAAWC,GAI9D,MAAO,CAACE,EAFKF,GADCE,EAAaH,GACQF,GAWhC,SAASM,EAAMC,GAOpB,OANapP,OAAOmO,OAClBnO,OAAOqP,OACLrP,OAAOsP,eAAeF,IAExBA,GAmBG,IAAMG,EAAb,oBAAAA,IAAAvP,OAAAC,EAAA,EAAAD,CAAAE,KAAAqP,GAAA,OAAAvP,OAAAwP,EAAA,EAAAxP,CAAAuP,EAAA,EAAAE,IAAA,eAAAxM,MAAA,SACcyM,EAAaC,EAAGC,EAAGC,EAAGC,EAAGC,GACpC,IAAIC,GAAMrF,KAAKlK,IAAIkP,EAAIC,IAAME,EAAIC,EAAIA,EAAI,GAAKF,IAAME,EAAIpF,KAAKsF,KAAKJ,IAC9DK,EAAKF,EAAKD,EAAIpF,KAAKsF,KAAKJ,GAC5B,MAAoB,SAAhBH,EACIC,EAAIzP,KAAKiQ,IAAIH,GAAIJ,EAAIjF,KAAKyF,KAAKN,EAAID,GAAK3P,KAAKiQ,IAAID,GAEjDN,EAAIjF,KAAKyF,KAAKN,EAAID,GAAK3P,KAAKiQ,KAAKD,GAAMP,EAAIzP,KAAKiQ,KAAKH,KAPhE,CAAAP,IAAA,MAAAxM,MAAA,SAYKoN,GACF,GAAGA,EAAI,EACR,OAAS,EAAEnQ,KAAKiQ,KAAKE,GAErB,IAAIC,EAAI,GAAK,EAAI,SAAWD,GAC5B,OAAS,EAAI1F,KAAKyF,KAAKC,EAAIA,EAAI,GAAI1F,KAAKsF,KAAK,EAAEtF,KAAK4F,IAAMD,GAAK,UAAYA,GAAmBA,GAAK,YAAcA,GAAwB,YAAJA,EAAd,cAAtC,iBAjBnFf,EAAA,+FC/FMiB,mLAEF,OACE9M,EAAAC,EAAAC,cAAA,OACEC,UACE,QACC3D,KAAKJ,MAAM2Q,OAAS,eAAiB,KACrCvQ,KAAKJ,MAAM4Q,SAAW,iBAAmB,KACzCxQ,KAAKJ,MAAM6Q,MAAQ,cAAgB,KACnCzQ,KAAKJ,MAAM8Q,OAAS,eAAiB,UAGlBC,IAArB3Q,KAAKJ,MAAMmB,YAA+C4P,IAAxB3Q,KAAKJ,MAAMgR,SAC5CpN,EAAAC,EAAAC,cAAA,OACEC,UAAW,UAAY3D,KAAKJ,MAAMiR,WAAa,eAAiB,KAEhErN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAS3D,KAAKJ,MAAMmB,OAClCyC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgB3D,KAAKJ,MAAMkR,eAE1CtN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAY3D,KAAKJ,MAAMgR,UACpCpN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAGjB,GAEFH,EAAAC,EAAAC,cAAA,OACEC,UACE,WACC3D,KAAKJ,MAAMmR,WAAa,aAAe,KACvC/Q,KAAKJ,MAAMoR,YAAc,sBAAwB,KACjDhR,KAAKJ,MAAMqR,aAAe,eAAiB,KAC3CjR,KAAKJ,MAAMsR,eAAiB,oBAAsB,KAGpDlR,KAAKJ,MAAMuR,cAEQR,IAArB3Q,KAAKJ,MAAMwR,YAA6CT,IAAtB3Q,KAAKJ,MAAMyR,OAC5C7N,EAAAC,EAAAC,cAAA,OACEC,UACE,UAAY3D,KAAKJ,MAAM0R,aAAe,eAAiB,UAGlCX,IAAtB3Q,KAAKJ,MAAMyR,OACV7N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU3D,KAAKJ,MAAMyR,QAClC,UACkBV,IAArB3Q,KAAKJ,MAAMwR,MAAsB5N,EAAAC,EAAAC,cAAA,WAAS,UACrBiN,IAArB3Q,KAAKJ,MAAMwR,MACV5N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3D,KAAKJ,MAAMwR,OACjC,MAEJ,aAnDOjI,aAyDJmH,2BC3DfiB,EAAAC,QAAiBC,EAAAC,EAAuB,25CC6BlCC,cACJ,SAAAA,EAAY/R,GAAO,IAAAC,EAUbwO,EAVa,OAAAvO,OAAA8R,EAAA,EAAA9R,CAAAE,KAAA2R,IACjB9R,EAAAC,OAAA+R,EAAA,EAAA/R,CAAAE,KAAAF,OAAAgS,EAAA,EAAAhS,CAAA6R,GAAAxR,KAAAH,KAAMJ,KAiaRmS,mBAAqB,SAACC,GACpB,OAAQA,EAAcA,EAAYC,KAAO,MAnaxBpS,EAsanBqS,aAAe,SAACF,GACd,OAAGA,EAECA,EAAYG,MAAMC,IAAI,SAACC,EAAM9C,GAC3B,OACE+C,EAAA7O,EAAAC,cAAA,QAAM6L,IAAKA,GACT+C,EAAA7O,EAAAC,cAAA,KAAG6O,KAAMF,EAAKA,MAAOA,EAAKG,QAAY,OAOzC,MAjbP3S,EAAK4S,kBAAoB5S,EAAK4S,kBAAkBvJ,KAAvBpJ,OAAA4S,EAAA,EAAA5S,QAAA4S,EAAA,EAAA5S,CAAAD,KACzBA,EAAK8S,kBAAoB9S,EAAK8S,kBAAkBzJ,KAAvBpJ,OAAA4S,EAAA,EAAA5S,QAAA4S,EAAA,EAAA5S,CAAAD,KACzBA,EAAK+S,gBAAkB/S,EAAK+S,gBAAgB1J,KAArBpJ,OAAA4S,EAAA,EAAA5S,QAAA4S,EAAA,EAAA5S,CAAAD,KACvBA,EAAKgT,SAAWhT,EAAKgT,SAAS3J,KAAdpJ,OAAA4S,EAAA,EAAA5S,QAAA4S,EAAA,EAAA5S,CAAAD,KAChBA,EAAKiT,gBAAkBjT,EAAKiT,gBAAgB5J,KAArBpJ,OAAA4S,EAAA,EAAA5S,QAAA4S,EAAA,EAAA5S,CAAAD,KACvBA,EAAKkT,WAAalT,EAAKkT,WAAW7J,KAAhBpJ,OAAA4S,EAAA,EAAA5S,QAAA4S,EAAA,EAAA5S,CAAAD,KAIS,qBAAhBW,OAAO6N,OAChBA,EAAOxO,EAAKgT,YAGdhT,EAAKO,MAAQ,CAEX4S,sBAAsB,EACtBC,mBAAoB,KACpBC,oBAAoB,EACpB7E,KAAMA,EACN8E,QAAS,KACTC,gBAAgB,EAChBC,iBAAkB,MAvBHxT,uMA4BjBS,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,MACzE3S,IAAQ4S,SAAS/S,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,QAGtDjF,EAAOrO,KAAKI,MAAMiO,sCAEIrO,KAAK8S,gBAAgBzE,UAAzCmF,SACNxT,KAAKoD,SAAS,CACZ+P,QAASK,yIAMb,IAAInF,EAgBJ,MAf6B,qBAAlBoF,EAAOjT,SAGd6N,EADE7N,OAAOkT,SACF,IAAIC,IAAKnT,OAAOkT,UAGc,qBAAvBD,EAAOjT,OAAO6N,KAErB,IAAIsF,IAAKnT,OAAO6N,KAAKuF,iBAGrB,IAAID,IAAK,IAAIA,IAAKE,UAAUC,aAAa,2BAI7CzF,kFAGaA,kGAEZ7N,OAAOkT,SAASK,gCACC1F,EAAKG,IAAIwF,4BAA1BC,2BACCA,EAAS,oCAEhB3T,QAAQ4T,MAAM,oFAAsFC,EAAAC,GAAEC,4RAKpGrU,KAAKJ,MAAMmF,WAAa/E,KAAKJ,MAAMmF,UAAUuP,WAAaC,MAAMC,QAAQxU,KAAKJ,MAAMmF,UAAUuP,YAActU,KAAKI,MAAMiO,0BAEnHrO,KAAKI,MAAMgT,uCACd9S,QAAQC,IAAI,mDACZP,KAAKoD,SAAS,CACZgQ,gBAAgB,IAGdqB,wBAAwBzU,KAAKJ,MAAMmF,UAAUuP,YAAWI,eAKtD1U,KAAK2U,aAAaF,0BAGFzU,KAAK4U,iBAAiBH,UAAxCI,SAGJ7U,KAAKoD,SAAS,CACZ0R,KAAMD,EACNxB,iBAAkBoB,EAAkB,qLAMzBH,+EACTS,EAAI,cAAGA,EAAIT,EAAU/J,yBACvByK,EAAMV,EAAUS,GACZE,EAAI,cAAGA,EAAID,EAAIE,aAAa3K,gCAC9B4K,EAASH,EAAIE,aAAaD,YACxBjV,KAAK+S,WAAWiC,EAAKG,UAFeF,2BAFTF,kMAUtBC,EAAKG,8EAEZA,EAAOhP,YACR,mBAGA,qBAGA,sBAGA,kBAGA,mBAGA,6CAdHiP,EAAU,IAAIC,IAAQF,EAAOG,cAAeN,EAAIxL,KAAK+E,QAASyG,EAAIO,MAAMhH,QAAS4G,EAAOK,IAAIC,0CAG5FL,EAAU,IAAIM,IAASP,EAAOI,MAAME,MAAON,EAAOQ,aAAcR,EAAOS,YAAaT,EAAOU,iDAG3FT,EAAU,IAAIU,IAAUX,EAAO3L,KAAKiM,MAAON,EAAOY,cAAeZ,EAAOa,WAAYb,EAAOU,iDAG3FT,EAAU,IAAIa,IAAad,EAAOe,OAAQf,EAAOgB,OAAQhB,EAAOiB,SAAUjB,EAAOkB,OAAQlB,EAAOmB,aAAcnB,EAAOoB,wCAGrHnB,EAAU,IAAIoB,IAAOrB,EAAO3L,KAAKiM,MAAON,EAAO3L,KAAKiN,MAAOtB,EAAOI,MAAME,MAAON,EAAOI,MAAMkB,2CAG5FrB,EAAU,IAAIsB,IAAUvB,EAAO3L,KAAKiM,MAAON,EAAOI,MAAME,MAAOT,EAAI2B,WAAYxB,EAAOyB,SAAUzB,EAAO0B,SAAU1B,EAAO2B,4DAItH1B,EAAQ2B,cAAc/W,KAAKI,MAAMiO,KAAM2G,WAC7C1U,QAAQC,IAAI6U,GAEZD,EAAOC,QAAUA,yLAGId,oFACjB0C,EAAkB,yBACdjC,uIAQN,IAPIC,EAAMV,EAAUS,GAEhBkC,EAAY,IAAIvV,KAAKsT,EAAIiC,WACzBC,GAAkB,IAAIxV,KAASuV,GAAd,MAGjBE,SAAQxI,SACJsG,EAAI,EAAGA,EAAID,EAAIE,aAAa3K,OAAQ0K,IAEvB,aADfE,EAASH,EAAIE,aAAaD,IACpB9O,OACRgR,EAASlI,YAAMkG,EAAOC,SACtBzG,EAAewI,EAAOC,eAKtBD,mCAKoBE,IAAgBC,mBAAmBtC,EAAIxL,KAAK+E,6CAC3C8I,IAAgBC,mBAAmBtC,EAAIO,MAAMhH,6BAFpE4I,GACEI,kBACAC,oBAEF7I,EAAewI,EAAOK,cAAgBL,EAAOI,qBAK/C,IADIE,EAAc,EAAGC,EAAe,EAC5BzC,EAAI,EAAGA,EAAID,EAAIE,aAAa3K,OAAQ0K,IACtCE,EAASH,EAAIE,aAAaD,GAG9BwC,GAAetC,EAAO3L,KAAKiM,MAAQN,EAAOI,MAAME,MAAQ9G,EAGpDgJ,EAAYxC,EAAO3L,KAAKiN,MAAQtB,EAAOI,MAAMkB,MAAQ9H,EACzD+I,GAAgBvC,EAAOC,QAAQwC,gBAAgBjJ,GAAc,GAAKgJ,EAKhEE,EAA8C,SAD9CC,EAAmBJ,EAAeD,GACsBP,EACxDa,EAAWD,EAAmBL,EAAcP,EAAiB,IAAM,IAEnE/B,EAASH,EAAIE,aAAa,GAI1B8C,EAAmBrJ,EACnBsJ,EAAoBH,EAAmBnJ,EACvCuJ,EAA4BL,EAA2BlJ,EACvDwJ,EAAiBJ,EAEF,YAAhB5C,EAAOhP,MAAsBgP,EAAO3L,KAAKiM,MAAQ,GAAKN,EAAOI,MAAME,MAAQ,IACxE2C,EAAsB1R,EAAK2R,aAAarD,GAC5CgD,EAAmBI,EAAoB,GACvCH,EAAoBG,EAAoB,GACpCE,EAAkBF,EAAoB,GAC1CF,EAAgD,QAApBD,EAA8Bf,EAC1DiB,EAAiBF,EAAoBK,EAAkBpB,EAAiB,IAAM,KAK5EqB,EAAkB5J,EAClB6J,EAAmBV,EACnBW,EAA2BZ,EAC3Ba,EAAgBX,EAED,YAAhB5C,EAAOhP,MAAsBgP,EAAO3L,KAAKiM,MAAQ,GAAKN,EAAOI,MAAME,MAAQ,IACxEkD,EAAqBjS,EAAKkS,YAAY5D,GAC1CuD,EAAkBI,EAAmB,GACrCH,EAAmBG,EAAmB,GAClCE,EAAiBF,EAAmB,GACxCrY,QAAQC,IAAI,mBAAqBsY,GACjCJ,EAA8C,QAAnBD,EAA6BtB,EACxDwB,EAAgBF,EAAmBK,EAAiB3B,EAAiB,IAAM,KAIzE4B,EAAqBb,EAAoBD,EAAmBb,EAAOI,aACnEwB,EAA2C,QAApB/D,EAAIxL,KAAKwP,QAAwC,SAApBhE,EAAIxL,KAAKwP,QAAyC,QAApBhE,EAAIxL,KAAKwP,OAAmBR,EAAmBrB,EAAOI,aAAeiB,EAAmBD,EAAkBpB,EAAOK,cACnMyB,EAA6Bf,EAA4BF,EAAmBb,EAAOI,aACnF2B,EAAmD,QAApBlE,EAAIxL,KAAKwP,QAAwC,SAApBhE,EAAIxL,KAAKwP,QAAyC,QAApBhE,EAAIxL,KAAKwP,OAAmBP,EAA2BtB,EAAOI,aAAekB,EAA2BF,EAAkBpB,EAAOK,cAE/NxC,EAAImE,mBAAqB1O,KAAK2O,IAAIN,EAAoBC,GACtD/D,EAAIqE,2BAA6B5O,KAAK2O,IAAIF,EAA8BD,GAGxEjC,EAAgBzS,KAAK,CACnByD,GAAIgN,EACJsE,SAAU,CAACtE,EAAIrP,KAAMqP,EAAIhD,YAAagD,EAAIzG,SAC1CgL,SAAU,CACRC,KAAM,CAAC9B,EAAeP,EAAOI,aAAc,OAC3CkC,KAAM,CAACvC,EAAewC,QAAQ,GAAI,SAEpCC,MAAO,CACLC,MAAO,CAAC5B,EAAkBhD,EAAIxL,KAAKwP,QACnC1T,QAAS,CAACqJ,EAAcqG,EAAIxL,KAAKwP,QACjCa,OAAQ,CAACtB,EAAiBvD,EAAIxL,KAAKwP,SAErCc,YAAa,CACXF,MAAO,CAAC3B,EAAmBjD,EAAIO,MAAMyD,OAAQF,GAC7CxT,QAAS,CAAC6R,EAAOI,aAAeO,EAAkB,MAAOX,EAAOI,aAAeO,GAC/E+B,OAAQ,CAACrB,EAAkBxD,EAAIxL,KAAKwP,OAAQD,IAE9CgB,cAAe,CACbH,MAAO,CAAC1B,EAA2BlD,EAAIO,MAAMyD,OAAQC,GACrD3T,QAAS,CAAC6R,EAAOI,aAAeM,EAA0B,MAAOV,EAAOI,aAAeM,GACvFgC,OAAQ,CAACpB,EAA0BzD,EAAIxL,KAAKwP,OAAQE,IAEtDc,IAAK,CACHJ,MAAO,CAACzB,EAAgB,KACxB7S,QAAS,CAACyS,EAAU,KACpB8B,OAAQ,CAACnB,EAAe,MAE1BuB,QACE3H,EAAA7O,EAAAC,cAAA,OAAKC,UAAU,iBACb2O,EAAA7O,EAAAC,cAACwW,EAAA,EAAD,CACEpR,QAAS,WAKP,OAJApC,EAAKtD,SAAS,CACZ8P,oBAAoB,EACpBG,iBAAkBiB,EAAUS,MAEvB,GAET9M,QAAQ,UACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJgH,EAAA7O,EAAAC,cAAA,KAAGC,UAAU,uBACL,IACV2O,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAACwW,EAAA,EAAD,CACEpR,QAAS,WAGP,OAAO,GAETb,QAAQ,UACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJgH,EAAA7O,EAAAC,cAAA,KAAGC,UAAU,gBACL,IACV2O,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAACwW,EAAA,EAAD,CACEpR,QAAS,WAKP,OAJApC,EAAKtD,SAAS,CACZ4P,sBAAsB,KAGjB,GAET/K,QAAQ,SACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJgH,EAAA7O,EAAAC,cAAA,KAAGC,UAAU,iBACL,gDApKVoR,EAAI,cAAGA,EAAIT,EAAU/J,iDAArBwK,kBAA6BA,mDA0K9BiC,qIAGGsC,GAQV,IAPA,IAEIzC,EAFa,GAGbsD,GAAkB,KAClBC,GAAiB,KACjBC,GAAoB,KAEhBtF,EAPS,GAOOA,EANT,IAMuBA,GAAK,IAAM,CAG/C,IAFA,IAAI2C,EAAe,EAAG9I,EAAY,EAAGI,EAAa,EAE1CiG,EAAI,EAAGA,EAAIqE,EAASpE,aAAa3K,OAAQ0K,IAAK,CACpD,IAAIE,EAASmE,EAASpE,aAAaD,GAGnCrG,GAAauG,EAAO3L,KAAKiM,MACzBzG,GAAcmG,EAAOI,MAAME,MAG3B,IAAIkC,EAAYxC,EAAO3L,KAAKiN,MAAQtB,EAAOI,MAAMkB,MAAQ1B,EACzD2C,GAAgBvC,EAAOC,QAAQwC,gBAAgB7C,GAAG,GAAK4C,EAIzD,IAAI2C,EAAavL,YAAagG,EAAG/F,EAAY,EAAG0I,GAE7CyC,EAAiBG,EAAW,KAC7BH,EAAiBG,EAAW,GAC5BF,EAAgBE,EAAW,GAAK1L,EAEhCyL,EAAmBzL,EAAYI,GAD/B6H,EAAW9B,IAKf,MAAO,CAAC8B,EAAUuD,EAAeC,wCAGtBf,GAQX,IAPA,IAEIzC,EAFa,GAGb0D,GAAmB,KACnBC,GAAkB,KAClBC,GAAqB,KAEjB1F,EAPS,GAOOA,EANT,IAMuBA,GAAK,IAAM,CAG/C,IAFA,IAAI2F,EAAgB,EAAG9L,EAAY,EAAGI,EAAa,EAE3CiG,EAAI,EAAGA,EAAIqE,EAASpE,aAAa3K,OAAQ0K,IAAK,CACpD,IAAIE,EAASmE,EAASpE,aAAaD,GAGnCrG,GAAauG,EAAO3L,KAAKiM,MACzBzG,GAAcmG,EAAOI,MAAME,MAG3B,IAAIkF,EAAaxF,EAAOI,MAAMkB,MAAQtB,EAAO3L,KAAKiN,MAAQ1B,EAC1D2F,GAAiBvF,EAAOC,QAAQwC,gBAAgB7C,GAAG,GAAK4F,EAI1D,IAAIL,EAAa5L,YAAaqG,EAAGnG,EAAW8L,EAAe,GAExDH,EAAkBD,EAAW,KAC9BC,EAAkBD,EAAW,GAC7BE,EAAiBF,EAAW,GAAKtL,EAEjCyL,EAAoB7L,GADpBiI,EAAW9B,GACgC/F,GAI/C,MAAO,CAAC6H,EAAU2D,EAAgBC,+CAKlC,IADA,IAAIG,EAAO,EACH7F,EAAI,EAAGA,EAAI/U,KAAKJ,MAAMmF,UAAUuP,UAAU/J,OAAQwK,IACrD/U,KAAKJ,MAAMmF,UAAUuP,UAAUS,GAAGoE,qBACnCyB,GAAQ5a,KAAKJ,MAAMmF,UAAUuP,UAAUS,GAAGoE,oBAI9C,OAAOyB,gDAKP,IADA,IAAIA,EAAO,EACH7F,EAAI,EAAGA,EAAI/U,KAAKJ,MAAMmF,UAAUuP,UAAU/J,OAAQwK,IACrD/U,KAAKJ,MAAMmF,UAAUuP,UAAUS,GAAGsE,6BACnCuB,GAAQ5a,KAAKJ,MAAMmF,UAAUuP,UAAUS,GAAGsE,4BAI9C,OAAOuB,uCAGIC,EAAMC,EAAYC,EAASC,GACtC,IAD6CnX,EACzCoX,EAAQ,EADiCnX,EAAAC,EAE7B8W,EAAK/F,MAFwB,IAE7C,IAAAhR,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA2B,CACzB4W,GADyBpX,EAAAd,MACZ+X,GAAYC,GAASC,IAHS,MAAAtW,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAK7C,OAAOqW,4CAuBS,IAAAtU,EAAA3G,KAmKhB,MAlKqB,CACnB,CACE2H,OAAQ,WAAYuT,SAAU,WAAYC,SAAU,IAAKC,MAAO,CAAEC,WAAc,SAChFC,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,gBACjFE,KAAM,SAAAH,GACJ,OACElJ,EAAA7O,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,SACpBtJ,EAAA7O,EAAAC,cAAA,SAAI8X,EAAIzY,MAAM,IAAOuP,EAAA7O,EAAAC,cAAA,WACpBiD,EAAKoL,mBAAmByJ,EAAIzY,MAAM,IAAIuP,EAAA7O,EAAAC,cAAA,WACtCiD,EAAKuL,aAAasJ,EAAIzY,MAAM,IAC7BuP,EAAA7O,EAAAC,cAAA,KAAG6O,KAAM,uCAAyCiJ,EAAIzY,MAAM,IAA5D,UAKR,CACE4E,OAAQ,YAAauT,SAAU,WAAYC,SAAU,IAAKU,YAAY,EACtEF,KAAM,SAAAH,GAAG,OACPlJ,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB,IAAM9R,IAAYQ,aAAakR,EAAIzY,MAAMyW,KAAK,GAAI,IAErDlH,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM0W,KAAK,GAAI,GAAK,IAAM+B,EAAIzY,MAAM0W,KAAK,MAI7E9Q,OAAQ,SAAAkS,GAAI,OACVvI,EAAA7O,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpBtJ,EAAA7O,EAAAC,cAAA,cACGoG,IAAYQ,aAAa3D,EAAKmV,aAAajB,EAAM,WAAY,OAAQ,GAAI,GAAK,IAAMA,EAAK/F,KAAK,GAAV,cAAiC,MAI5HiH,WAAY,SAACtY,EAAGuY,GAAQ,OAAOA,EAAE,GAAKvY,EAAE,KAE1C,CACEkE,OAAQ,QAASuT,SAAU,QAASC,SAAU,IAAKU,YAAY,EAC/DF,KAAM,SAAAH,GAAG,OACPlJ,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM6W,MAAM,GAAI,GAAK,IAAM4B,EAAIzY,MAAM6W,MAAM,IAE3EtH,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAMuC,QAAQ,GAAI,GAAK,IAAMkW,EAAIzY,MAAMuC,QAAQ,IAE/EgN,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM8W,OAAO,GAAI,GAAK,IAAM2B,EAAIzY,MAAM8W,OAAO,MAIjFkC,WAAY,SAACtY,EAAGuY,GAAQ,OAAOA,EAAE,GAAKvY,EAAE,IACxCkF,OAAQ,SAAAkS,GAAI,OACVvI,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAArB,YAGAtJ,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAArB,cAMN,CACEjU,OAAQ,eAAgBuT,SAAU,cAAeC,SAAU,IAAKU,YAAY,EAC5EF,KAAM,SAAAH,GAAG,OACPlJ,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM6W,MAAM,GAAI,GAAK,IAAM4B,EAAIzY,MAAM6W,MAAM,GAAK,MAAQ9P,IAAYQ,aAAakR,EAAIzY,MAAM6W,MAAM,GAAI,GAAK,KAE1ItH,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAMuC,QAAQ,GAAI,GAAK,IAAMkW,EAAIzY,MAAMuC,QAAQ,GAAK,MAAQwE,IAAYQ,aAAakR,EAAIzY,MAAMuC,QAAQ,GAAI,GAAK,KAEhJgN,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM8W,OAAO,GAAI,GAAK,IAAM2B,EAAIzY,MAAM8W,OAAO,GAAK,MAAQ/P,IAAYQ,aAAakR,EAAIzY,MAAM8W,OAAO,GAAI,GAAK,OAIjJkC,WAAY,SAACtY,EAAGuY,GAAQ,OAAOA,EAAE,GAAKvY,EAAE,IACxCkF,OAAQ,SAAAkS,GAAI,OACVvI,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAa3D,EAAKmV,aAAajB,EAAM,cAAe,UAAW,GAAI,GAAK,IAAMA,EAAK/F,KAAK,GAAV,oBAAuC,IAEpIxC,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAa3D,EAAKsV,oBAAqB,GAAK,IAAMpB,EAAK/F,KAAK,GAAV,oBAAuC,OAK9G,CACEnN,OAAQ,iBAAkBuT,SAAU,gBAAiBC,SAAU,IAAKU,YAAY,EAChFF,KAAM,SAAAH,GAAG,OACPlJ,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM6W,MAAM,GAAI,GAAK,IAAM4B,EAAIzY,MAAM6W,MAAM,GAAK,MAAQ9P,IAAYQ,aAAakR,EAAIzY,MAAM6W,MAAM,GAAI,GAAK,KAE1ItH,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAMuC,QAAQ,GAAI,GAAK,IAAMkW,EAAIzY,MAAMuC,QAAQ,GAAK,MAAQwE,IAAYQ,aAAakR,EAAIzY,MAAMuC,QAAQ,GAAI,GAAK,KAEhJgN,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM8W,OAAO,GAAI,GAAK,IAAM2B,EAAIzY,MAAM8W,OAAO,GAAK,MAAQ/P,IAAYQ,aAAakR,EAAIzY,MAAM8W,OAAO,GAAI,GAAK,OAIjJkC,WAAY,SAACtY,EAAGuY,GAAQ,OAAOA,EAAE,GAAKvY,EAAE,IACxCkF,OAAQ,SAAAkS,GAAI,OACVvI,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAa3D,EAAKmV,aAAajB,EAAM,gBAAiB,UAAW,GAAI,GAAK,IAAMA,EAAK/F,KAAK,GAAV,sBAAyC,IAExIxC,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAa3D,EAAKuV,sBAAuB,GAAK,IAAMrB,EAAK/F,KAAK,GAAV,sBAAyC,OAKlH,CACEnN,OAAQ,MAAOuT,SAAU,MAAOC,SAAU,GAAIU,YAAY,EAC1DF,KAAM,SAAAH,GAAG,OACPlJ,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM6W,MAAM,GAAI,GAAK,GAAK4B,EAAIzY,MAAM6W,MAAM,IAE1EtH,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAMuC,QAAQ,GAAI,GAAK,GAAKkW,EAAIzY,MAAMuC,QAAQ,IAE9EgN,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAakR,EAAIzY,MAAM8W,OAAO,GAAI,GAAK,GAAK2B,EAAIzY,MAAM8W,OAAO,MAIhFkC,WAAY,SAACtY,EAAGuY,GAAQ,OAAOA,EAAIvY,GACnCkF,OAAQ,SAAAkS,GAAI,OACVvI,EAAA7O,EAAAC,cAAA,WACE4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAAsE,GAAzD3D,EAAKmV,aAAajB,EAAM,gBAAiB,UAAW,GAAUlU,EAAKmV,aAAajB,EAAM,WAAY,OAAQ,GAAK,IAAK,GAAK,KAErJvI,EAAA7O,EAAAC,cAAA,WACA4O,EAAA7O,EAAAC,cAAA,OAAK0X,MAAO,CAAEQ,MAAO,UAClB9R,IAAYQ,aAA0C,GAA7B3D,EAAKuV,sBAA6BvV,EAAKmV,aAAajB,EAAM,WAAY,OAAQ,GAAK,IAAK,GAAK,QAK/H,CACElT,OAAQ,UAAWuT,SAAU,UAAWiB,SAAU,GAAIhB,SAAU,GAAIiB,UAAU,EAAOP,YAAY,gDAQrG7b,KAAKoD,SAAS,CACZ4P,sBAAsB,gDAKxBhT,KAAKJ,MAAM+S,kBAAkB3S,KAAKI,MAAM6S,oBACxCjT,KAAKyS,8DAILzS,KAAKoD,SAAS,CACZ8P,oBAAoB,qCAIf,IAAA/L,EAAAnH,KAEH4K,EADmB5K,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAC/B2F,WAE9ByR,EACF/J,EAAA7O,EAAAC,cAAC4Y,EAAA,EAAD,CACExb,cAAed,KAAKJ,MAAM2c,sBAC1BlZ,WAAYrD,KAAKJ,MAAM4c,mBACvBrZ,eAAgBnD,KAAKJ,MAAMuD,eAC3B4B,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,WAIrByY,EACFnK,EAAA7O,EAAAC,cAACgZ,EAAA,EAAD,CACE5b,cAAed,KAAKJ,MAAM+c,uBAC1BtZ,WAAYrD,KAAKJ,MAAMgd,oBACvBtV,kBAAmBtH,KAAKJ,MAAM0H,kBAC9BuC,kBAAmB7J,KAAKJ,MAAMiK,kBAC9B9E,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,WAIrB6Y,EACFvK,EAAA7O,EAAAC,cAACoZ,EAAA,EAAD,CACEhc,cAAed,KAAKI,MAAM4S,qBAC1B3P,WAAYrD,KAAKyS,kBACjBQ,mBAAoBjT,KAAKI,MAAM6S,mBAC/BN,kBAAmB3S,KAAK2S,oBAItBoK,EAAmBzK,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,CAAShV,GAAG,gBAAZ,YAIzB,OACEsK,EAAA7O,EAAAC,cAAA,OAAKC,UAAU,gBACb2O,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,CAAMzV,OAAK,GACT+K,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,KACE1K,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,CAAKxV,GAAI,IACP8K,EAAA7O,EAAAC,cAACuZ,EAAA,EAAD,CACElc,MAAM,gCACN+P,aACEwB,EAAA7O,EAAAC,cAAA,YACE4O,EAAA7O,EAAAC,cAACwW,EAAA,EAAD,CAGEjS,QAAQ,OACRc,MAAI,EACJiC,SAAO,EACPlC,QAAS,kBAAM3B,EAAKvH,MAAMsd,uBAE1B5K,EAAA7O,EAAAC,cAAA,KAAGC,UAAW,eARhB,cAUA2O,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,CAAgBG,UAAU,SAASC,QAASL,GAC1CzK,EAAA7O,EAAAC,cAACwW,EAAA,EAAD,CACEjS,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAENyJ,EAAA7O,EAAAC,cAAA,KAAGC,UAAW,0BAPhB,WAYNiN,SAAUhG,EAAa,UAA2B,IAAfA,EAAmB,GAAK,KAC3DuG,QAASnR,KAAKI,MAAM0U,KAClBxC,EAAA7O,EAAAC,cAAC2Z,EAAA,EAAD,CACE1Z,UAAU,aACVmR,KAAM9U,KAAKI,MAAM0U,KACjB+G,YAAU,EACVyB,QAAStd,KAAKud,kBACdC,gBAAiB,GACjBC,WAAY3T,IAAY4T,cAAc,SAAU1d,KAAKJ,MAAMmF,aAE7D,OAEH/E,KAAKJ,MAAM2c,sBAAwBF,EAAiB,GACpDrc,KAAKJ,MAAM+c,uBAAyBF,EAAkB,GACtDzc,KAAKI,MAAM4S,qBAAuB6J,EAAiC,KAGxEvK,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,KACE1K,EAAA7O,EAAAC,cAACsZ,EAAA,EAAD,CAAKxV,GAAI,IACP8K,EAAA7O,EAAAC,cAACia,EAAA,EAAD,CACEtK,iBAAkBrT,KAAKI,MAAMiT,iBAC7BtO,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,SACrB+O,WAAY/S,KAAK+S,wBA3sBL5J,aAqtBbwI,yKC7uBM0D,aACpB,SAAAA,EAAYC,EAAesI,EAAaC,EAAcC,GAAQhe,OAAAie,EAAA,EAAAje,CAAAE,KAAAqV,GAC7DrV,KAAKsV,cAAgBA,EACrBtV,KAAK4d,YAAcA,EACnB5d,KAAK6d,aAAeA,EACpB7d,KAAK8W,aAAe,GAGpB9W,KAAKge,OAAS,EACdhe,KAAKie,QAAU,EACfje,KAAK8d,MAAQA,EAGb9d,KAAKke,SAAW,EAChBle,KAAKme,UAAY,EACjBne,KAAKoe,QAAU,EACfpe,KAAKoQ,EAAIpQ,KAAKke,SAAWle,KAAKme,4GAIX9P,EAAMiL,4FACrB+E,EAAiBjQ,YAAoBC,EAAMiQ,EAAYte,KAAKsV,eAC5DiJ,EAAenQ,YAAoBC,EAAMmQ,EAAQxe,KAAK4d,aACtDa,EAAgBrQ,YAAoBC,EAAMmQ,EAAQxe,KAAK6d,uBAEpCxP,EAAKG,IAAIkQ,WAAW1e,KAAKsV,6BAA5CqJ,kBACgBN,EAAeO,QAAQC,cAAc1e,qBAArDie,mBACiBG,EAAaK,QAAQE,UAAU9e,KAAKsV,eAAenV,sBAApE+d,mBACkBO,EAAcG,QAAQE,UAAU9e,KAAKsV,eAAenV,sBAAtEge,UAGQ1T,KAAAsU,IAAG,GAAM,MAAO,GAAKJ,EAAUlU,KAAAsU,IAAG,GAAM,IAAK,IACxDZ,EAAYQ,GAIb3e,KAAKme,UAAYA,EAAS1T,KAAAsU,IAAG,GAAM/e,KAAKgf,YAAYhf,KAAK6d,eACzD7d,KAAKoe,QAAUA,EAAO3T,KAAAsU,IAAG,GAAM,IAC/B/e,KAAKke,SAAWA,GAAYle,KAAK4d,cAAgB1P,IAArBzD,KAAAsU,IAAmC,GAAM,IAAzCtU,KAAAsU,IAA8C,GAAM,IAChF/e,KAAKoQ,EAAIpQ,KAAKme,UAAYne,KAAKke,mBAML7G,IAAgBC,mBAAmBtX,KAAK4d,4BAAlE5d,KAAKuX,8BACsBF,IAAgBC,mBAAmBtX,KAAK6d,sBAAnE7d,KAAKwX,qBAELlX,QAAQC,IAAI,2BAA6B+Y,EAAS9P,KAAKwP,OAAS,KAAOhZ,KAAKuX,aAAe,SAAW+B,EAAS/D,MAAMyD,OAAS,KAAOhZ,KAAKwX,cAAgB,oJAI1J,OAAGxX,KAAK6d,eAAiB3P,IACjB,EACGlO,KAAK6d,eAAiB1P,IACzB,EAGD,2CAKQ8Q,GAEf,IAAIC,EAAWlf,KAAKoX,WACpBpX,KAAKmf,eAAeF,GAEpB,IAAIG,EAAUpf,KAAK8d,MAAQ9d,KAAKoe,QAC5BJ,EAAShe,KAAKke,SAAWkB,EAAUpf,KAAKme,UAAYiB,EAAUH,EAC9DhB,EAAUD,EAASiB,EAKvB,OAFAjf,KAAKmf,eAAeD,GAEb,CAAClB,EAAQC,wCAGJoB,EAAYC,GACxB,IAAIC,EAAWF,GAAcrf,KAAKoe,QAAUpe,KAAKme,WAOjD,OALAne,KAAKme,WAAakB,EAClBrf,KAAKke,UAAYoB,EACjBtf,KAAKoe,SAAWmB,EAChBvf,KAAKoQ,EAAIpQ,KAAKke,SAAWle,KAAKme,UAEvBoB,0CAGQA,GACf,IAEIF,EAAaE,GAFGvf,KAAKme,UAAYne,KAAKoe,SAGtCkB,EAAYC,GAFEvf,KAAKke,SAAWle,KAAKoe,SASvC,OALApe,KAAKme,WAAakB,EAClBrf,KAAKke,UAAYoB,EACjBtf,KAAKoe,SAAWmB,EAChBvf,KAAKoQ,EAAIpQ,KAAKke,SAAWle,KAAKme,UAEvB,CAACkB,EAAYC,oCAGZA,GAER,IAGIE,EAHa/U,KAAKC,IAAI1K,KAAKoQ,GAAKpQ,KAAKke,SAAWoB,GAAatf,KAAKme,YAG/B,EAAIne,KAAK8W,aAAe,KAO/D,OAJA9W,KAAKme,WAAaqB,EAClBxf,KAAKke,UAAYoB,EACjBtf,KAAKoQ,EAAIpQ,KAAKme,UAAYne,KAAKke,SAExBsB,oCAGEH,GAET,IAGII,EAHYhV,KAAKC,IAAI1K,KAAKoQ,GAAKpQ,KAAKme,UAAYkB,GAAcrf,KAAKke,WAGlC,EAAIle,KAAK8W,aAAe,KAO7D,OAJA9W,KAAKme,WAAakB,EAClBrf,KAAKke,UAAYuB,EACjBzf,KAAKoQ,EAAIpQ,KAAKme,UAAYne,KAAKke,SAExBuB,wCAGMC,EAAaC,EAAWC,GACrC,OAAQF,EAAcE,GAAeD,EAAYD,0CAInCT,GACd,IAAI7O,EAAIpQ,KAAKke,SAAWle,KAAKme,UAC7Bne,KAAKme,UAAY1T,KAAKsF,KAAKK,EAAI6O,GAC/Bjf,KAAKke,SAAWzT,KAAKsF,KAAKK,EAAI6O,GAC9Bjf,KAAKoQ,EAAIpQ,KAAKme,UAAYne,KAAKke,4CAI/B,OAAOle,KAAKke,SAAWle,KAAKme,ohRCtJTzI,aACpB,SAAAA,EAAYmK,EAAiBlK,EAAcC,EAAaC,GAAe/V,OAAAie,EAAA,EAAAje,CAAAE,KAAA0V,GACtE1V,KAAK6f,gBAAkBA,EACvB7f,KAAK2V,aAAeA,EACpB3V,KAAK4V,YAAcA,EACnB5V,KAAK6V,aAAeA,oGAIDxH,EAAMiL,mEAEzBhZ,QAAQC,IAAI,yKAIGoO,GACf,IAAImR,GAAgB9f,KAAK6f,gBAAkB7f,KAAK4V,aAAejH,EAAe3O,KAAK2V,aACnF,MAAO,CAAClL,KAAK2O,IAAI,EAAG0G,GAAerV,KAAK2O,IAAI,EAAG0G,GAAgBnR,0HCjB5CmH,aACpB,SAAAA,EAAYiK,EAAgBhK,EAAeC,EAAYH,GAAe/V,OAAAie,EAAA,EAAAje,CAAAE,KAAA8V,GACrE9V,KAAK+f,eAAiBA,EACtB/f,KAAK+V,cAAgBA,EACrB/V,KAAKgW,WAAaA,EAClBhW,KAAK6V,aAAeA,oGAIDxH,EAAMiL,mEAEzBhZ,QAAQC,IAAI,0KAIGoO,GACf,IAAImR,EAAe9f,KAAK+f,eAAiB/f,KAAKgW,WAAahW,KAAK+V,cAAgBpH,EAChF,MAAO,CAAClE,KAAK2O,IAAI,EAAG0G,GAAerV,KAAK2O,IAAI,EAAG0G,GAAgBnR,kICjB5CsH,aACpB,SAAAA,EAAYC,EAAQC,EAAQC,EAAUC,EAAQC,EAAcC,GAAKzW,OAAAie,EAAA,EAAAje,CAAAE,KAAAiW,GAChEjW,KAAKkW,OAASA,EACdlW,KAAKmW,OAASA,EACdnW,KAAKoW,SAAWA,EAChBpW,KAAKqW,OAASA,EACdrW,KAAKsW,aAAeA,EACpBtW,KAAKuW,GAAKA,EACVvW,KAAKggB,WAAa,IAAI3Q,sGAIHhB,EAAMiL,mEAEzBhZ,QAAQC,IAAI,6KAIGoO,GACf,IAAIsR,EAAmBjgB,KAAKoW,SAAWpW,KAAKggB,WAAWE,aAAalgB,KAAKkW,OAAS,OAAS,MAAOvH,EAAc3O,KAAKqW,OAAQrW,KAAKsW,aAAe,IAAK,IAAMtW,KAAKuW,GAAK,KAEtK,MAAO,CAAC0J,EAAkBA,EAAmBtR,0HCrB1B6H,aACpB,SAAAA,EAAY5H,EAAW+I,EAAW3I,EAAY2L,GAAa7a,OAAAie,EAAA,EAAAje,CAAAE,KAAAwW,GAC1DxW,KAAK4O,UAAYA,EACjB5O,KAAK2X,UAAYA,EACjB3X,KAAKgP,WAAaA,EAClBhP,KAAK2a,WAAaA,oGAICtM,EAAMiL,mEAEzBhZ,QAAQC,IAAI,8LAIGoO,GACf,IAAImR,EAAe9f,KAAK4O,UAAY5O,KAAKgP,WAAaL,EACtD,MAAO,CAACmR,EAAcA,EAAenR,0HCblB+H,aACpB,SAAAA,EAAYsH,EAAQC,EAASpI,EAAce,EAAUC,EAAUC,GAAehX,OAAAie,EAAA,EAAAje,CAAAE,KAAA0W,GAC7E1W,KAAKge,OAASA,EACdhe,KAAKie,QAAUA,EACfje,KAAK6V,aAAeA,EACpB7V,KAAK4W,SAAWA,EAChB5W,KAAK6W,SAAWA,EAChB7W,KAAK8W,aAAeA,EAGpB9W,KAAKmgB,iBAAmBnC,EAASC,EAAUpI,EAE3C7V,KAAKogB,SAAWpgB,KAAKmgB,iBAAmB,EACxCngB,KAAKqgB,SAAWrgB,KAAKogB,SAAWvK,EAChC7V,KAAKsgB,EAAI7V,KAAKsF,KAAK/P,KAAKogB,SAAWpgB,KAAKqgB,UACxCrgB,KAAKugB,GAAKvgB,KAAKogB,SAAWpgB,KAAKqgB,SAC/BrgB,KAAK2P,EAAI3P,KAAKsgB,EAAI7V,KAAKsF,KAAK6G,GAC5B5W,KAAKwgB,EAAIxgB,KAAKsgB,EAAI7V,KAAKsF,KAAK8G,GAC5B7W,KAAKygB,UAAYzgB,KAAKugB,GAAKvgB,KAAKwgB,EAAIxgB,KAAK2P,EACzC3P,KAAK0gB,UAAY1gB,KAAKugB,GAAKvgB,KAAK2P,EAAI3P,KAAKwgB,EACzCxgB,KAAK2gB,KAAO9K,EAAegB,EAAW,GAAK7W,KAAKsgB,EAAI7V,KAAKsF,KAAK8F,GAAgB7V,KAAKwgB,GAAK3K,EACxF7V,KAAK4gB,KAAO/K,EAAegB,EAAW7W,KAAKygB,UAAYzgB,KAAKsgB,EAAI7V,KAAKsF,KAAK8F,GAAgB7V,KAAK2P,EAC/F3P,KAAK6gB,GAAK7gB,KAAK2gB,KAAO3gB,KAAK4gB,KAC3B5gB,KAAK8gB,WAAajL,EAAee,EAAW5W,KAAKmgB,iBAAmBngB,KAAK6gB,GAAK7gB,KAAKmgB,kBAAoBtK,EAAe7V,KAAK0gB,6GAIxGrS,EAAMiL,mEACzBhZ,QAAQC,IAAI,iMAIG0e,GACf,IAAUlc,EAeV,OAdIkc,EAAWjf,KAAK4W,UAEf,EACJ7T,EAFI/C,KAAK0gB,UAAY1gB,KAAK8gB,WAEd7B,GACFA,GAAYjf,KAAK4W,UAAYqI,GAAYjf,KAAK6W,SAGxD9T,GAFK/C,KAAKsgB,EAAI7V,KAAKsF,KAAKkP,GAAYjf,KAAKwgB,GAAKxgB,KAAK8gB,WAEvC7B,GADPjf,KAAKsgB,EAAI7V,KAAKsF,KAAKkP,GAAYjf,KAAK2P,GAAK3P,KAAK8gB,WAEzC7B,EAAWjf,KAAK6W,WACtB,EAEJ9T,EADI/C,KAAKygB,UAAYzgB,KAAK8gB,YAIpB,CAAC/d,EAAOA,EAAQkc,8CCrDzBxN,EAAAsP,EAAAC,EAAA,sBAAAtM,IAAA,IAAMuM,EAAM,CACV1S,QAAS,6CACTyK,OAAQ,OAEJxK,EAAM,CACVD,QAAS,6CACTyK,OAAQ,OAyHGtE,EAAgB,CAC3B/O,KAAM,wBACNsR,UAAW,2BACXzN,KAAMyX,EACN1L,MAAO/G,EACPmI,WAAY,KACZzB,aAAc,CACZ,CACE/O,KAAM,YACNqD,KAAM,CACJiM,MAAO,IACPgB,MAAO,GAETlB,MAAO,CACLE,MAAO,EACPgB,MAAO,GAETG,SAAU,KACVC,SAAU,KACVC,aAAc,IAEhB,CACE3Q,KAAM,SACNqD,KAAM,CACJiM,MAAO,IACPgB,MAAO,GAETlB,MAAO,CACLE,MAAO,EACPgB,MAAO,GAETP,QAAQ,EACRC,QAAQ,EACRC,SAAU,IACVC,OAAQ,KACRC,aAAc,GACdC,GAAI,GACJV,aAAc,uulBC9FLqL,cA3Db,SAAAA,EAAYthB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAkhB,IACjBrhB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAohB,GAAA/gB,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXihB,aAAc,CAAEte,MAAO,UAAWyB,MAAO,YAJ1B3E,0EASjB,OAAOG,KAAKJ,MAAM0hB,MAAMlP,IAAI,SAACjM,EAAM6U,GACjC,MAAO,CAAEjY,MAAOoD,EAAM3B,MAAO2B,sCAIxB,IAAAO,EAAA1G,KACP,OACEuhB,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAO,UACPoQ,QACEoQ,EAAA9d,EAAAC,cAAA,WACE6d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,IACP+Z,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,oBACb4d,EAAA9d,EAAAC,cAAA,mCAIN6d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,IACT+Z,EAAA9d,EAAAC,cAAC+d,EAAA,EAAD,CACE7b,YAAY,OACZD,KAAK,OACL5C,MAAO/C,KAAKI,MAAMihB,aAClB5a,QAASzG,KAAK0hB,WACdrb,SAAU,SAAAtD,GACR2D,EAAKtD,SAAS,CAAEie,aAActe,SAKpCwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,IACP+Z,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,OACRc,MAAI,EAEJD,QAAS,kBAAMpC,EAAK9G,MAAM+hB,eAAejb,EAAKtG,MAAMihB,aAAate,SAEjEwe,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,eANhB,gCA3CiBwF,qBCyKlByY,cA5Kb,SAAAA,EAAYhiB,GAAQ,OAAAE,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA4hB,GAAA9hB,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA8hB,GAAAzhB,KAAAH,KACZJ,mFAGUiiB,GAChB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAO3L,KAAKiM,MAAQsM,OAAOF,GAC3B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,6CAG/B0M,GAChB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAO3L,KAAKiN,MAAQsL,OAAOF,GAC3B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,8CAG9B0M,GACjB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOI,MAAME,MAAQsM,OAAOF,GAC5B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,8CAG9B0M,GACjB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOI,MAAMkB,MAAQsL,OAAOF,GAC5B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,4CAGhC0M,GACf,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOK,IAAIC,MAAQsM,OAAOF,GAC1B1M,EAAOC,QAAQ0I,MAAQiE,OAAOF,GAAY1M,EAAOK,IAAIiB,MACrDzW,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,4CAGhC0M,GACf,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOK,IAAIiB,MAAQsL,OAAOF,GAC1B1M,EAAOC,QAAQ0I,MAAQ3I,EAAOK,IAAIC,MAAQsM,OAAOF,GACjD7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,oCAGxC,IAAAtV,EAAAG,KACDiiB,EAAkBV,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAASxZ,GAAG,gBAAZ,0BAGxB,OACEuZ,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAO,YACP+P,aACEyQ,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAgBrE,UAAU,SAASC,QAAS6E,GAC1CV,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EACPnC,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMsiB,kBAAkBriB,EAAKD,MAAMob,SAEvDuG,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,kBAIpBwN,QACEoQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,eAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYtY,KAAKiM,MACnCpP,SAAU,SAACC,GAAD,OAAWzG,EAAKsiB,kBAAkB7b,EAAMC,OAAOxD,YAI/Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,eAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYtY,KAAKiN,MACnCpQ,SAAU,SAACC,GAAD,OAAWzG,EAAKuiB,kBAAkB9b,EAAMC,OAAOxD,YAI/Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,gBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYvM,MAAME,MACpCpP,SAAU,SAACC,GAAD,OAAWzG,EAAKwiB,mBAAmB/b,EAAMC,OAAOxD,YAIhEwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,gBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYvM,MAAMkB,MACpCpQ,SAAU,SAACC,GAAD,OAAWzG,EAAKyiB,mBAAmBhc,EAAMC,OAAOxD,YAIhEwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,cAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYtM,IAAIC,MAClCpP,SAAU,SAACC,GAAD,OAAWzG,EAAK0iB,iBAAiBjc,EAAMC,OAAOxD,YAI9Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,cAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYtM,IAAIiB,MAClCpQ,SAAU,SAACC,GAAD,OAAWzG,EAAK2iB,iBAAiBlc,EAAMC,OAAOxD,YAI9Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,YAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,IACbO,KAAK,SACLC,IAAK,EACLrD,MAAO,GACPsD,SAAU,SAAAC,GACRzG,EAAKuD,SAAS,CACZqf,UAAWV,OAAOzb,EAAMC,OAAOxD,wBAhKvBoG,aCgGbuZ,cA/Fb,SAAAA,EAAY9iB,GAAQ,OAAAE,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA0iB,GAAA5iB,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA4iB,GAAAviB,KAAAH,KACZJ,oFAGWiiB,GACjB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOI,MAAME,MAAQsM,OAAOF,GAC5B1M,EAAOC,QAAQyK,gBAAkBkC,OAAOF,GACxC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,gDAG5B0M,GACnB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOQ,aAAeoM,OAAOF,GAC7B1M,EAAOC,QAAQO,aAAeoM,OAAOF,GACrC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,+CAG7B0M,GAClB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOS,YAAcmM,OAAOF,GAC5B1M,EAAOC,QAAQQ,YAAcmM,OAAOF,GACpC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,oCAGxC,IAAAtV,EAAAG,KACDiiB,EAAkBV,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAASxZ,GAAG,gBAAZ,0BAGxB,OACEuZ,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAO,YACP+P,aACEyQ,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAgBrE,UAAU,SAASC,QAAS6E,GAC1CV,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EACPnC,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMsiB,kBAAkBriB,EAAKD,MAAMob,SAEvDuG,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,kBAIpBwN,QACEoQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,gBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYvM,MAAME,MACpCpP,SAAU,SAACC,GAAD,OAAWzG,EAAKwiB,mBAAmB/b,EAAMC,OAAOxD,YAIhEwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,kBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYnM,aAC9BtP,SAAU,SAACC,GAAD,OAAWzG,EAAK8iB,qBAAqBrc,EAAMC,OAAOxD,YAIlEwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,iBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYlM,YAC9BvP,SAAU,SAACC,GAAD,OAAWzG,EAAK+iB,oBAAoBtc,EAAMC,OAAOxD,sBArFhDoG,aCgGZ0Z,cA/Fb,SAAAA,EAAYjjB,GAAQ,OAAAE,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA6iB,GAAA/iB,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA+iB,GAAA1iB,KAAAH,KACZJ,mFAGUiiB,GAChB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAO3L,KAAKiM,MAAQsM,OAAOF,GAC3B1M,EAAOC,QAAQ2K,eAAiBgC,OAAOF,GACvC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,iDAG3B0M,GACpB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOY,cAAgBgM,OAAOF,GAC9B1M,EAAOC,QAAQW,cAAgBgM,OAAOF,GACtC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,8CAG9B0M,GACjB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOa,WAAa+L,OAAOF,GAC3B1M,EAAOC,QAAQY,WAAa+L,OAAOF,GACnC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,oCAGxC,IAAAtV,EAAAG,KACDiiB,EAAkBV,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAASxZ,GAAG,gBAAZ,0BAGxB,OACEuZ,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAO,aACP+P,aACEyQ,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAgBrE,UAAU,SAASC,QAAS6E,GAC1CV,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EACPnC,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMsiB,kBAAkBriB,EAAKD,MAAMob,SAEvDuG,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,kBAIpBwN,QACEoQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,eAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYtY,KAAKiM,MACnCpP,SAAU,SAACC,GAAD,OAAWzG,EAAKsiB,kBAAkB7b,EAAMC,OAAOxD,YAI/Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,mBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAY/L,cAC9B1P,SAAU,SAACC,GAAD,OAAWzG,EAAKijB,sBAAsBxc,EAAMC,OAAOxD,YAInEwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,gBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAY9L,WAC9B3P,SAAU,SAACC,GAAD,OAAWzG,EAAKkjB,mBAAmBzc,EAAMC,OAAOxD,sBArF9CoG,aC6Jb6Z,cA5Jb,SAAAA,EAAYpjB,GAAQ,OAAAE,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAgjB,GAAAljB,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAkjB,GAAA7iB,KAAAH,KACZJ,mFAGUiiB,GAChB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAO3L,KAAKiM,MAAQsM,OAAOF,GAC3B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,0CAGlC0M,GACb,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOe,OAAsB,MAAb2L,EAChB1M,EAAOC,QAAQc,OAAsB,MAAb2L,EACxB7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,4CAGhC0M,GACf,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOiB,SAAW2L,OAAOF,GACzB1M,EAAOC,QAAQgB,SAAW2L,OAAOF,GACjC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,0CAGlC0M,GACb,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOkB,OAAS0L,OAAOF,GACvB1M,EAAOC,QAAQiB,OAAS0L,OAAOF,GAC/B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,gDAG5B0M,GACnB,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOmB,aAAeyL,OAAOF,GAC7B1M,EAAOC,QAAQkB,aAAeyL,OAAOF,GACrC7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,sCAGtC0M,GACT,IAAI1M,EAASlG,YAAMjP,KAAKJ,MAAMkiB,aAC9B3M,EAAOoB,GAAKwL,OAAOF,GACnB1M,EAAOC,QAAQmB,GAAKwL,OAAOF,GAC3B7hB,KAAKJ,MAAMoiB,kBAAkBhiB,KAAKJ,MAAMob,MAAO7F,oCAGxC,IAAAtV,EAAAG,KACDiiB,EAAkBV,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAASxZ,GAAG,gBAAZ,0BAGxB,OACEuZ,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAO,gBACP+P,aACEyQ,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAgBrE,UAAU,SAASC,QAAS6E,GAC1CV,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EACPnC,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMsiB,kBAAkBriB,EAAKD,MAAMob,SAEvDuG,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,kBAIpBwN,QACEoQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,eAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYtY,KAAKiM,MACnCpP,SAAU,SAACC,GAAD,OAAWzG,EAAKsiB,kBAAkB7b,EAAMC,OAAOxD,YAI/Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,gBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,OACLpD,MAAO/C,KAAKJ,MAAMkiB,YAAY5L,OAAS,IAAM,IAC7C7P,SAAU,SAACC,GAAD,OAAWzG,EAAKojB,eAAe3c,EAAMC,OAAOxD,YAI5Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,aAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAY1L,SAC9B/P,SAAU,SAACC,GAAD,OAAWzG,EAAKqjB,iBAAiB5c,EAAMC,OAAOxD,YAI9Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,WAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYzL,OAC9BhQ,SAAU,SAACC,GAAD,OAAWzG,EAAKsjB,eAAe7c,EAAMC,OAAOxD,YAI5Dwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,mBAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYxL,aAC9BjQ,SAAU,SAACC,GAAD,OAAWzG,EAAKujB,qBAAqB9c,EAAMC,OAAOxD,YAIlEwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,WAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,SACbO,KAAK,SACLC,IAAK,EACLrD,MAAO/C,KAAKJ,MAAMkiB,YAAYvL,GAC9BlQ,SAAU,SAACC,GAAD,OAAWzG,EAAKwjB,WAAW/c,EAAMC,OAAOxD,sBAlJnCoG,gDCezBma,cACJ,SAAAA,EAAY1jB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAsjB,IACjBzjB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAwjB,GAAAnjB,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXmjB,aAAa,EACbC,UAAW,CAAiB,EAAhB/Y,KAAKgZ,SAAc,EAAG,GAClChB,UAAW,IACXiB,UAAW,KAGb7jB,EAAK8hB,eAAiB9hB,EAAK8hB,eAAezY,KAApBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACtBA,EAAKmiB,kBAAoBniB,EAAKmiB,kBAAkB9Y,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAKqiB,kBAAoBriB,EAAKqiB,kBAAkBhZ,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAZRA,0HAeM+jB,EAAWC,mEAE9B7jB,KAAK8jB,mBAAqB9jB,KAAKJ,MAAMyT,mBAEpCuQ,EAAUvQ,mBAAqBrT,KAAKJ,MAAMyT,kBAC3C/S,QAAQC,IAAI,0BACZP,KAAKoD,SAAS,CACZ2gB,eAAgB9U,YAAMjP,KAAKJ,MAAMyT,qBAIhCwQ,EAAUE,iBAAmB/jB,KAAKI,MAAM2jB,iBACzCzjB,QAAQC,IAAI,oBACZP,KAAKgkB,gKAOX,IAAIjf,EAAY/E,KAAKJ,MAAMmF,UAC3B,OAAOA,GAAaA,EAAUuP,WAAaC,MAAMC,QAAQzP,EAAUuP,kDAInEhU,QAAQC,IAAI,qCACZ,IAAIyU,EAAMhV,KAAKI,MAAM2jB,eACrBzjB,QAAQC,IAAIyU,GAWZ,IARA,IAAIkC,GAAkB,IAAIxV,KAAS,IAAIA,KAAKsT,EAAIiC,YAA3B,MAEjBgN,EAAcjkB,KAAKkkB,eAAelP,GAClCrG,EAAe,EACfwV,EAAgC,GAAnBF,EAAYG,KACzBC,EAAWJ,EAAYK,MACvBF,EAAOH,EAAYG,KACnBG,EAAW,GAAIC,EAAc,GAAIC,EAAe,GAC5C1P,EAAIoP,EAAYpP,EAAIsP,EAAUtP,GAAKqP,EAAM,CAG/C,IAFA,IAAI1M,EAAe,EAAGgD,EAAgB,EAAG9L,EAAY,EAAGI,EAAa,EAE7DiG,EAAI,EAAGA,EAAID,EAAIE,aAAa3K,OAAQ0K,IAAK,CAC/C,IAAIE,EAASH,EAAIE,aAAaD,GAG9BrG,GAAauG,EAAO3L,KAAKiM,MACzBzG,GAAcmG,EAAOI,MAAME,MAG3B,IAAIkC,EAAYxC,EAAO3L,KAAKiN,MAAQtB,EAAOI,MAAMkB,MAAQ1B,EACzD2C,GAAgBvC,EAAOC,QAAQwC,gBAAgB7C,GAAG,GAAK4C,EAEvD,IAAIgD,EAAaxF,EAAO3L,KAAKiN,MAAQ1B,EAAII,EAAOI,MAAMkB,MACtDiE,GAAiBvF,EAAOC,QAAQwC,gBAAgB7C,GAAG,GAAK4F,EAErC,YAAhBxF,EAAOhP,OACRwI,EAAewG,EAAOC,QAAQgC,YAKlC,IAEIsN,EAFiB3V,YAAagG,EAAG/F,EAAY,EAAG0I,GAEpB,GAAK9I,EAEjC8J,EAAgBgM,GADL9V,EAAYI,EAAa+F,GACImC,EAAiB,IAAM,IAK/DyN,EAFkBjW,YAAaqG,EAAGnG,EAAW8L,EAAe,GAE9B,GAAK1L,EAIvCuV,EAAShgB,KAAK,CAAC4L,EAAG4E,EAAG6P,EAAGlM,IACxB8L,EAAYjgB,KAAK,CAAC4L,EAAG4E,EAAG6P,EAAGF,IAC3BD,EAAalgB,KAAK,CAAC4L,EAAG4E,EAAG6P,EAAGD,IAG9B,IAAIE,EAAiB7kB,KAAK8kB,eAAeN,GACrCO,EAAkB/kB,KAAK8kB,eAAeL,GAG1CzkB,KAAKoD,SAAS,CACZmgB,aAAa,EACbyB,WAAYT,EACZU,WAAYT,EACZU,WAAYT,EACZI,eAAgBA,EAChBE,gBAAiBA,EACjBpW,aAAcA,EACd8T,UAAWwB,EAAYkB,KACvBzB,UAAWO,EAAYK,+CAUZtP,GACb,IACIoP,EADAgB,EAAQpQ,EAAI2B,WAgBhB,OAdGyO,EAAQ,EACThB,EAAO,KACCgB,EAAQ,GAChBhB,EAAO,IACCgB,EAAQ,IAChBhB,EAAO,GACCgB,EAAQ,IAChBhB,EAAO,EACCgB,EAAQ,IAChBhB,EAAO,GACCgB,EAAQ,MAChBhB,EAAO,KAGF,CACLe,KAAMpD,OAAOqD,EAAQ,GACrBd,MAAOvC,OAAe,EAARqD,GACdhB,KAAMA,0CAUKiB,GAGb,IADA,IAAIC,GAAa,KACTvQ,EAAI,EAAGA,EAAIsQ,EAAQ9a,OAAQwK,IAC9BuQ,EAAYD,EAAQtQ,GAAG6P,IACxBU,EAAYD,EAAQtQ,GAAG6P,GAI3BtkB,QAAQC,IAAI,cAAgB+kB,GAM5B,IAJA,IAEuBC,EAFnBC,EAAa,CAAErV,EAAGkV,EAAQ,GAAGlV,EAAGyU,EAAGS,EAAQ,GAAGT,GAC9Ca,EAAYD,EACZE,EAAa,KAET3Q,EAAI,EAAGA,EAAIsQ,EAAQ9a,OAAQwK,IAC9B0Q,IAAcD,GAAcH,EAAQtQ,GAAG6P,GAAiB,GAAZU,IAC7CG,EAAY,CAAEtV,EAAGkV,EAAQtQ,GAAG5E,EAAGyU,EAAGS,EAAQtQ,GAAG6P,IAG5Ca,IAAcD,GAA6B,OAAfE,GAAuBL,EAAQtQ,GAAG6P,EAAgB,GAAZU,IACnEI,EAAaH,GAGfA,EAAY,CAAEpV,EAAGkV,EAAQtQ,GAAG5E,EAAGyU,EAAGS,EAAQtQ,GAAG6P,GAO/C,OAJkB,OAAfc,IACDA,EAAaH,GAGR,CAACE,EAAWC,wDAmHnB,MA/G2B,CACzBC,MAAO,CACLxf,KAAM,OACNyf,OAAQ,OAEV7kB,MAAO,CACLkR,KAAM,sBAAqD,MAA7BjS,KAAKI,MAAM2jB,eAAyB/jB,KAAKI,MAAM2jB,eAAepe,KAAO,YAErGkgB,MAAO,CACLzf,IAAKpG,KAAKI,MAAMqiB,UAChBrJ,IAAKpZ,KAAKI,MAAMsjB,UAChBoC,UAAW,CAAC,CACVC,MAAO,UACPC,MAAO,EACPjjB,MAAO/C,KAAKI,MAAMuO,aAAe3O,KAAKI,MAAMuO,aAAe,EAC3DnK,MAAO,CACLyN,KAAM,mBAGVgU,UAAW,CACT,CACEC,KAAMlmB,KAAKI,MAAM2kB,gBAAkB/kB,KAAKI,MAAM2kB,gBAAgB,GAAG5U,EAAI,EACrEgW,GAAInmB,KAAKI,MAAM2kB,gBAAkB/kB,KAAKI,MAAM2kB,gBAAgB,GAAG5U,EAAI,EACnE4V,MAAO,2BACPvhB,MAAO,CACHyN,KAAM,YACNmJ,MAAO,CACH2K,MAAO,aAIjB,CACEG,KAAMlmB,KAAKI,MAAMykB,eAAiB7kB,KAAKI,MAAMykB,eAAe,GAAG1U,EAAI,EACnEgW,GAAInmB,KAAKI,MAAMykB,eAAiB7kB,KAAKI,MAAMykB,eAAe,GAAG1U,EAAI,EACjE4V,MAAO,2BACPvhB,MAAO,CACHyN,KAAM,WACNmJ,MAAO,CACH2K,MAAO,eAMrBK,MAAO,CACL,CACErlB,MAAO,CACLkR,KAAM,WAER7L,KAAM,IACN6f,UAAW,CACT,CACEC,KAAM,EACNC,IAAK,KACLJ,MAAO,0BACPvhB,MAAO,CACHyN,KAAM,eAKhB,CACElR,MAAO,CACLkR,KAAM,iBAERoU,UAAU,GAEZ,CACEtlB,MAAO,CACLkR,KAAM,kBAERoU,UAAU,IAGdC,OAAQ,CACN,CACE3gB,KAAM,0BACNmP,KAAM9U,KAAKI,MAAM4kB,WACjBuB,QAAS,CACPC,YAAa,KAEfC,eAAgB,KAElB,CACE9gB,KAAM,gBACNmP,KAAM9U,KAAKI,MAAM6kB,WACjBmB,MAAO,EACPG,QAAS,CACPC,YAAa,SAEfC,eAAgB,KAElB,CACE9gB,KAAM,iBACNmP,KAAM9U,KAAKI,MAAM8kB,WACjBkB,MAAO,EACPG,QAAS,CACPC,YAAa,UAEfC,eAAgB,MAGpBF,QAAS,CACPG,QAAQ,EACRC,cAAe,GAEjBC,QAAS,CACPC,SAAS,mFAOM1gB,iFAEP,YAATA,EACD2gB,EAAY,CACV3gB,KAAMA,EACNmP,cAAe,6CACf9L,KAAM,CACJiM,MAAO,KACPgB,MAAO,GAETlB,MAAO,CACLE,MAAO,EACPgB,MAAO,GAETjB,IAAK,CACHC,MAAO,MACPgB,MAAO,IAGM,cAATtQ,EACR2gB,EAAY,CACV3gB,KAAM,YACNqD,KAAM,CACJiM,MAAO,EACPgB,MAAO,GAETlB,MAAO,CACLE,MAAO,EACPgB,MAAO,GAETd,aAAc,KACdC,YAAa,EACbC,aAAc,MAEC,eAAT1P,EACR2gB,EAAY,CACV3gB,KAAM,aACNqD,KAAM,CACJiM,MAAO,KACPgB,MAAO,GAETlB,MAAO,CACLE,MAAO,EACPgB,MAAO,GAETV,cAAe,EACfC,WAAY,KACZH,aAAc,MAEC,WAAT1P,IACR2gB,EAAY,CACV3gB,KAAMA,EACNqD,KAAM,CACJiM,MAAO,IACPgB,MAAO,GAETlB,MAAO,CACLE,MAAO,EACPgB,MAAO,GAETP,QAAQ,EACRC,QAAQ,EACRC,SAAU,EACVC,OAAQ,KACRC,aAAc,GACdC,GAAI,cAGFvW,KAAKJ,MAAMmT,WAAW/S,KAAKI,MAAM2jB,eAAgB+C,WACnDC,EAAkB9X,YAAMjP,KAAKI,MAAM2jB,iBACvB7O,aAAa3Q,KAAKuiB,GAClC9mB,KAAKoD,SAAS,CACZ2gB,eAAgBgD,iJAIF/L,EAAO7F,GACvB,IAAI4R,EAAkB9X,YAAMjP,KAAKI,MAAM2jB,gBACvCgD,EAAgB7R,aAAa8F,GAAS7F,EACtCnV,KAAKoD,SAAS,CACZ2gB,eAAgBgD,8CAIF/L,GAChB,IAAI+L,EAAkB9X,YAAMjP,KAAKI,MAAM2jB,gBACvCgD,EAAgB7R,aAAa8R,OAAOhM,EAAO,GAC3Chb,KAAKoD,SAAS,CACZ2gB,eAAgBgD,wCAIR5R,EAAQ6F,GAElB,MAAmB,YAAhB7F,EAAOhP,KAENob,EAAA9d,EAAAC,cAACujB,EAAD,CACEjM,MAAOA,EACP8G,YAAa3M,EACb6M,kBAAmBhiB,KAAKgiB,kBACxBE,kBAAmBliB,KAAKkiB,oBAGJ,cAAhB/M,EAAOhP,KAEbob,EAAA9d,EAAAC,cAACwjB,EAAD,CACElM,MAAOA,EACP8G,YAAa3M,EACb6M,kBAAmBhiB,KAAKgiB,kBACxBE,kBAAmBliB,KAAKkiB,oBAGJ,eAAhB/M,EAAOhP,KAEbob,EAAA9d,EAAAC,cAACyjB,EAAD,CACEnM,MAAOA,EACP8G,YAAa3M,EACb6M,kBAAmBhiB,KAAKgiB,kBACxBE,kBAAmBliB,KAAKkiB,oBAGJ,WAAhB/M,EAAOhP,KAEbob,EAAA9d,EAAAC,cAAC0jB,EAAD,CACEpM,MAAOA,EACP8G,YAAa3M,EACb6M,kBAAmBhiB,KAAKgiB,kBACxBE,kBAAmBliB,KAAKkiB,yBANvB,gDAYa,IAAAxb,EAAA1G,KACpB,OAAGA,KAAKI,MAAM2jB,eACL/jB,KAAKI,MAAM2jB,eAAe7O,aAAa9C,IAAI,SAAC+C,EAAQ6F,GACzD,OACEuG,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACNd,EAAK2gB,YAAYlS,EAAQ6F,MAM3B,sCAGA,IAAArU,EAAA3G,KACDsnB,EAAmB/F,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAASxZ,GAAG,gBAAZ,oLAGvBuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAHkB,kGAOzB,OACE6d,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,mCAEN+P,aACEyQ,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAgBrE,UAAU,SAASC,QAASkK,GAC1C/F,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAEN0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPhB,UAWJwN,QACEoQ,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACf4d,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAMja,OAAK,GACTga,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,IACP+Z,EAAA9d,EAAAC,cAAC6jB,EAAA9jB,EAAD,CACE+jB,WAAYC,IACZhhB,QAASzG,KAAK0nB,iCAIpBnG,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,UAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,QACbO,KAAK,SACLR,KAAK,YACLS,IAAK,EACLrD,MAAO/C,KAAKI,MAAMqiB,UAClBpc,SAAU,SAAAC,GACRK,EAAKvD,SAAS,CACZqf,UAAWV,OAAOzb,EAAMC,OAAOxD,aAKvCwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,IAET+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GAAT,UAGA+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE5b,YAAa,QACbO,KAAK,SACLR,KAAK,YACLS,IAAK,EACLrD,MAAO/C,KAAKI,MAAMsjB,UAClBrd,SAAU,SAAAC,GACRK,EAAKvD,SAAS,CACZsgB,UAAW3B,OAAOzb,EAAMC,OAAOxD,aAKvCwe,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,IAERxH,KAAK2nB,sBACNpG,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAKha,GAAI,GACP+Z,EAAA9d,EAAAC,cAACkkB,EAAD,CACEtG,MAAO,CAAC,UAAW,YAAa,aAAc,UAC9CK,eAAgB3hB,KAAK2hB,8BA3gBPxY,aAuhBjBma,4IC1iBMhhB,EACnB,SAAAA,EAAYkH,EAAME,GAAU5J,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GAC1BtC,KAAKwJ,KAAOA,EACZxJ,KAAK0J,QAAUA,2JCDExG,aACnB,SAAAA,EAAY2kB,EAAStlB,EAAOF,EAAMgH,EAAYI,EAAeE,EAAM/H,GAAU9B,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,GAC3ElD,KAAK6nB,QAAUA,EACf7nB,KAAKuC,MAAQA,EACbvC,KAAKqC,KAAOA,EACZrC,KAAKqJ,WAAaA,EAClBrJ,KAAKyJ,cAAgBA,EACrBzJ,KAAK2J,KAAOA,EACZ3J,KAAK4B,QAAUA,yDAIf,OAAG5B,KAAKqJ,WAAa,EACZrJ,KAAKyJ,cAAgBzJ,KAAKqJ,WAG5B,oCAGCrF,EAAU8jB,GAClB,IAAIC,EAAY/nB,KAAKoX,WACjB4Q,EAAWhkB,EAASikB,aAAajoB,KAAKqC,KAAKmH,KAAMxJ,KAAKqC,KAAKqH,SAC3Dwe,EAASloB,KAAKqJ,YAAc2e,EAAWD,IAAc/nB,KAAKuC,MAAQ,GAAK,GAExEvC,KAAKqC,KAAKqH,UAAYoe,IAEvBI,GADgBlkB,EAASikB,aAAajoB,KAAKqC,KAAKqH,QAASoe,IAI3D,OAAOI,2CAGQlkB,GACf,IAAI+jB,EAAY/nB,KAAKoX,WACjB4Q,EAAWhkB,EAASikB,aAAajoB,KAAKqC,KAAKmH,KAAMxJ,KAAKqC,KAAKqH,SAE/D,OAAiB,IAAdqe,GACOC,EAAWD,GAAaA,EAAY,KAAO/nB,KAAKuC,MAAQ,GAAK,GAGhE,0CAIT,IAAIiH,EAAO,GACRxJ,KAAK6nB,SAEJre,IADgBxJ,KAAKuC,MAAQ,MAAQ,QACjB,IAAMuH,IAAYQ,aAAatK,KAAKqJ,WAAY,GAAKrJ,KAAKqC,KAAKmH,KAAK/E,KAAO,MAC/F+E,GAAQM,IAAYQ,aAAatK,KAAKoX,WAAY,GAAIpX,KAAKqC,KAAKqH,QAAQjF,MAG3E+E,IADmBxJ,KAAKuC,MAAQ,UAAY,cACxB,IAAMuH,IAAYQ,aAAatK,KAAKqJ,WAAY,GAAKrJ,KAAKqC,KAAKmH,KAAK/E,KAGzF,OAAO+E,k7CC+GM2e,cAlKb,SAAAA,EAAYvoB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAmoB,IACjBtoB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAqoB,GAAAhoB,KAAAH,KAAMJ,KACDwoB,iBAAmBvoB,EAAKuoB,iBAAiBlf,KAAtBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAFPA,gFAKFD,GACf,IADsBiE,EAClBwkB,EAAc,EADIvkB,EAAAC,EAEPnE,EAAMmF,UAAU8F,cAFT,IAEtB,IAAA/G,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA6C,KAApCpB,EAAoCY,EAAAd,MACvCE,EAAG4kB,UACLQ,GAAeplB,EAAGqlB,UAAU1oB,EAAMoE,SAAUpE,EAAMoE,SAASukB,OAJzC,MAAA7jB,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAQtB,OAAOyjB,2CAGQzoB,GAEf,IAFsBiF,EAElB2jB,EAAgB,EAAGC,EAAmB,EAFpB3jB,EAAAf,EAGPnE,EAAMmF,UAAU8F,cAHT,IAGtB,IAAA/F,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAA6C,KAApCpB,EAAoC4B,EAAA9B,MAC3C,IAAKE,EAAG4kB,QAAS,CACf,IAAIa,EAAY9oB,EAAMoE,SAAS2kB,aAAa1lB,EAAGZ,KAAKmH,KAAM5J,EAAMoE,SAASukB,IAAKtlB,EAAG0G,MAC7E1G,EAAGV,MACLimB,GAAiBvlB,EAAGoG,WAAaqf,EAEjCD,GAAoBxlB,EAAGoG,WAAaqf,IATpB,MAAAhkB,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IActB,MAAO,CACL4jB,cAAeA,EACfC,iBAAkBA,yDAIQ7oB,EAAOgpB,EAAkBC,GAErD,OADyBD,EAAiBE,sBAAsBlpB,EAAMoE,SAAUpE,EAAMoE,SAASukB,KACnEM,EAAe,gDAGzB9lB,GAClBA,EAAQsC,MAAMtC,GAAS,EAAIA,EAE3B,IAAIyH,EAAS,UADbzH,EAAQ0H,KAAKC,IAAI3H,GAAS,KAAS,EAAIA,IACN,EAAI,QAAU,OAE/C,OADAyH,EAASC,KAAKC,IAAI3H,GAAS,KAAQ,GAAKyH,EAEtC+W,EAAA9d,EAAAC,cAAA,OAAKC,UAAW6G,GACbV,IAAYif,cAAchmB,kDAKXA,EAAOimB,GAG3B,OAFAjmB,EAAQsC,MAAMtC,GAAS,EAAIA,EAC3BA,EAAQ0H,KAAKC,IAAI3H,GAAS,KAAS,EAAIA,EAErCwe,EAAA9d,EAAAC,cAAA,WACGoG,IAAYQ,aAAavH,EAAO,GAAKimB,oCAM1C,IAAIJ,EAAmB5oB,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAC7D4jB,EAAeD,EAAiBK,gBAAgBjpB,KAAKJ,MAAMoE,SAAUhE,KAAKJ,MAAMoE,SAASukB,KACzFW,EAAgBlpB,KAAKooB,iBAAiBpoB,KAAKJ,OAC3CupB,EAAWnpB,KAAKopB,iBAAiBppB,KAAKJ,OACtCyoB,EAAcQ,EAAeM,EAASX,cAAgBW,EAASV,iBAC/DY,EAAgBhB,EAAca,EAC9Bte,EAAa5K,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAAG2F,WAC1D0e,EAAmBtpB,KAAKupB,8BAA8BvpB,KAAKJ,MAAOgpB,EAAkBC,GAElF5G,EAAkBV,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASxhB,GAAG,gBAAZ,sHAC6FuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WADlG,kIAEyG6d,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAF9G,wJAKxB,OACE6d,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAOf,KAAKJ,MAAMmB,MAClB6P,SAAS,WACTE,aACEyQ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAgBrM,UAAU,SAASC,QAAS6E,GAC1CV,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACA7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAEN0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPd,UAWJwN,QACEoQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,oBACb4d,EAAA9d,EAAAC,cAAA,mCACA6d,EAAA9d,EAAAC,cAAA,SAAOC,UAAU,qBACf4d,EAAA9d,EAAAC,cAAA,aACE6d,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,wBACA6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAKypB,sBAAsBJ,EAAgBhB,EAAc,IAAK,MAC1F9G,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAK0pB,oBAAoBL,KAEvD9H,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,wBACA6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAKypB,sBAAsBP,EAAgBb,EAAc,IAAK,MAC1F9G,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAK0pB,oBAAoBR,KAEvD3H,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAK0pB,oBAAoBrB,UAOjE9G,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACAjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,oBACb4d,EAAA9d,EAAAC,cAAA,uCACA6d,EAAA9d,EAAAC,cAAA,SAAOC,UAAU,qBACf4d,EAAA9d,EAAAC,cAAA,aACE6d,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,sCACA6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAK0pB,oBAAoBR,EAAgBte,KAMvE2W,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,uBACA6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAcmG,IAAYif,cAAcI,EAASV,oBAEjElH,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,gCACA6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,cAAc3D,KAAKypB,sBAAsBH,EAAkB,sBAhJlEngB,aCoDZwgB,mLApDH,IAAA9pB,EAAAG,KACR,OACEuhB,EAAA9d,EAAAC,cAAA,WACC1D,KAAKJ,MAAMgqB,iBACVrI,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,kBACNoQ,QACEoQ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKK,GAAI,EAAGriB,GAAI,EAAGvB,GAAI,EAAG6jB,GAAI,GAC5BvI,EAAA9d,EAAAC,cAAA,gMAGA6d,EAAA9d,EAAAC,cAAA,2DAAkD6d,EAAA9d,EAAAC,cAAA,KAAG6O,KAAK,4BAAR,YAAlD,6HAGAgP,EAAA9d,EAAAC,cAAA,MAAIqmB,MAAM,mBAAV,eACAxI,EAAA9d,EAAAC,cAAA,KAAGqmB,MAAM,uBAAT,0IAEAxI,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEkf,QAAM,EACN/hB,QAAQ,SACRc,MAAI,EACJC,IAAE,EACFF,QAAS,kBAAMjJ,EAAKD,MAAMqqB,yBAL5B,+BAUF1I,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKK,GAAI,EAAGriB,GAAI,EAAGvB,GAAI,GAAI6jB,GAAI,IAC7BvI,EAAA9d,EAAAC,cAAA,UAAQ3C,MAAM,iCAAiCilB,MAAM,MAAMJ,OAAO,MAAMsE,IAAI,iEAAiEC,YAAY,IAAIC,uBAAqB,EAACC,oBAAkB,EAACC,iBAAe,MAGzN/I,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACAjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,EAAG+iB,SAAU,IACpBhJ,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACRc,MAAI,EACJD,QAAS,kBAAMjJ,EAAKD,MAAM4qB,kBAH5B,cAWA,WA/COrhB,0lCCkPRshB,cAhOb,SAAAA,EAAY7qB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAyqB,IACjB5qB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA2qB,GAAAtqB,KAAAH,KAAMJ,KACD8qB,gBAAkB7qB,EAAK6qB,gBAAgBxhB,KAArBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAFNA,6EAKLkD,GACZ,IAAIQ,EAAgBvD,KAAKuD,cAAcR,GAOvC,OANAQ,EAAgBvD,KAAKoD,SAAS,CAAEunB,YAAa,OAAU3qB,KAAKoD,SAAS,CACnEunB,YACEpJ,EAAA9d,EAAAC,cAAA,SAAOC,UAAU,eAAjB,qCAIGJ,0CAGOR,GACd,IAAIa,EAAqB,MAATb,EAQhB,OAPAa,EAAY5D,KAAKoD,SAAS,CACxBwnB,cACErJ,EAAA9d,EAAAC,cAAA,SAAOC,UAAU,eAAjB,6BAIA3D,KAAKoD,SAAS,CAAEwnB,cAAe,QAC3BhnB,sCAGEb,GACV,IAAIa,EAAqB,MAATb,EAQhB,OAPAa,EAAY5D,KAAKoD,SAAS,CACxBzB,UACE4f,EAAA9d,EAAAC,cAAA,SAAOC,UAAU,eAAjB,yBAIA3D,KAAKoD,SAAS,CAAEzB,UAAW,QACvBiC,iDAIR,IADqBC,EACfgnB,EAAa,GADE/mB,EAAAgnB,EAEP9qB,KAAKJ,MAAMoE,SAASC,aAAaC,QAF1B,IAErB,IAAAJ,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAAuD,KAA9CC,EAA8CT,EAAAd,MACrD8nB,EAAWtmB,KAAK,CAAExB,MAAOuB,EAAGE,MAAOF,EAAEG,QAHlB,MAAAC,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAMrB,OAAOimB,oDAIP,IADwBhmB,EAEpBgmB,EAAa,GAFO/lB,EAAAgmB,EACD9qB,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAEhCC,SAAShB,QAHlB,IAGxB,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAkD,KAAvCC,EAAuCO,EAAA9B,MAChD8nB,EAAWtmB,KAAK,CAAExB,MAAOuB,EAAGE,MAAOF,EAAEG,QAJf,MAAAC,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAOxB,OAAOimB,wCAGK1lB,GACZ,IAAIC,EAAWpC,WAAWmC,GAC1B,OAAQE,MAAMD,IAAaA,GAAW,wCAG1BE,GAEZ,OAAOA,EAAQC,QAAQ,IAAI7D,KAAK,KAAM,GAAI,MAAQ4D,EAAQE,SAASC,IAASC,sDAG1DC,EAAMC,GAAa,IAAAc,EAAA1G,KAErC,OADAA,KAAK+qB,SAAWplB,EAEd4b,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAW1jB,UAAU,wBACrByb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKzjB,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GACjDP,GAEH4b,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKvjB,GAAI,GACPsb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CACE5jB,YAAaA,EACbO,KAAK,SACLR,KAAK,SACLS,IAAK,EACLrD,MAAO/C,KAAKI,MAAM4qB,OAClB3kB,SAAU,SAAAC,GACRI,EAAKtD,SAAS,CACZ4nB,OAAQ1kB,EAAMC,OAAOxD,QAEvB2D,EAAKukB,cAAc3kB,EAAMC,OAAOxD,UAGnC/C,KAAKI,MAAMuqB,aAEdpJ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKvjB,GAAI,GACPsb,EAAA9d,EAAAC,cAAC+d,EAAA,EAAD,CACE7b,YAAY,WACZD,KAAK,WACL5C,MAAO/C,KAAKI,MAAMwJ,SAClBnD,QAASzG,KAAKI,MAAMyqB,WACpBxkB,SAAU,SAAAtD,GACR2D,EAAKtD,SAAS,CAAEwG,SAAU7G,IAC1B2D,EAAKwkB,gBAAgBnoB,MAGxB/C,KAAKI,MAAMwqB,2DAMC,IAAAjkB,EAAA3G,KACjB,OACEuhB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAW1jB,UAAU,wBACrByb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKzjB,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GAApD,QAGAqb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKvjB,GAAI,GACPsb,EAAA9d,EAAAC,cAACynB,EAAA1nB,EAAD,CACEb,YAAa5C,KAAK6G,cAClBC,WAAY,aACZC,YAAY,EACZC,eAAe,EACfC,WAAY,CAAErB,YAAa,0BAC3B7C,MAAO/C,KAAKI,MAAMqB,KAClB4E,SAAU,SAAAC,GACRK,EAAKvD,SAAS,CAAE3B,KAAwB,kBAAV6E,EAAsB,KAAOA,EAAMY,WACjEP,EAAK/D,YAA8B,kBAAV0D,EAAsB,KAAOA,EAAMY,aAG/DlH,KAAKI,MAAMuB,0DAMI,IAAAwF,EAAAnH,KACpB,OACEuhB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAW1jB,UAAU,qBACrByb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKzjB,eAAgBC,IAAcC,GAAI,EAAGC,SAAU,GAApD,WAGAqb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKvjB,GAAI,GACPsb,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CACE5jB,YAAY,mBACZO,KAAK,OACLR,KAAK,UACL5C,MAA8B,SAAvB/C,KAAKI,MAAMwB,QAAqB5B,KAAKI,MAAMwB,QAAU,GAC5DyE,SAAU,SAAAC,GACRa,EAAK/D,SAAS,CAAExB,QAAS0E,EAAMC,OAAOxD,qDAQhCwM,GACdvP,KAAKoD,SAAS,CACZgoB,UAAmB,YAAR7b,EACXsb,WAAoB,YAARtb,EAAoBvP,KAAKqrB,uBAAyBrrB,KAAKsrB,0BACnE1hB,SAAU,wCAIL,IAAAxC,EAAApH,KACP,OACEuhB,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CACE/hB,KAAMzH,KAAKJ,MAAMkB,cACjB4G,OAAQ,kBAAMN,EAAKxH,MAAMyD,eAEzBke,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM7hB,OAAP,CAAcC,aAAW,GACvB2Z,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM3hB,MAAP,KAAc7H,KAAKI,MAAMW,QAE3BwgB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM1hB,KAAP,KACEyZ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CACE+B,UAAWvrB,KAAKI,MAAMgrB,UAAY,UAAY,aAC9CI,SAAUxrB,KAAK0qB,gBACf1iB,GAAG,0BAEHuZ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKthB,SAAS,UAAUnH,MAAM,WAC5BwgB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMlhB,YAAU,GACbtI,KAAKyrB,oBAAoB,UAAW,kBACpCzrB,KAAKyI,mBACLzI,KAAK0I,wBAGV6Y,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKthB,SAAS,aAAanH,MAAM,cAC/BwgB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMlhB,YAAU,GACbtI,KAAKyrB,oBAAoB,aAAc,qBACvCzrB,KAAKyI,mBACLzI,KAAK0I,0BAKd6Y,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM7gB,OAAP,KACE4Y,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEjC,QAAM,EACNC,QAAS,kBAAM1B,EAAKxH,MAAMyD,eAF5B,UAMAke,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,OACRc,MAAI,EACJC,IAAE,EACF7C,KAAK,SACL2C,QAAmB9I,KAAKiJ,sBAAsBC,KAAKlJ,OAElDA,KAAKI,MAAMY,yBAtNEmI,8BCsCnBuiB,cAnDb,SAAAA,EAAY9rB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA0rB,IACjB7rB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA4rB,GAAAvrB,KAAAH,KAAMJ,KACDQ,MAAQP,EAAKQ,gBAAgBT,EAAM+rB,kBAExCrrB,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAW,gBACzDC,IAAQC,UAAUJ,OAAOC,SAASC,SAAW,gBAL5Bb,yFASOgB,4CAUV8qB,GACd,MAAO,CACL5qB,MAAO,cACPC,WAAY,MACZoqB,WAAW,EACXJ,OAAQ,GACRL,YAAa,KACb/gB,SAAU,KACVghB,cAAe,KACfnpB,KAAM,IAAIC,KACVC,UAAW,KACXC,QAA6B,MAApB+pB,EAA2B,GAAK,wBACzCd,WAAY7qB,KAAKqrB,wEAOnB,GAFA/qB,QAAQC,IAAI,sBAETP,KAAKirB,cAAcjrB,KAAKI,MAAM4qB,SAC9BhrB,KAAKkrB,gBAAgBlrB,KAAKI,MAAMwJ,WAChC5J,KAAK4C,YAAY5C,KAAKI,MAAMqB,MAAO,CACpCnB,QAAQC,IAAI,sCAEZ,IAAI8B,EAAO,IAAIC,IAAatC,KAAKI,MAAMwJ,SAAS7G,MAAO/C,KAAKJ,MAAMoE,SAASukB,KACvEtlB,EAAK,IAAIC,KAAY,EAAOlD,KAAKI,MAAMgrB,UAAW/oB,EAAMW,WAAWhD,KAAKI,MAAM4qB,QAAS,EAAGhrB,KAAKI,MAAMqB,KAAMzB,KAAKI,MAAMwB,SAC1H5B,KAAKJ,MAAMuD,eAAeF,GAC1BjD,KAAKJ,MAAMyD,qBA/CconB,uiCCJVmB,aACjB,SAAAA,EAAYC,EAAUC,GAAYhsB,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA4rB,GAChC5rB,KAAK6rB,SAAWA,EAChB7rB,KAAK8rB,UAAYA,EACjB9rB,KAAKkF,SAAW,IAAI6mB,IACpB/rB,KAAK4K,WAAa5K,KAAKgsB,sBAEvBhsB,KAAKisB,8FAIH,IAAIC,EAAyB,MAAjBlsB,KAAK6rB,SAAmB7rB,KAAK6rB,SAASjhB,WAAa,EAI/D,OAHqB,MAAlB5K,KAAK8rB,WAAqB9rB,KAAK8rB,UAAUjE,SACxCqE,IAEGA,sDAOP,GAHqB,OAAlBlsB,KAAK6rB,WACJ7rB,KAAKkF,SAAW,IAAI6mB,IAAI/rB,KAAK6rB,SAAS3mB,WAEpB,OAAnBlF,KAAK8rB,UAAoB,CAExB,IAAIK,EAAoD,QAArCnsB,KAAK8rB,UAAUzpB,KAAKqH,QAAQjF,MACT,QAArCzE,KAAK8rB,UAAUzpB,KAAKqH,QAAQjF,MAAkBzE,KAAK8rB,UAAUjE,aAGXlX,IAAhD3Q,KAAKkF,SAASknB,IAAIpsB,KAAK8rB,UAAUzpB,KAAKmH,OACrCxJ,KAAKkF,SAASmnB,IAAIrsB,KAAK8rB,UAAUzpB,KAAKmH,KAAM,QAEMmH,IAAnD3Q,KAAKkF,SAASknB,IAAIpsB,KAAK8rB,UAAUzpB,KAAKqH,UAClCyiB,GACCnsB,KAAKkF,SAASmnB,IAAIrsB,KAAK8rB,UAAUzpB,KAAKqH,QAAS,GAKpD1J,KAAK8rB,UAAUvpB,OAEdvC,KAAKkF,SAASmnB,IAAIrsB,KAAK8rB,UAAUzpB,KAAKmH,KAAMxJ,KAAKkF,SAASknB,IAAIpsB,KAAK8rB,UAAUzpB,KAAKmH,MAAQxJ,KAAK8rB,UAAUziB,YACtG8iB,GACCnsB,KAAKkF,SAASmnB,IAAIrsB,KAAK8rB,UAAUzpB,KAAKqH,QAAS1J,KAAKkF,SAASknB,IAAIpsB,KAAK8rB,UAAUzpB,KAAKqH,SAAW1J,KAAK8rB,UAAUriB,iBAInHzJ,KAAKkF,SAASmnB,IAAIrsB,KAAK8rB,UAAUzpB,KAAKmH,KAAMxJ,KAAKkF,SAASknB,IAAIpsB,KAAK8rB,UAAUzpB,KAAKmH,MAAQxJ,KAAK8rB,UAAUziB,YACtG8iB,GACCnsB,KAAKkF,SAASmnB,IAAIrsB,KAAK8rB,UAAUzpB,KAAKqH,QAAS1J,KAAKkF,SAASknB,IAAIpsB,KAAK8rB,UAAUzpB,KAAKqH,SAAW1J,KAAK8rB,UAAUriB,sDAMlHzF,GAAU,IAAAnE,EAAAG,KACnBA,KAAKkF,SAAW,IAAI6mB,IAAIjsB,OAAAwsB,EAAA,EAAAxsB,CAAIE,KAAKkF,SAASqnB,WAAWC,KACjD,SAAC/oB,EAAGuY,GAAJ,OAAUnc,EAAK4sB,mBAAmBzoB,EAAUgY,EAAE,GAAIhY,EAASukB,KAAO1oB,EAAK4sB,mBAAmBzoB,EAAUP,EAAE,GAAIO,EAASukB,mDAIxGvkB,EAAU4F,EAAUke,GACnC,IAAI4E,EAAsB,EAC1B,GAAG9iB,IAAake,EAAc,CAC1B,IAAIY,EAAY1kB,EAASikB,aAAare,EAAUke,GAC/B,OAAdY,IACCgE,EAAsBhE,GAI9B,OAAO1oB,KAAKkF,SAASknB,IAAIxiB,GAAY8iB,0CAGzB1oB,EAAU8jB,GACtB,IADoCjkB,EAChCglB,EAAe,EADiB/kB,EAAA6oB,EAEpB3sB,KAAKkF,SAAShB,QAFM,IAEpC,IAAAJ,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAAsC,KAA3B+L,EAA2BvM,EAAAd,MAClC8lB,GAAgB7oB,KAAKysB,mBAAmBzoB,EAAUoM,EAAG0X,IAHrB,MAAApjB,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAMpC,OAAOikB,gDAGW7kB,EAAU8jB,GAC5B,IAD0CjjB,EACtCgkB,EAAe,EADuB/jB,EAAA6nB,EAE1B3sB,KAAKkF,SAAShB,QAFY,IAE1C,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAsC,KAA3B+L,EAA2BvL,EAAA9B,MAC9BqN,EAAEjO,SACF0mB,GAAgB7oB,KAAKysB,mBAAmBzoB,EAAUoM,EAAG0X,KAJnB,MAAApjB,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAQ1C,OAAOikB,iDAIYjf,EAAUnI,GAC7B,IAAImrB,EAAkB,EACtB,GAAsB,OAAnB5sB,KAAK8rB,UAEJ,GAAG9rB,KAAK8rB,UAAUniB,KAAKkjB,UAAYprB,EAAKorB,UAEpCD,EAAkB5sB,KAAKkF,SAASknB,IAAIxiB,OACjC,CACH,IAAIkjB,EAAgB9sB,KAAK+sB,iBAAiBtrB,GACrB,OAAlBqrB,GAEuB,OADtBF,EAAkBE,EAAc5nB,SAASknB,IAAIxiB,MAEzCgjB,EAAkB,QAK9BtsB,QAAQC,IAAI,+FAGhB,OAAOqsB,8CAIS5oB,EAAUvC,EAAMqmB,GAChC,IAD8CkF,EAC1CC,EAAmB,EADuBC,EAAAP,EAE9B3sB,KAAKkF,SAAShB,QAFgB,IAE9C,IAAAgpB,EAAA/oB,MAAA6oB,EAAAE,EAAA9oB,KAAAC,MAAsC,KAA3B+L,EAA2B4c,EAAAjqB,MAElCkqB,GADgBjpB,EAAS2kB,aAAavY,EAAG0X,EAAcrmB,GACvBzB,KAAKmtB,uBAAuB/c,EAAG3O,IAJrB,MAAAiD,GAAAwoB,EAAAvoB,EAAAD,GAAA,QAAAwoB,EAAAtoB,IAO9C,OAAOqoB,2CAyBMxrB,GAEb,IADA,IAAI2rB,EAAOptB,KAAK6rB,SACD,OAATuB,GAAe,CACjB,GAAqB,MAAlBA,EAAKtB,WAAqBsB,EAAKtB,UAAUniB,KAAKkjB,UAAYprB,EAAKorB,UAC9D,OAAOO,EAEXA,EAAOA,EAAKvB,SAGhB,OAAO,gCCxJJwB,EAAY,yGALRC,GACX,OAAO5nB,IAAO,IAAIhE,MAAQ6rB,KAAK7nB,IAAO4nB,GAAY,6iCCAjCE,aACnB,SAAAA,IAAyD,IAA7C3iB,EAA6C4iB,UAAAljB,OAAA,QAAAoG,IAAA8c,UAAA,GAAAA,UAAA,GAA9B,GAAInZ,EAA0BmZ,UAAAljB,OAAA,QAAAoG,IAAA8c,UAAA,GAAAA,UAAA,GAAd,GAAIzpB,EAAUypB,UAAAljB,OAAA,EAAAkjB,UAAA,QAAA9c,EAAA7Q,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAwtB,GACvDxtB,KAAK6K,aAAeA,EACpB7K,KAAKsU,UAAYA,EACjBtU,KAAKgF,WAAa,GAElBhF,KAAK0tB,kBAAkB1pB,kEAGN6G,EAAc7G,GAC/BhE,KAAK6K,aAAeA,EACpB7K,KAAKgF,WAAa,GAClBhF,KAAK0tB,kBAAkB1pB,6CAGPA,GAEhB,IAAI2pB,EAAQ,IAAI/B,EAAU,KAAM,MAChC+B,EAAMC,aAAa5pB,GACnBhE,KAAKgF,WAAWT,KAAKopB,GAErB,IAN0B9pB,EAMtBgoB,EAAW8B,EANW7pB,EAAA+pB,EAOZ7tB,KAAK6K,cAPO,IAO1B,IAAA/G,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAAiC,KAAzBpB,EAAyBY,EAAAd,MAC3B+qB,EAAY,IAAIlC,EAAUC,EAAU5oB,GACxC6qB,EAAUF,aAAa5pB,GACvBhE,KAAKgF,WAAWT,KAAKupB,GACrBjC,EAAWiC,GAXa,MAAAppB,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,gDAgBTnD,GACjB,IADuBoD,EACnBkmB,EAAW,GADQjmB,EAAA+oB,EAEV7tB,KAAKgF,YAFK,IAEvB,IAAAF,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAA8B,KAAtBqN,EAAsB7M,EAAA9B,MACT,OAAhB2O,EAAEoa,WAAsBpa,EAAEoa,UAAUjE,UAClCnW,EAAEoa,UAAUniB,KAAKkjB,UAAYprB,EAAKorB,WAAanb,IAAM1R,KAAKgF,WAAWhF,KAAKgF,WAAWuF,OAAS,KAC/FwgB,EAASxmB,KAAKmN,IALG,MAAAhN,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAevB,OAJGmmB,EAASxgB,OAAS,GACnBwgB,EAASgD,QAAQhD,EAAS,GAAGc,UAGxBd,gDAIP,GAAG/qB,KAAK6K,aAAaN,OAAS,EAAG,CAC/B,IAAIyjB,EAAY,IAAItsB,KAAK1B,KAAK6K,aAAa,GAAGlB,MAC9C,OAAO0jB,EAAUY,aAAaD,GAGhC,OAAO,0iCCxDAhqB,GAAW,eCDpB,SAAAkqB,IAAepuB,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAkuB,GACbluB,KAAKuoB,IAAM,KACXvoB,KAAKiE,aAAe,IAAI8nB,IACxB/rB,KAAKmuB,cAAgB,IAAIpC,wDAIzB,IAAIqC,EAAW,IAAIF,EAInB,OAHAE,EAAS7F,IAAMvoB,KAAKuoB,IACpB6F,EAASnqB,aAAejE,KAAKiE,aAC7BmqB,EAASD,cAAgBnuB,KAAKmuB,cACvBC,uCAGI5kB,EAAME,GAEjB,GAAGF,EAAK/E,OAASiF,EAAQjF,KACvB,OAAO,EAGT,GAAGiF,IAAY1J,KAAKuoB,IAAK,CAEvB,GAAwC,MAArCvoB,KAAKmuB,cAAc/B,IAAI5iB,EAAK/E,MAC7B,OAAOzE,KAAKmuB,cAAc/B,IAAI5iB,EAAK/E,MAAMkV,MAG3C,GAA+C,MAA5C3Z,KAAKiE,aAAamoB,IAAI5iB,GAAMvE,OAAO,GAAG,GACvC,OAAOjF,KAAKiE,aAAamoB,IAAI5iB,GAAMvE,OAAO,GAAG,GAAG0U,UAE7C,CAEL,GAAwC,MAArC3Z,KAAKmuB,cAAc/B,IAAI5iB,EAAK/E,OACQ,MAAnCzE,KAAKmuB,cAAc/B,IAAI1iB,GAGzB,OAFc1J,KAAKmuB,cAAc/B,IAAI5iB,EAAK/E,MAAMkV,MAC/B3Z,KAAKmuB,cAAc/B,IAAI1iB,EAAQjF,MAAMkV,MAKxD,GAA+C,MAA5C3Z,KAAKiE,aAAamoB,IAAI5iB,GAAMvE,OAAO,GAAG,IACU,MAA/CjF,KAAKiE,aAAamoB,IAAI1iB,GAASzE,OAAO,GAAG,GAG3C,OAFcjF,KAAKiE,aAAamoB,IAAI5iB,GAAMvE,OAAO,GAAG,GAAG0U,MACtC3Z,KAAKiE,aAAamoB,IAAI1iB,GAASzE,OAAO,GAAG,GAAG0U,MAKjE,OAAO,8CAGW/P,GAClB,OAAuC,MAApC5J,KAAKmuB,cAAc/B,IAAIxiB,GACjB5J,KAAKmuB,cAAc/B,IAAIxiB,GAAUykB,iBAGnC,kCAGDve,EAAIE,GACV,OAAOF,EAAGwe,gBAAkBte,EAAGse,eAC7Bxe,EAAGye,aAAeve,EAAGue,YACrBze,EAAG0e,YAAcxe,EAAGwe,+CAIXhlB,EAAME,EAASjI,GAE1B,GAAG+H,EAAK/E,OAASiF,EAAQjF,KACvB,OAAO,EAGT,GAAGiF,IAAY1J,KAAKuoB,IAAK,KAAA1kB,EAAAC,EAAA2qB,GACVzuB,KAAKiE,aAAamoB,IAAI5iB,IADZ,IACvB,IAAA1F,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA0C,KAAlCqqB,EAAkC7qB,EAAAd,MACxC,GAAG/C,KAAK2uB,QAAQltB,EAAMitB,EAAE/kB,MACtB,OAAO+kB,EAAE/U,OAHU,MAAAjV,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,KAWzB,OAAO,6CAGUH,GAAM,IAAAI,EAAAC,EAAA2pB,GACLzuB,KAAKiE,aAAaC,QADb,IACvB,IAAAY,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAA4C,KAAjCkL,EAAiC1K,EAAA9B,MAC1C,GAAGwM,EAAI9K,OAASA,EACd,OAAO8K,GAHY,MAAA7K,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAMvB,OAAO,eDzFAG,GAAY,IAAIyoB,EAAU,GAAIxpB,IAG5B4qB,GAAqB,CAC9BC,cAAe,CACXC,MAAO,OACP3e,EAAG,EACHyU,EAAG,GAEPmK,eAAgB,CACZD,MAAO,QACP3e,EAAG,EACHyU,EAAG,GAGPoK,QAAS,CAAE,CACP7oB,KAAM,MACN+lB,MAAO,EACPja,KAAM,KACNwH,KAAM,EACNwV,iBAAkB,eACpB,CACE9oB,KAAM,QACN+lB,MAAO,EACPja,KAAM,KACNwH,KAAM,GACNwV,iBAAkB,gBACnB,CACC9oB,KAAM,QACN+lB,MAAO,EACPja,KAAM,KACNwH,KAAM,GACNwV,iBAAkB,iBACnB,CACC9oB,KAAM,MACN8L,KAAM,MACNwH,KAAM4T,EAAUY,aAAa,IAAIvsB,MAAK,IAAIA,MAAO4sB,cAAe,EAAG,IACnEW,iBAAkB,gBACnB,CACC9oB,KAAM,OACN+lB,MAAO,EACPja,KAAM,KACNwH,KAAM,IACNwV,iBAAkB,aACnB,CACC9oB,KAAM,MACN8L,KAAM,MACNgd,iBAAkB,6iCE+TXC,eApWb,SAAAA,EAAYtvB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAkvB,IACjBrvB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAovB,GAAA/uB,KAAAH,KAAMJ,KACD8nB,2BAA6B7nB,EAAK6nB,2BAA2Bxe,KAAhCpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAClCA,EAAKopB,gBAAkBppB,EAAKopB,gBAAgB/f,KAArBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACvBA,EAAKsvB,uBAAyBtvB,EAAKsvB,uBAAuBjmB,KAA5BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC9BA,EAAKuvB,sBAAwBvvB,EAAKuvB,sBAAsBlmB,KAA3BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC7BA,EAAKwvB,aAAexvB,EAAKwvB,aAAanmB,KAAlBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACpBA,EAAKyvB,WAAazvB,EAAKyvB,WAAWpmB,KAAhBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAPDA,oFAWjBS,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,MACzE3S,IAAQ4S,SAAS/S,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,4CAI5DtT,KAAKoD,SAAS,CAAE4iB,MAAOxlB,OAAO+uB,yDAI9B/uB,OAAOgvB,iBAAiB,SAAUxvB,KAAKyvB,YAAYvmB,KAAKlJ,+CAG1C6a,GACd,IADoBhX,EAChBoX,EAAQ,EADQnX,EAAA4rB,GAEJ7U,EAAK/F,MAFD,IAEpB,IAAAhR,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA2B,CACzB4W,GADyBpX,EAAAd,MACZkY,MAAM,IAHD,MAAAvW,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAKpB,OAAOqW,4CAGS0U,GAChB,OAAOA,EAAgBC,QAAQ,QAAS,0DAGjB,IAAAlpB,EAAA1G,KA8DvB,MA7DqB,CACnB,CAAE2H,OAAQ,OAAQuT,SAAU,OAAQC,SAAU,IAC9CQ,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,YACE6d,EAAA9d,EAAAC,cAAA,OAAKwmB,IAAKxjB,EAAKmpB,kBAAkBrU,EAAIzY,MAAM,IAAK+sB,IAAI,KADtD,IACiEtU,EAAIzY,MAAM,MAG7E,CAAE4E,OAAQ,QAASuT,SAAU,QAASC,SAAU,IAChDQ,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB,IAAM9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,KAGlDgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,IAEb,CAAEkE,OAAQ,MAAOuT,SAAU,mBAAoBC,SAAU,GACzDQ,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYimB,uBAAuBvU,EAAIzY,SAG5CgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,IAEb,CAAEkE,OAAQ,UAAWuT,SAAU,UAAWC,SAAU,IAAKiB,UAAU,EACnET,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,GAAK,IAAMyY,EAAIzY,MAAM,MAGjE,CAAE4E,OAAQ,QAASuT,SAAU,QAASC,SAAU,GAChDxS,OACE4Y,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,sBAAsB,KAG1BiY,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAO,GAAK,MAG9CgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,IAEb,CAAEkE,OAAQ,QAASuT,SAAU,QAASiB,SAAU,IAAKhB,SAAU,IAC/DxS,OAAQ,SAAAkS,GAAI,OACV0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cAAS,IAAMoG,IAAYQ,aAAa5D,EAAKuiB,gBAAgBpO,GAAO,MAGxEc,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB,IAAM9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,KAGlDgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,qDAOO,IAAAkD,EAAA3G,KA4CtB,MA3CqB,CACnB,CAAE2H,OAAQ,OAAQuT,SAAU,OAAQC,SAAU,IAC9CQ,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,YACE6d,EAAA9d,EAAAC,cAAA,OAAKwmB,IAAKvjB,EAAKkpB,kBAAkBrU,EAAIzY,MAAM,IAAK+sB,IAAI,KADtD,IACiEtU,EAAIzY,MAAM,MAG7E,CAAE4E,OAAQ,QAASuT,SAAU,QAASC,SAAU,IAChDQ,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,WACE6d,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB,IAAM9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,IACzCwe,EAAA9d,EAAAC,cAAA,WACP6d,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYimB,uBAAuBvU,EAAIzY,MAAM,OAIpDgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,IAGb,CAAEkE,OAAQ,UAAWuT,SAAU,QAASiB,SAAU,IAAKhB,SAAU,IACjExS,OAAQ,SAAAkS,GAAI,OACV0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cAAS,IAAMoG,IAAYQ,aAAa3D,EAAKsiB,gBAAgBpO,GAAO,MAGxEc,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,WACE6d,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB,IAAM9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,IACzCwe,EAAA9d,EAAAC,cAAA,WACP6d,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYif,cAAcvN,EAAIzY,MAAM,GAAG,GAAI,GAAGitB,OAAO,MAI5DjU,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,wCAONmG,GACT,OAAoB,MAAjBA,EAASqmB,KACD,eAAiBrmB,EAASzH,OAASyH,EAASnF,KAAKgX,cAAgB,SAAW,OAGhF7R,EAASqmB,KAAKC,0CAIVtwB,GACX,IADkBiF,EACd+jB,EAAmBhpB,EAAMmF,UAAUC,WAAWC,OAAO,GAAG,GACxD4jB,EAAeD,EAAiBK,gBAAgBrpB,EAAMoE,SAAUpE,EAAMoE,SAASukB,KAE7E1T,EAAY,GAJA/P,EAAA4qB,GAKC9G,EAAiB1jB,UALlB,IAKlB,IAAAJ,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAA8C,KAAA8rB,EAAAtrB,EAAA9B,MAAAqtB,EAAAtwB,OAAAuwB,EAAA,EAAAvwB,CAAAqwB,EAAA,GAApC/f,EAAoCggB,EAAA,GAAjCvgB,EAAiCugB,EAAA,GACxCxD,EAAkBhE,EAAiB6D,mBAAmB7sB,EAAMoE,SAAUoM,EAAGxQ,EAAMoE,SAASukB,KACxF5iB,EAAO,CAAC3F,KAAKsvB,WAAWlf,GAAIA,EAAEzK,MAC9BlB,EAAO,CAACzE,KAAKsvB,WAAWlf,GAAIA,EAAE3L,MAC9B4pB,EAAmBzuB,EAAMoE,SAASssB,oBAAoBlgB,EAAE3L,MACxDkV,EAAQ,CAAC/Z,EAAMoE,SAASikB,aAAa7X,EAAGxQ,EAAMoE,SAASukB,KAAM8F,GAC7DlkB,EAAU,CAAC0F,EAAGO,EAAE3L,MAChB8rB,EAAS3D,EAAkB/D,EAAe,IAC1C5N,EAAQ,CAAC2R,EAAiBziB,GAC9B0K,EAAUtQ,KAAK,CACbyD,GAAI6M,EAAUtK,OACd5E,KAAMA,EACNlB,KAAMA,EACNkV,MAAOA,EACP0U,iBAAkBA,EAClBlkB,QAASA,EACTomB,MAAOA,EACPtV,MAAOA,KAtBO,MAAAvW,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IA0BlB,OAAOiQ,qDAGkBjV,GACzB,IADgCotB,EAC5BpE,EAAmBhpB,EAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAGtDqhB,EAAS,GAJiB4G,EAAAwC,GAKT9G,EAAiB1jB,SAAShB,QALjB,IAKhC,IAAAgpB,EAAA/oB,MAAA6oB,EAAAE,EAAA9oB,KAAAC,MAAyD,KAAAmsB,EAA9C5mB,EAA8CojB,EAAAjqB,MACjD0tB,EAAQ,GADyCC,EAAAhB,GAE1C9vB,EAAMoE,SAASC,aAAamoB,IAAIxiB,IAFU,IAEvD,IAAA8mB,EAAAvsB,MAAAqsB,EAAAE,EAAAtsB,KAAAC,MAAwD,KAAhDqqB,EAAgD8B,EAAAztB,MAChD4tB,EAAuBjC,EAAE/U,MAAQiP,EAAiBuE,uBAAuBuB,EAAErsB,KAAKmH,KAAMklB,EAAE/kB,MAC5F8mB,EAAMlsB,KAAK,CAACmqB,EAAE/kB,KAAKkjB,UAAW8D,KAJqB,MAAAjsB,GAAAgsB,EAAA/rB,EAAAD,GAAA,QAAAgsB,EAAA9rB,IAQ9B,MAAtB6rB,EAAMxrB,OAAO,GAAG,KACjBwrB,EAAMxrB,OAAO,GAAG,GAAG,GAAK2jB,EAAiB6D,mBAAmB7sB,EAAMoE,SAAU4F,EAAUhK,EAAMoE,SAASukB,KACrGjC,EAAO/hB,KAAK,CAACoB,KAAMiE,EAASnF,KAAMqQ,KAAM2b,MAfZ,MAAA/rB,GAAAwoB,EAAAvoB,EAAAD,GAAA,QAAAwoB,EAAAtoB,IAiDhC,MA9B2B,CACzB+gB,MAAO,CACLxf,KAAM,QAERpF,MAAO,CACLkR,KAAM,MAER2e,YAAa,CACXtK,OAAQ,CACNuK,SAAU,SACVC,UAAW,UACXC,UAAW,EACXC,OAAQ,CACJD,UAAW,EACXD,UAAW,aAInBxK,OAAQA,EACR2K,cAAerC,GACfrI,QAAS,CACPG,QAAQ,EACRF,YAAa,OACbG,cAAe,GAEjBC,QAAS,CACPC,SAAS,qCAQb,IACIqK,EADmBlxB,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAC/BC,SAASsU,KACrC2X,EAAiBD,EAAa,GAC9BE,EAAW5wB,OAAO+uB,YAAc,IAElC8B,EACF9P,EAAA9d,EAAAC,cAAC4tB,EAAD,CACExwB,cAAed,KAAKJ,MAAM2xB,wBAC1BluB,WAAYrD,KAAKJ,MAAM4xB,qBACvBruB,eAAgBnD,KAAKJ,MAAMuD,eAC3B4B,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,SACrB2nB,kBAAgB,IAId5O,EAAmBwE,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASxhB,GAAG,gBAAZ,mPAKmBuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WALxB,mEAQnB4jB,EAAmB/F,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASxhB,GAAG,gBAAZ,oLAGvBuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAHkB,kGAOzB,OACE6d,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAC+tB,EAAD,CACE7H,iBAAkB5pB,KAAKJ,MAAMgqB,iBAC7BY,cAAexqB,KAAKJ,MAAM4qB,cAC1BP,qBAAsBjqB,KAAKJ,MAAMqqB,yBAIvC1I,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,iCACN6P,SAAUsgB,EAAa,UAA2B,IAAfA,EAAmB,GAAK,KAC3DpgB,aACEyQ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAgBrM,UAAU,SAASC,QAASL,GAC1CwE,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAEN0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPhB,UAWJwN,QACEoQ,EAAA9d,EAAAC,cAACguB,EAAA,EAAD,CACE/tB,UAAU,aACVmR,KAAM9U,KAAKqvB,aAAarvB,KAAKJ,OAC7B0d,QAAS8T,EAAWpxB,KAAKovB,sBAAsBpvB,KAAKJ,OAASI,KAAKmvB,uBAAuBnvB,KAAKJ,OAC9F4d,gBAAiB,GACjBmU,qBAAqB,EACrBR,eAAgBA,EAChB1T,WAAY3T,IAAY4T,cAAc,SAAU1d,KAAKJ,MAAMmF,gBAKnEwc,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACP+Z,EAAA9d,EAAAC,cAACkuB,EAAD,CACE7wB,MAAM,qBACN+sB,UAAW9tB,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GACrDjB,SAAUhE,KAAKJ,MAAMoE,SACrBe,UAAW/E,KAAKJ,MAAMmF,cAI5Bwc,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,+BAEN+P,aACEyQ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAgBrM,UAAU,SAASC,QAASkK,GAC1C/F,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAEN0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPhB,UAWJwN,QACEoQ,EAAA9d,EAAAC,cAAC6jB,EAAA9jB,EAAD,CACE+jB,WAAYqK,IACZC,gBAAiB,aACjBrrB,QAASzG,KAAK0nB,2BAA2B1nB,KAAKJ,WAInDI,KAAKJ,MAAM2xB,wBAA0BF,EAAmB,cA5V3CloB,ykCC6Zb4oB,eA9Zb,SAAAA,EAAYnyB,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA+xB,IACjBlyB,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAiyB,GAAA5xB,KAAAH,KAAMJ,KACD6S,kBAAoB5S,EAAK4S,kBAAkBvJ,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAK8S,kBAAoB9S,EAAK8S,kBAAkBzJ,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAKO,MAAQ,CACX0U,KAAMjV,EAAKmyB,iBAAiBpyB,GAC5BoT,sBAAsB,EACtBC,mBAAoB,MAPLpT,oFAYjBS,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,MACzE3S,IAAQ4S,SAAS/S,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,wDAIpCzS,GACxBb,KAAKoD,SAAS,CACZ0R,KAAM9U,KAAKgyB,iBAAiBnxB,8CAIfjB,GAAO,IAAA8G,EAAA1G,KAEhB6U,EAAY,GACdod,EAAcryB,EAAMmF,UAAU8F,aAAa5F,MAAM,EAAGrF,EAAMmF,UAAU8F,aAAaN,QACrF0nB,EAAYzF,KAAK,SAAC/oB,EAAGuY,GAAJ,OAAUA,EAAErS,KAAKkjB,UAAYppB,EAAEkG,KAAKkjB,YAJ/B,IAAAhpB,EAAAC,EAAAouB,GAKPD,GALO,IAKtB,IAAAnuB,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA4B,KAAnBpB,EAAmBY,EAAAd,MAC1B,GAAIE,EAAG4kB,QAAS,CACd,IAAIpmB,EAAOwB,EAAG0G,KAAKwoB,cAAcC,MAAM,KAAK,GACxC/vB,EAAOY,EAAGZ,KAAKmH,KAAK/E,KAAO,IAAMxB,EAAGZ,KAAKqH,QAAQjF,KACjD0B,EAAOlD,EAAGV,MAAQ,MAAQ,OAC1BX,EAAyB,SAAfqB,EAAGrB,QAAqB,GAAKqB,EAAGrB,QAC1CywB,EAAS,CAACpvB,EAAGoG,WAAYpG,EAAGZ,KAAKmH,KAAK/E,MACtCkV,EAAQ,CAAC1W,EAAGmU,WAAYnU,EAAGZ,KAAKqH,QAAQjF,MACxC6tB,EAAO,CAACrvB,EAAGwG,cAAexG,EAAGZ,KAAKqH,QAAQjF,MAC1C8tB,EAAgBtvB,EAAGuvB,iBAAiB5yB,EAAMoE,UAC1CkkB,EAAS,CAACjlB,EAAGqlB,UAAU1oB,EAAMoE,SAAUpE,EAAMoE,SAASukB,KAAM3oB,EAAMoE,SAASukB,IAAI9jB,MACnFoQ,EAAUtQ,KAAK,CAACtB,EAAIxB,EAAMY,EAAM8D,EAAMvE,EAASywB,EAAQ1Y,EAAO2Y,EAAMC,EAAerK,MAhBjE,MAAAxjB,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAqBtB,OAAOiQ,EAAUzC,IAAI,SAACqgB,EAAMljB,GAC1B,MAAO,CACLvH,GAAIyqB,EAAK,GACThxB,KAAMgxB,EAAK,GACXpwB,KAAMowB,EAAK,GACXtsB,KAAMssB,EAAK,GACX7wB,QAAS6wB,EAAK,GACdJ,OAAQI,EAAK,GACb9Y,MAAO8Y,EAAK,GACZH,KAAMG,EAAK,GACXC,iBAAkBD,EAAK,GACvBvK,OAAQuK,EAAK,GACbxY,QACEsH,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,iBACb4d,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEhC,QAAS,WAGP,OAFApC,EAAK9G,MAAM+yB,qBAAqBjsB,EAAKtG,MAAM0U,KAAKvF,GAAKvH,IACrDtB,EAAK9G,MAAMgzB,uBACJ,GAET3qB,QAAQ,UACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJiW,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,gBACL,IACV4d,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEhC,QAAS,WAKP,OAJApC,EAAKtD,SAAS,CACZ4P,sBAAsB,EACtBC,mBAAoBvM,EAAKtG,MAAM0U,KAAKvF,GAAKvH,MAEpC,GAETC,QAAQ,SACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJiW,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,iBACL,+CAOLkX,GACb,IADmBhW,EACfoW,EAAQ,EADOnW,EAAAotB,GAEHrX,EAAK/F,MAFF,IAEnB,IAAAhQ,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAA2B,KAAlBmX,EAAkB3W,EAAA9B,MACzBkY,GAASO,EAAI6W,OAAO,IAAmB,QAAb7W,EAAIrV,KAAiB,GAAK,IAHnC,MAAAzB,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAKnB,OAAOqW,wCAGKJ,GACZ,OAAO7a,KAAK6yB,aAAahY,GAAQ7a,KAAK8yB,eAAejY,wCAG1CA,GACX,IADiBmS,EACb/R,EAAQ,EADKiS,EAAAgF,GAEDrX,EAAK/F,MAFJ,IAEjB,IAAAoY,EAAA/oB,MAAA6oB,EAAAE,EAAA9oB,KAAAC,MAA2B,KAAlBmX,EAAkBwR,EAAAjqB,MACzBkY,GAASO,EAAI8W,KAAK,IAAmB,QAAb9W,EAAIrV,KAAiB,GAAK,IAHnC,MAAAzB,GAAAwoB,EAAAvoB,EAAAD,GAAA,QAAAwoB,EAAAtoB,IAKjB,OAAOqW,mDAGgBJ,GACvB,IAAIkY,EAAUlY,EAAK/F,KAAK,GAAGzS,KAAK+vB,MAAM,KAClC5oB,EAAOxJ,KAAKJ,MAAMoE,SAASgvB,mBAAmBD,EAAQ,IACtDrpB,EAAU1J,KAAKJ,MAAMoE,SAASgvB,mBAAmBD,EAAQ,IAC7D,GAAY,OAATvpB,GAA6B,OAAZE,EAAkB,CACpC,IACIupB,EADYjzB,KAAK6yB,aAAahY,GACD7a,KAAKJ,MAAMoE,SAASikB,aAAave,EAAS1J,KAAKJ,MAAMoE,SAASukB,KAC3FF,EAAcroB,KAAKkzB,eAAerY,GAItC,OAFAoY,GADyC,QAA7BjzB,KAAKmzB,cAActY,GACY,GAAK,EAExCwN,EAAc5d,KAAK2O,IAAI,EAAG6Z,GAAmB,IAGvD,OAAO,yCAGMpY,GACb,IADmB2V,EACfvV,EAAQ,EADOyV,EAAAwB,GAEHrX,EAAK/F,MAFF,IAEnB,IAAA4b,EAAAvsB,MAAAqsB,EAAAE,EAAAtsB,KAAAC,MAA2B,CACzB4W,GADyBuV,EAAAztB,MACZmlB,OAAO,IAHH,MAAAxjB,GAAAgsB,EAAA/rB,EAAAD,GAAA,QAAAgsB,EAAA9rB,IAKnB,OAAOqW,oCAGCJ,GAAM,IAAAuY,EAAAC,EAAAnB,GACCrX,EAAK/F,MADN,IACd,IAAAue,EAAAlvB,MAAAivB,EAAAC,EAAAjvB,KAAAC,MAA0B,CACxB,GADwB+uB,EAAArwB,MACjBV,OAASwY,EAAK/F,KAAK,GAAGzS,KAC3B,OAAO,GAHG,MAAAqC,GAAA2uB,EAAA1uB,EAAAD,GAAA,QAAA2uB,EAAAzuB,IAMd,OAA4B,IAArBiW,EAAK/F,KAAKvK,6CAGLsQ,GACZ,OAAG7a,KAAKszB,UAAUzY,GACTA,EAAK/F,KAAK,GAAGzS,KAGf,yCAGKwY,GACZ,OAAG7a,KAAKszB,UAAUzY,GACT7a,KAAK8yB,eAAejY,IAAS,EAAI,MAAQ,OAG3C,2CAGOA,GACd,OAAG7a,KAAKszB,UAAUzY,GACT/Q,IAAYQ,aAAaG,KAAKC,IAAI1K,KAAK8yB,eAAejY,IAAQ,GAAK,IAAMA,EAAK/F,KAAK,GAAGud,OAAO,GAG/F,0CAGMxX,GACb,OAAG7a,KAAKszB,UAAUzY,GACT/Q,IAAYQ,aAAatK,KAAKuzB,cAAc1Y,GAAO,GAAK,IAAMA,EAAK/F,KAAK,GAAGwd,KAAK,GAGlF,yCAGKzX,GACZ,GAAG7a,KAAKszB,UAAUzY,GAAO,CACvB,IAAItY,EAAqC,QAA7BvC,KAAKmzB,cAActY,GAC/B,OAAO/Q,IAAYQ,aAAatK,KAAK6yB,aAAahY,IAAStY,EAAQ,GAAK,GAAI,GAAK,IAAMsY,EAAK/F,KAAK,GAAGwd,KAAK,GAG3G,MAAO,qDAGiBzX,GACxB,OAAG7a,KAAKszB,UAAUzY,GACT/Q,IAAYQ,aAAatK,KAAKwzB,yBAAyB3Y,GAAO,GAAK,IAGrE,6CAGS,IAAAlU,EAAA3G,KA4GhB,MA3GqB,CACnB,CAAE2H,OAAQ,OAAQuT,SAAU,OAAQiB,SAAU,GAAIhB,SAAU,IAC1DG,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,iBAEnF,CAAE9T,OAAQ,OAAQuT,SAAU,OAAQC,SAAU,IAC5CG,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,gBACjF9S,OAAQ,SAAAkS,GAAI,OACZ0G,EAAA9d,EAAAC,cAAA,YACE6d,EAAA9d,EAAAC,cAAA,cACGiD,EAAK8sB,cAAc5Y,OAK1B,CAAElT,OAAQ,OAAQuT,SAAU,OAAQC,SAAU,GAC5CG,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,gBACjF9S,OAAQ,SAAAkS,GAAI,OACV0G,EAAA9d,EAAAC,cAAA,YACE6d,EAAA9d,EAAAC,cAAA,cACGiD,EAAKwsB,cAActY,OAK5B,CAAElT,OAAQ,UAAWuT,SAAU,UAAWC,SAAU,IAClDG,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,iBAEnF,CAAE9T,OAAQ,SAAUuT,SAAU,SAAUC,SAAU,IAAKU,YAAY,EACjEF,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,GAAK,IAAMyY,EAAIzY,MAAM,KAGjEgZ,WAAY,SAACtY,EAAGuY,GAAQ,OAAOA,EAAE,GAAKvY,EAAE,IACrCkF,OAAQ,SAAAkS,GAAI,OACX0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cACGiD,EAAK+sB,gBAAgB7Y,OAKhC,CAAElT,OAAQ,QAASuT,SAAU,QAASC,SAAU,IAAKU,YAAY,EACjEF,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,GAAK,IAAMyY,EAAIzY,MAAM,KAGjEgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAE,GAAKvY,EAAE,IACfkF,OAAQ,SAAAkS,GAAI,OACX0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cACGiD,EAAKgtB,eAAe9Y,OAK7B,CAAElT,OAAQ,OAAQuT,SAAU,OAAQC,SAAU,IAAKU,YAAY,EAC/DF,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,GAAK,IAAMyY,EAAIzY,MAAM,KAGjEgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAE,GAAKvY,EAAE,IACfkF,OAAQ,SAAAkS,GAAI,OACb0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cACGiD,EAAKitB,cAAc/Y,OAI1B,CAAElT,OAAQ,aAAcuT,SAAU,mBAAoBC,SAAU,GAAIU,YAAY,EAChFF,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYimB,uBAAuBvU,EAAIzY,SAG5CgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAIvY,GACVkF,OAAQ,SAAAkS,GAAI,OACb0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cACGiD,EAAKktB,0BAA0BhZ,OAItC,CAAElT,OAAQ,SAAUuT,SAAU,SAAUC,SAAU,IAAKU,YAAY,EACnEF,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,GAAK,IAAMyY,EAAIzY,MAAM,KAGjEgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAE,GAAKvY,EAAE,IACfkF,OAAQ,SAAAkS,GAAI,OACX0G,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACpB2F,EAAA9d,EAAAC,cAAA,cACGoG,IAAYQ,aAAa3D,EAAKusB,eAAerY,GAAO,GAAK,WAKlE,CAAElT,OAAQ,UAAWuT,SAAU,UAAWiB,SAAU,GAAIhB,SAAU,GAAIiB,UAAU,EAAOP,YAAY,gDAOrG7b,KAAKoD,SAAS,CACZ4P,sBAAsB,gDAKxBhT,KAAKJ,MAAM+S,kBAAkB3S,KAAKI,MAAM6S,oBACxCjT,KAAKyS,qDAGE,IAAAtL,EAAAnH,KAEH4K,EADmB5K,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAC/B2F,WAE9ByR,EACFkF,EAAA9d,EAAAC,cAAC/D,GAAA,EAAD,CACEmB,cAAed,KAAKJ,MAAM2c,sBAC1BlZ,WAAYrD,KAAKJ,MAAM4c,mBACvBrZ,eAAgBnD,KAAKJ,MAAMuD,eAC3B4B,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,WAIrByY,EACF8E,EAAA9d,EAAAC,cAAC0F,GAAA,EAAD,CACEtI,cAAed,KAAKJ,MAAM+c,uBAC1BtZ,WAAYrD,KAAKJ,MAAMgd,oBACvBtV,kBAAmBtH,KAAKJ,MAAM0H,kBAC9BuC,kBAAmB7J,KAAKJ,MAAMiK,kBAC9B9E,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,WAIrB6Y,EACF0E,EAAA9d,EAAAC,cAACowB,GAAA,EAAD,CACEhzB,cAAed,KAAKI,MAAM4S,qBAC1B3P,WAAYrD,KAAKyS,kBACjBQ,mBAAoBjT,KAAKI,MAAM6S,mBAC/BN,kBAAmB3S,KAAK2S,oBAItBoK,EAAmBwE,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASxhB,GAAG,gBAAZ,iGACuEuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAD5E,mIAEyG6d,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAF9G,uIAG6G6d,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAHlH,wKAOzB,OACE6d,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,6BACN+P,aACEyQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CAIE7C,QAAQ,OACRc,MAAI,EACJiC,SAAO,EACPlC,QAAS,kBAAM3B,EAAKvH,MAAMsd,uBAE1BqE,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,eAThB,cAWA4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAgBrM,UAAU,SAASC,QAASL,GAC1CwE,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAER0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPd,WAYJiN,SAAUhG,EAAa,UAA2B,IAAfA,EAAmB,GAAK,KAC3DuG,QACEoQ,EAAA9d,EAAAC,cAACguB,EAAA,EAAD,CACE/tB,UAAU,aACVmR,KAAM9U,KAAKI,MAAM0U,KACjB+G,YAAU,EACVyB,QAAStd,KAAKud,kBACdC,gBAAiB,GACjBC,WAAY3T,IAAY4T,cAAc,SAAU1d,KAAKJ,MAAMmF,eAIhE/E,KAAKJ,MAAM2c,sBAAwBF,EAAiB,GACpDrc,KAAKJ,MAAM+c,uBAAyBF,EAAkB,GACtDzc,KAAKI,MAAM4S,qBAAuB6J,EAAiC,cAtZzD1T,uBCgEV4qB,eAtEb,SAAAA,EAAYn0B,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA+zB,IACjBl0B,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAi0B,GAAA5zB,KAAAH,KAAMJ,KACDQ,MAAQ,CACXW,MAAO,iBACPC,WAAY,SACZsG,kBAAmB1H,EAAM0H,kBACzB8jB,UAAWxrB,EAAM0H,kBAAkB/E,MACnCyoB,OAAQprB,EAAM0H,kBAAkB+B,WAAWC,WAC3CqhB,YAAa,KACb/gB,SAAU/J,EAAK0J,gBAAgB3J,EAAM0H,kBAAkBjF,KAAKmH,MAC5DohB,cAAe,KACfC,WAAYjrB,EAAM0H,kBAAkB/E,MAAQ1C,EAAKwrB,uBAAyBxrB,EAAKyrB,0BAC/E7pB,KAAM7B,EAAM0H,kBAAkBqC,KAC9BhI,UAAW,KACXC,QAAShC,EAAM0H,kBAAkB1F,SAInCtB,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAW,iBACzDC,IAAQC,UAAUJ,OAAOC,SAASC,SAAW,iBAnB5Bb,yFAuBOgB,4CAuBV+I,GACd,MAAO,CACL7G,MAAO6G,EACPpF,MAAOoF,EAASnF,sDAOlB,GAFAnE,QAAQC,IAAI,sBAETP,KAAKirB,cAAcjrB,KAAKI,MAAM4qB,SAC9BhrB,KAAKkrB,gBAAgBlrB,KAAKI,MAAMwJ,WAChC5J,KAAK4C,YAAY5C,KAAKI,MAAMqB,MAAO,CACpCnB,QAAQC,IAAI,sCAEZ,IAAI8B,EAAO,IAAIC,IAAatC,KAAKI,MAAMwJ,SAAS7G,MAAO/C,KAAKJ,MAAMoE,SAASukB,KACvEtlB,EAAK,IAAIC,KAAY,EAAOlD,KAAKI,MAAMgrB,UAAW/oB,EAAMW,WAAWhD,KAAKI,MAAM4qB,QAAS,EAAGhrB,KAAKI,MAAMqB,KAAMzB,KAAKI,MAAMwB,SAC1H5B,KAAKJ,MAAMiK,kBAAkB5G,GAC7BjD,KAAKJ,MAAMyD,qBAjEeonB,kiCCuPjBuJ,eA9Ob,SAAAA,EAAYp0B,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAg0B,IACjBn0B,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAk0B,GAAA7zB,KAAAH,KAAMJ,KACD6S,kBAAoB5S,EAAK4S,kBAAkBvJ,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAK8S,kBAAoB9S,EAAK8S,kBAAkBzJ,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAKO,MAAQ,CACX0U,KAAMjV,EAAKmyB,iBAAiBpyB,GAC5BoT,sBAAsB,EACtBC,mBAAoB,MAPLpT,oFAYjBS,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,MACzE3S,IAAQ4S,SAAS/S,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,wDAIpCzS,GACxBb,KAAKoD,SAAS,CACZ0R,KAAM9U,KAAKgyB,iBAAiBnxB,8CAIfjB,GAAO,IAAA8G,EAAA1G,KAEhB6U,EAAY,GACdod,EAAcryB,EAAMmF,UAAU8F,aAAa5F,MAAM,EAAGrF,EAAMmF,UAAU8F,aAAaN,QACrF0nB,EAAYzF,KAAK,SAAC/oB,EAAGuY,GAAJ,OAAUA,EAAErS,KAAKkjB,UAAYppB,EAAEkG,KAAKkjB,YAJ/B,IAAAhpB,EAAAC,EAAAmwB,GAKPhC,GALO,IAKtB,IAAAnuB,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA4B,KAAnBpB,EAAmBY,EAAAd,MAC1B,IAAIE,EAAG4kB,QAAS,CACd,IAAIpmB,EAAOwB,EAAG0G,KAAKwoB,cAAcC,MAAM,KAAK,GACxCzsB,EAAO1C,EAAGZ,KAAKmH,KAAK7D,KACpBQ,EAAOlD,EAAGV,MAAQ,UAAY,aAC9BX,EAAyB,SAAfqB,EAAGrB,QAAqB,GAAKqB,EAAGrB,QAC1CywB,EAAS,CAACpvB,EAAGoG,WAAYpG,EAAGZ,KAAKmH,KAAK/E,MAC1CoQ,EAAUtQ,KAAK,CAACtB,EAAIxB,EAAMkE,EAAMQ,EAAMvE,EAASywB,MAZ7B,MAAA3tB,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAgBtB,OAAOiQ,EAAUzC,IAAI,SAACqgB,EAAMljB,GAC1B,MAAO,CACLvH,GAAIyqB,EAAK,GACThxB,KAAMgxB,EAAK,GACX9sB,KAAM8sB,EAAK,GACXtsB,KAAMssB,EAAK,GACX7wB,QAAS6wB,EAAK,GACdJ,OAAQI,EAAK,GACbxY,QAEEsH,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,iBACb4d,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEhC,QAAS,WAGP,OAFApC,EAAK9G,MAAM+yB,qBAAqBjsB,EAAKtG,MAAM0U,KAAKvF,GAAKvH,IACrDtB,EAAK9G,MAAMs0B,yBACJ,GAETjsB,QAAQ,UACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJiW,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,gBACL,IACV4d,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEhC,QAAS,WAKP,OAJApC,EAAKtD,SAAS,CACZ4P,sBAAsB,EACtBC,mBAAoBvM,EAAKtG,MAAM0U,KAAKvF,GAAKvH,MAEpC,GAETC,QAAQ,SACRiD,OAAK,EACLrC,QAAM,EACNyC,MAAI,GAEJiW,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,iBACL,kDAkClB,MA1BqB,CACnB,CAAEgE,OAAQ,OAAQuT,SAAU,OAAQiB,SAAU,GAAI6J,MAAO,IACvD1K,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,iBAEnF,CAAE9T,OAAQ,OAAQuT,SAAU,OAAQiB,SAAU,IAAK6J,MAAO,IACxD1K,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,iBAEnF,CAAE9T,OAAQ,OAAQuT,SAAU,OAAQiB,SAAU,GAAI6J,MAAO,IACvD1K,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,iBAEnF,CAAE9T,OAAQ,UAAWuT,SAAU,UAAWiB,SAAU,IAAK6J,MAAO,IAAK7K,SAAU,IAC7EG,aAAc,SAACC,EAAQC,GAAT,OAAuF,IAAtEA,EAAID,EAAOvT,IAAIyT,cAAcC,QAAQH,EAAOxY,MAAM0Y,iBAEnF,CAAE9T,OAAQ,SAAUuT,SAAU,SAAUiB,SAAU,IAAK6J,MAAO,IAAKnK,YAAY,EAC/EF,KAAM,SAAAH,GAAG,OACP+F,EAAA9d,EAAAC,cAAA,QAAM0X,MAAO,CAAEQ,MAAO,UACnB9R,IAAYQ,aAAakR,EAAIzY,MAAM,GAAI,GAAK,IAAMyY,EAAIzY,MAAM,KAGjEgZ,WAAY,SAACtY,EAAGuY,GACd,OAAOA,EAAE,GAAKvY,EAAE,KAGlB,CAAEkE,OAAQ,UAAWuT,SAAU,UAAWiB,SAAU,GAAIhB,SAAU,GAAIiB,UAAU,EAAOP,YAAY,gDAOrG7b,KAAKoD,SAAS,CACZ4P,sBAAsB,gDAKxBhT,KAAKJ,MAAM+S,kBAAkB3S,KAAKI,MAAM6S,oBACxCjT,KAAKyS,0DAGO9M,EAAMZ,GAElB,GAAmC,IADZA,EAAUC,WAAWC,OAAO,GAAG,GAClC2F,WAElB,OAAqC,IAAlC7F,EAAU8F,aAAaN,OAChBgX,EAAA9d,EAAAC,cAAA,YAAM6d,EAAA9d,EAAAC,cAAA,qDACZ6d,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,8CACA6d,EAAA9d,EAAAC,cAAA,uCAKE6d,EAAA9d,EAAAC,cAAA,kBAAUiC,EAAV,2CAIH,IAAAgB,EAAA3G,KACH4oB,EAAmB5oB,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GAC7DkvB,EAAen0B,KAAKJ,MAAMmF,UAAU8F,aAAaN,OAASqe,EAAiBhe,WAE3EymB,EACF9P,EAAA9d,EAAAC,cAAC4tB,EAAD,CACExwB,cAAed,KAAKJ,MAAM2xB,wBAC1BluB,WAAYrD,KAAKJ,MAAM4xB,qBACvBruB,eAAgBnD,KAAKJ,MAAMuD,eAC3B4B,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,WAIrBowB,EACF7S,EAAA9d,EAAAC,cAAC2wB,GAAD,CACEvzB,cAAed,KAAKJ,MAAM00B,yBAC1BjxB,WAAYrD,KAAKJ,MAAM20B,sBACvBjtB,kBAAmBtH,KAAKJ,MAAM0H,kBAC9BuC,kBAAmB7J,KAAKJ,MAAMiK,kBAC9B9E,UAAW/E,KAAKJ,MAAMmF,UACtBf,SAAUhE,KAAKJ,MAAMoE,WAIrB6Y,EACF0E,EAAA9d,EAAAC,cAACowB,GAAA,EAAD,CACEhzB,cAAed,KAAKI,MAAM4S,qBAC1B3P,WAAYrD,KAAKyS,kBACjBQ,mBAAoBjT,KAAKI,MAAM6S,mBAC/BN,kBAAmB3S,KAAK2S,oBAItBoK,EAAmBwE,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASxhB,GAAG,gBAAZ,2KACiJuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WADtJ,yIAE+G6d,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAFpH,wLAMzB,OACE6d,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,+CACN+P,aACEyQ,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CAIE7C,QAAQ,OACRc,MAAI,EACJiC,SAAO,EACPlC,QAAS,kBAAMnC,EAAK/G,MAAMqqB,yBAE1B1I,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,eAThB,gBAWA4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAgBrM,UAAU,SAASC,QAASL,GAC1CwE,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAEN0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPhB,WAYJiN,SAAUujB,EAAe,YAA+B,IAAjBA,EAAqB,GAAK,KACjEhjB,QACEoQ,EAAA9d,EAAAC,cAACguB,EAAA,EAAD,CACE/tB,UAAU,aACVmR,KAAM9U,KAAKI,MAAM0U,KACjB+G,YAAU,EACVyB,QAAStd,KAAKud,kBACdC,gBAAiB,GACjBC,WAAYzd,KAAK0d,cAAc,0BAA2B1d,KAAKJ,MAAMmF,eAI1E/E,KAAKJ,MAAM2xB,wBAA0BF,EAAmB,GACxDrxB,KAAKJ,MAAM00B,yBAA2BF,EAAoB,GAC1Dp0B,KAAKI,MAAM4S,qBAAuB6J,EAAiC,cAtOxD1T,ikCC4DXqrB,eAnEb,SAAAA,EAAY50B,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAw0B,IACjB30B,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA00B,GAAAr0B,KAAAH,KAAMJ,KACDQ,MAAQ,CACXq0B,aAAc50B,EAAK60B,cAAc90B,IAHlBC,yFAQOgB,GACxBb,KAAKoD,SAAS,CACVqxB,aAAcz0B,KAAK00B,cAAc7zB,2CAIzBjB,GACZ,IADmBiE,EACf+kB,EAAmBhpB,EAAMkuB,UAGvBhZ,EAAO,GAJMhR,EAAA6wB,GAKE/L,EAAiB1jB,SAAShB,QAL5B,IAKnB,IAAAJ,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAAuD,KAA9CuF,EAA8C/F,EAAAd,MACjD6pB,EAAkBhE,EAAiB6D,mBAAmB7sB,EAAMoE,SAAU4F,EAAUhK,EAAMoE,SAASukB,KACnGzT,EAAKvQ,KAAK,CAACoB,KAAMiE,EAASnF,KAAMmgB,EAAGgI,KAPlB,MAAAloB,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IA+BnB,MArBmB,CACjB+gB,MAAO,CACLxf,KAAM,OAERpF,MAAO,CACLkR,KAAM,MAERqU,OAAQ,CAAC,CACP3gB,KAAM,aACNmP,KAAMA,IAERyR,QAAS,CACPG,QAAQ,EACRF,YAAa,OACbG,cAAe,GAEjBC,QAAS,CACPC,SAAS,qCAOZ,IAAIjc,EAAa5K,KAAKJ,MAAMkuB,UAAUljB,WACvC,OACE2W,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAOf,KAAKJ,MAAMmB,MAClB6P,SAAUhG,EAAa,UAA2B,IAAfA,EAAmB,GAAK,KAC3DuG,QAASoQ,EAAA9d,EAAAC,cAAC6jB,EAAA9jB,EAAD,CACP+jB,WAAYC,KACZhhB,QAASzG,KAAKI,MAAMq0B,wBAxDHtrB,4iCCuNZyrB,eAhNb,SAAAA,EAAYh1B,GAAO,IAAAC,EAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA40B,IACjB/0B,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA80B,GAAAz0B,KAAAH,KAAMJ,KAEDi1B,kBAAoBh1B,EAAKg1B,kBAAkB3rB,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAEzB,IAAIi1B,EAAYl1B,EAAMmF,UAAUgwB,sBAC5B/vB,EAAanF,EAAKm1B,6BAA6Bp1B,EAAOk1B,GANzC,OAOjBj1B,EAAKO,MAAQ,CACX60B,cAAejwB,EAAWkwB,KAC1BtM,iBAAkB5jB,EAAWM,QAC7B6vB,eAAgBnwB,EAAWowB,MAC3BC,wBAAyBx1B,EAAK6nB,2BAA2B9nB,EAAOoF,EAAWkwB,KAAMlwB,EAAWM,QAASN,EAAWowB,QAXjGv1B,oFAgBjB+uB,GAAmBnV,KAAOzZ,KAAKJ,MAAMmF,UAAUgwB,sBAC/CnG,GAAmBK,iBAAmB,WAEtC3uB,QAAQC,IAAI,gBAAkBC,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,MACzE3S,IAAQ4S,SAAS/S,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,wDAIpCzS,GACxB,IAAIi0B,EAAYj0B,EAAUkE,UAAUgwB,sBAChC/vB,EAAahF,KAAKg1B,6BAA6Bn0B,EAAWi0B,GAC9D90B,KAAKoD,SAAS,CACZ6xB,cAAejwB,EAAWkwB,KAC1BtM,iBAAkB5jB,EAAWM,QAC7B6vB,eAAgBnwB,EAAWowB,MAC3BC,wBAAyBr1B,KAAK0nB,2BAA2B7mB,EAAWmE,EAAWkwB,KAAMlwB,EAAWM,QAASN,EAAWowB,qDAKtH,IAAIpwB,EAAahF,KAAKg1B,6BAA6Bh1B,KAAKJ,MAAOgvB,GAAmBnV,MAClFzZ,KAAKoD,SAAS,CACZ6xB,cAAejwB,EAAWkwB,KAC1BtM,iBAAkB5jB,EAAWM,QAC7B6vB,eAAgBnwB,EAAWowB,MAC3BC,wBAAyBr1B,KAAK0nB,2BAA2B1nB,KAAKJ,MAAOoF,EAAWkwB,KAAMlwB,EAAWM,QAASN,EAAWowB,8DAI5Fx1B,EAAO6Z,GAGlC,IAAI6b,EAAQ,IAAI5zB,KAAK,KAAK,EAAE,IAC5B4zB,EAAMC,SAAS,EAAE,EAAE,EAAE,GAEqC,MAAvD31B,EAAMoE,SAASC,aAAamoB,IAAIxsB,EAAMoE,SAASukB,MACuB,MAAvE3oB,EAAMoE,SAASC,aAAamoB,IAAIxsB,EAAMoE,SAASukB,KAAKtjB,OAAOwU,GAAM,KACjE6b,EAAQ11B,EAAMoE,SAASC,aAAamoB,IAAIxsB,EAAMoE,SAASukB,KAAKtjB,OAAOwU,GAAM,GAAG9P,MAI9E,IAZwC9F,EAYpC2xB,EAAkB51B,EAAMmF,UAAU0wB,mBAAmBH,GAGrD1M,EAAmBhpB,EAAMmF,UAAUC,WAAWC,OAAO,GAAG,GACxDgwB,EAAgBrM,EAAkBuM,EAAiBvM,EAhBf9kB,EAAA4xB,GAiB3BF,GAjB2B,IAiBxC,IAAA1xB,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAA8B,KAAtBqN,EAAsB7N,EAAAd,MACxB8lB,EAAenX,EAAEuX,gBAAgBrpB,EAAMoE,SAAUpE,EAAMoE,SAASukB,KAEjEM,GAAgBoM,EAAchM,gBAAgBrpB,EAAMoE,SAAUpE,EAAMoE,SAASukB,OAC9E0M,EAAgBvjB,GAGfmX,GAAgBsM,EAAelM,gBAAgBrpB,EAAMoE,SAAUpE,EAAMoE,SAASukB,OAC/E4M,EAAiBzjB,IAzBmB,MAAAhN,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IA+BxC,MAAO,CACLswB,KAAMD,EACN3vB,QAASsjB,EACTwM,MAAOD,8CAIQv1B,EAAOkuB,GACxB,IAAM2C,EAAQ,GAEd,GAA0D,MAAvD7wB,EAAMoE,SAASC,aAAamoB,IAAIxsB,EAAMoE,SAASukB,KAAc,KAAA1jB,EAAAC,EAAA4wB,GACjD91B,EAAMoE,SAASC,aAAamoB,IAAIxsB,EAAMoE,SAASukB,MADE,IAC9D,IAAAzjB,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAkE,KAA1DqqB,EAA0D7pB,EAAA9B,MAC5DkqB,EAAmBa,EAAU6H,oBAAoB/1B,EAAMoE,SAAU0qB,EAAE/kB,KAAM/J,EAAMoE,SAASukB,KAC5FkI,EAAMlsB,KAAK,CAACmqB,EAAE/kB,KAAKkjB,UAAWI,KAH8B,MAAAvoB,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAOrC,MAAtB6rB,EAAMxrB,OAAO,GAAG,KACjBwrB,EAAMxrB,OAAO,GAAG,GAAG,GAAK6oB,EAAU7E,gBAAgBrpB,EAAMoE,SAAUpE,EAAMoE,SAASukB,MAIrF,OAAOkI,qDAGkB7wB,EAAOs1B,EAAM5vB,EAAS8vB,GAC/C,IAAI9O,EAAS,GACbA,EAAO/hB,KAAK,CAACoB,KAAM,iBAAkBmP,KAAM9U,KAAK41B,mBAAmBh2B,EAAOs1B,KAC1E5O,EAAO/hB,KAAK,CAACoB,KAAM,oBAAqBmP,KAAM9U,KAAK41B,mBAAmBh2B,EAAO0F,KAC7EghB,EAAO/hB,KAAK,CAACoB,KAAM,kBAAmBmP,KAAM9U,KAAK41B,mBAAmBh2B,EAAOw1B,KAG3E,IADA,IAAIS,EAAiB71B,KAAK60B,kBAN4BiB,EAAA,SAO9C/gB,GACN6Z,GAAmBI,QAAQja,GAAGghB,OAAS,CACrCC,MAAO,WACLpH,GAAmBnV,KAAOmV,GAAmBI,QAAQja,GAAG0E,KACxDmV,GAAmBK,iBAAmBL,GAAmBI,QAAQja,GAAGka,iBACpE4G,EAAe11B,UALb4U,EAAI,EAAGA,EAAI6Z,GAAmBI,QAAQzkB,OAAQwK,IAAK+gB,EAAnD/gB,GA0BR,MAhB2B,CACzBhU,MAAO,CACLkR,KAAM,MAERgf,cAAerC,GACftI,OAAQA,EACRC,QAAS,CACPG,QAAQ,EACRF,YAAa,OACbG,cAAe,GAEjBC,QAAS,CACPC,SAAS,qCAQb,IAAM9J,EAAmBwE,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASxhB,GAAG,gBAAZ,qJAC2HuZ,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WADhI,+IAEqH6d,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAF1H,sFAG4D6d,EAAA9d,EAAAC,cAAA,WAAK6d,EAAA9d,EAAAC,cAAA,WAHjE,kJAOzB,OACE6d,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,IACP+Z,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEvP,MAAM,4DACN6P,SAAiD,MAAvCge,GAAmBK,iBAA2BL,GAAmBK,iBAAmB,WAC9Fne,aACEyQ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAgBrM,UAAU,SAASC,QAASL,GAC1CwE,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACR+C,SAAO,EAGPnC,QAAM,GAEN0Y,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BAPhB,UAWJwN,QAASoQ,EAAA9d,EAAAC,cAAC6jB,EAAA9jB,EAAD,CACP+jB,WAAYqK,IACZC,gBAAiB,aACjBrrB,QAASzG,KAAKI,MAAMi1B,8BAU5B9T,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACT+Z,EAAA9d,EAAAC,cAACuyB,GAAD,CACIl1B,MAAM,iBACN+sB,UAAW9tB,KAAKI,MAAM60B,cACtBjxB,SAAUhE,KAAKJ,MAAMoE,YAGzBud,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACP+Z,EAAA9d,EAAAC,cAACuyB,GAAD,CACEl1B,MAAM,oBACN+sB,UAAW9tB,KAAKI,MAAMwoB,iBACtB5kB,SAAUhE,KAAKJ,MAAMoE,YAGzBud,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACP+Z,EAAA9d,EAAAC,cAACuyB,GAAD,CACEl1B,MAAM,kBACN+sB,UAAW9tB,KAAKI,MAAM+0B,eACtBnxB,SAAUhE,KAAKJ,MAAMoE,sBAvMPmF,aC4Cf+sB,GAjDO,CACpB,CACEC,KAAM,aACNxwB,KAAM,YACN2F,KAAM,kBACN8qB,UAAWlH,IACV,CACDiH,KAAM,UACNxwB,KAAM,SACN2F,KAAM,gBACN8qB,UAAWrE,IACV,CACDoE,KAAM,aACNxwB,KAAM,YACN2F,KAAM,mBACN8qB,UAAWzkB,MACV,CACDwkB,KAAM,WACNxwB,KAAM,UACN2F,KAAM,cACN8qB,UAAWpC,IACV,CACDmC,KAAM,eACNxwB,KAAM,cACN2F,KAAM,mBACN8qB,UAAWxB,IACV,CACDyB,UAAU,EACVF,KAAM,UACNxwB,KAAM,SACNvF,MAAO,aACPkL,KAAM,eACNgrB,MAAO,CACL,CACEH,KAAM,eACNxwB,KAAM,cACN4wB,KAAM,IACNH,UAAW,QAUjB,CAAEI,UAAU,EAAML,KAAM,IAAKM,OAAQ,aAAc9wB,KAAM,kCChDrD+wB,8MAeJC,WAAa,SAACC,GACZ/2B,EAAKg3B,MAAQD,KAEf9tB,QAAU,SAACnE,GACTA,EAAEmyB,iBACEj3B,EAAKg3B,OAAOh3B,EAAKg3B,MAAMb,WAE7B3vB,SAAW,SAAC1B,GACV9E,EAAKD,MAAMyG,SAAS1B,EAAE4B,OAAOwwB,MAAOpyB,GACpCA,EAAE4B,OAAOxD,MAAM,8EAGR,IAAAgI,EAC6B/K,KAAKJ,MAAjCo3B,EADDjsB,EACCisB,SAAUC,EADXlsB,EACWksB,OAAQ7b,EADnBrQ,EACmBqQ,MAClBub,EAAkC32B,KAAlC22B,WAAY7tB,EAAsB9I,KAAtB8I,QAASzC,EAAarG,KAAbqG,SAE7B,OACE6wB,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,qBACEpuB,QAASA,EACTquB,WAAYruB,EACZsuB,KAAK,SACLC,SAAS,IACTjc,MAAKtb,OAAAw3B,GAAA,EAAAx3B,CAAA,CAAIy3B,QAAS,gBAAmBnc,IAEpC4b,GAGHE,EAAA,cAACM,GAAA,EAAD,KACEN,EAAA,uBACEO,IAAKd,EACLxwB,KAAK,OACL8wB,OAAQA,EACR5wB,SAAUA,EACV+U,MAAO,CAAEmc,QAAS,mBAjDLG,aAAnBhB,GAYGiB,aAAe,CACpBV,OAAQ,WA4CGP,IChDXkB,GDgDWlB,MC2HAmB,eAxKb,SAAAA,EAAYj4B,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA63B,IACjBh4B,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA+3B,GAAA13B,KAAAH,KAAMJ,KACDk4B,YAAcj4B,EAAKi4B,YAAY5uB,KAAjBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACnBA,EAAKO,MAAQ,CACX23B,UAAWC,UAAUC,SAASvc,QAAQ,QAAU,EAChDsK,MAAOxlB,OAAO+uB,YALC1vB,2EASPq4B,GACV,OAAOl4B,KAAKJ,MAAMa,SAASC,SAASgb,QAAQwc,IAAc,EAAI,SAAW,8CAKzEl4B,KAAKoD,SAAS,CAAE4iB,MAAOxlB,OAAO+uB,yDAG9BvvB,KAAKm4B,mBAEL33B,OAAOgvB,iBAAiB,SAAUxvB,KAAKm4B,iBAAiBjvB,KAAKlJ,OACzDg4B,UAAUC,SAASvc,QAAQ,QAAU,IACvCkc,GAAK,IAAIQ,IAAiBp4B,KAAKq4B,KAAKC,eAAgB,CAClDC,iBAAiB,EACjBC,iBAAiB,kDAKjBR,UAAUC,SAASvc,QAAQ,QAAU,GACvC+c,WAAW,WACTb,GAAGc,UACF,oDAIDV,UAAUC,SAASvc,QAAQ,QAAU,GACvCkc,GAAGe,gDAML,OADAC,SAASC,eAAe,eAAe7C,SAChC,2CAIP,OAAOh2B,KAAKJ,MAAMk5B,YAAc,EAAI,KAAO94B,KAAKJ,MAAMk5B,YAAc,IAAM,oCAGnE,IAAApyB,EAAA1G,KACP,OACEuhB,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,UAAUo1B,aAAW,QAAQC,aAAYC,KAEtD1X,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,QACb4d,EAAA9d,EAAAC,cAAA,KACE6O,KAAK,0BACL5O,UAAU,yBAEV4d,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,YACb4d,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,iBAGjB4d,EAAA9d,EAAAC,cAAA,KACE6O,KAAK,0BACL5O,UAAU,2BAFZ,cAOF4d,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,kBAAkB8zB,IAAI,kBACnClW,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,OAUXuyB,GAAgB9jB,IAAI,SAACqgB,EAAMljB,GAC1B,IAAI2pB,EAAK,GAET,OADAA,EAAGzG,EAAI,QAAc/rB,EAAKtG,MAAMqyB,EAAKryB,OACjCqyB,EAAK4D,SAEL9U,EAAA9d,EAAAC,cAAA,MAAIC,UAAW+C,EAAKyyB,YAAY1G,EAAK0D,MAAO5mB,IAAKA,GAC/CgS,EAAA9d,EAAAC,cAAA,KAAGoF,QAAS,kBAAMpC,EAAKtD,SAAS81B,KAC9B3X,EAAA9d,EAAAC,cAAA,KAAGC,UAAW8uB,EAAKnnB,OACnBiW,EAAA9d,EAAAC,cAAA,SACG+uB,EAAK9sB,MAAQe,EAAKtG,MAAMqyB,EAAKryB,OAAS,GAAKsG,EAAK0yB,kBACjD7X,EAAA9d,EAAAC,cAAA,KACEC,UACE+C,EAAKtG,MAAMqyB,EAAKryB,OACZ,mBACA,YAKZmhB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAU6P,GAAI3yB,EAAKtG,MAAMqyB,EAAKryB,QAC5BmhB,EAAA9d,EAAAC,cAAA,MAAIC,UAAU,OACZ4d,EAAA9d,EAAAC,cAAA,MAAIC,UAAW,GAAI4L,IAAK,GACtBgS,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,WAAWmF,QAAS,kBAAMpC,EAAK9G,MAAM05B,iBAC9C/X,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,sBACd4d,EAAA9d,EAAAC,cAAA,kBAGN6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAW,GAAI4L,IAAK,GACtBgS,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,WAAWmF,QAAS,kBAAMpC,EAAKoxB,gBACxCvW,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,sBACd4d,EAAA9d,EAAAC,cAAA,mBAGN6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAW,GAAI4L,IAAK,GACtBgS,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,WAAWmF,QAAS,kBAAMpC,EAAK9G,MAAM25B,sBAChDhY,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,mBACd4d,EAAA9d,EAAAC,cAAA,gBAAQgD,EAAK0yB,sBAKrB7X,EAAA9d,EAAAC,cAAC81B,GAAD,CACEnzB,SAAUK,EAAK9G,MAAM65B,wBACrBxC,OAAO,oBACP1V,EAAA9d,EAAAC,cAAA,KAAGsE,GAAG,kBAMRyqB,EAAK+D,SACA,KAGLjV,EAAA9d,EAAAC,cAAA,MAAIC,UAAW+C,EAAKyyB,YAAY1G,EAAK0D,MAAO5mB,IAAKA,GAC/CgS,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE2E,GAAIsM,EAAK0D,KACTxyB,UAAU,WACV+1B,gBAAgB,UAEhBnY,EAAA9d,EAAAC,cAAA,KAAGC,UAAW8uB,EAAKnnB,OACnBiW,EAAA9d,EAAAC,cAAA,SAAI+uB,EAAK9sB,UAOrB4b,EAAA9d,EAAAC,cAAA,MAAIC,UAAW,GAAI4L,IAAK,GACtBgS,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,WAAW4O,KAAK,sGAAsGhM,OAAO,SAASozB,IAAI,uBACrJpY,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,mBACd4d,EAAA9d,EAAAC,cAAA,uBAGJ6d,EAAA9d,EAAAC,cAAA,MAAIC,UAAW,GAAI4L,IAAK,GACtBgS,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,WAAWmF,QAAS,kBAAMpC,EAAK9G,MAAMg6B,kBAChDrY,EAAA9d,EAAAC,cAAA,KAAGC,UAAW,0BACd4d,EAAA9d,EAAAC,cAAA,6BA/JMyF,aCcP0wB,6LApBX,OAA2B,MAAxB75B,KAAKJ,MAAMmF,UACW/E,KAAKJ,MAAMmF,UAAUC,WAAWC,OAAO,GAAG,GACzCgkB,gBAAgBjpB,KAAKJ,MAAMoE,SAAUhE,KAAKJ,MAAMoE,SAASukB,KAG5E,mCAIP,OACEhH,EAAA9d,EAAAC,cAAA,WACE6d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKre,WAAS,GACZoW,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAASthB,SAAU,EAAGqK,KAAK,eACzBgP,EAAA9d,EAAAC,cAAA,SAAIoG,IAAYif,cAAc/oB,KAAKipB,8BAhBrB9f,aCoFXxB,eA/Eb,SAAAA,EAAY/H,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA2H,IACjB9H,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAA6H,GAAAxH,KAAAH,KAAMJ,KACDk6B,sBAAwBj6B,EAAKi6B,sBAAsB5wB,KAA3BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC7BA,EAAKk6B,oBAAsBl6B,EAAKk6B,oBAAoB7wB,KAAzBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAHVA,2EAKP,IACN8F,EADMe,EAAA1G,KAuBV,OArBAk2B,GAAgB9jB,IAAI,SAACqgB,EAAMljB,GAmBzB,OAlBIkjB,EAAK4D,SACP5D,EAAK6D,MAAMlkB,IAAI,SAACqgB,EAAMljB,GAIpB,OAHIkjB,EAAK0D,OAASzvB,EAAK9G,MAAMa,SAASC,WACpCiF,EAAO8sB,EAAK9sB,MAEP,QAGL8sB,EAAK+D,SACH/D,EAAK0D,OAASzvB,EAAK9G,MAAMa,SAASC,WACpCiF,EAAO8sB,EAAK9sB,OAQX,OAEFA,kDAIPizB,SAASoB,KAAKC,UAAUC,OAAO,4DAGbv1B,GAClBi0B,SAASuB,gBAAgBF,UAAUC,OAAO,kDAI1Cl6B,KAAKoD,SAAS,CAAE4iB,MAAOxlB,OAAO+uB,yDAI9B/uB,OAAOgvB,iBAAiB,SAAUxvB,KAAKyvB,YAAYvmB,KAAKlJ,wCAIxD,OACEuhB,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAQjiB,OAAK,GACXga,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,mBACb4d,EAAA9d,EAAAC,cAAA,UACEsE,GAAG,kBACHrE,UAAU,8CACVmF,QAAS9I,KAAK85B,uBAEdvY,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,gDACb4d,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,4CAGjB4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAO7hB,OAAR,KACE4Z,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAO4Q,MAAR,KAEGp6B,KAAKq6B,aAER9Y,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAO8Q,OAAR,CAAexxB,QAAS9I,KAAK+5B,uBAI9Bv5B,OAAO+uB,WAAa,IACnBhO,EAAA9d,EAAAC,cAAC62B,GACKv6B,KAAKJ,OAET,aA1ESuJ,uBCmCNR,oLA7BX,OACE4Y,EAAA9d,EAAAC,cAAA,UACEC,UACE,eAC4BgN,IAA3B3Q,KAAKJ,MAAM46B,YAA4B,sBAAwB,KAGlEjZ,EAAA9d,EAAAC,cAAA,OACEC,UACE,kBAAoCgN,IAArB3Q,KAAKJ,MAAM2H,MAAsB,SAAW,KAG7Dga,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,aACb4d,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,UACE6d,EAAA9d,EAAAC,cAAA,KAAG6O,KAAK,kCACNgP,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,kBADf,eAMN4d,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,wBAAb,kBACoB,MAAO,IAAIjC,MAAO+4B,UAAW,IADjD,eACkEC,GAAYC,kBApCnExxB,2CCDAyxB,GACnB,SAAAA,EAAYv4B,EAAMsX,EAAOhQ,EAAM0kB,GAAmBvuB,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA46B,GAChD56B,KAAKqC,KAAOA,EACZrC,KAAK2Z,MAAQA,EACb3Z,KAAK2J,KAAOA,EACZ3J,KAAKquB,iBAAmBA,aCLPwM,GACnB,SAAAA,EAAYp2B,EAAMkB,EAAMzD,GAAsB,IAAhBC,EAAgBsrB,UAAAljB,OAAA,QAAAoG,IAAA8c,UAAA,IAAAA,UAAA,GAAA3tB,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAA66B,GAC5C76B,KAAKyE,KAAOA,EACZzE,KAAK2F,KAAOA,EACZ3F,KAAKkC,KAAOA,EACZlC,KAAKmC,OAASA,EACdnC,KAAKiwB,KAAO,MCOT,IAAM6K,IAdTx6B,QAAQC,IAAIC,OAAOC,SAASs6B,MACC,mBAAzBv6B,OAAOC,SAASs6B,KAGT,gCAGJ,iCAOED,GAHuB,mBAAzBt6B,OAAOC,SAASs6B,+CCiDZC,oLAvDJ,IAAAn7B,EAAAG,KACP,OACEuhB,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKhiB,GAAI,GACP+Z,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CACE/hB,KAAMzH,KAAKJ,MAAMkB,cACjB4G,OAAQ,kBAAM7H,EAAKD,MAAMyD,eAEzBke,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM7hB,OAAP,CAAcC,aAAW,GACvB2Z,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM3hB,MAAP,+BAEF0Z,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM1hB,KAAP,KACEyZ,EAAA9d,EAAAC,cAAA,qBACU1D,KAAKJ,MAAMk5B,YADrB,kBACiD94B,KAAKJ,MAAMk5B,YAAc,EAAI,IAAM,GADpF,gGAIAvX,EAAA9d,EAAAC,cAAA,WACA6d,EAAA9d,EAAAC,cAAA,8DAIF6d,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAM7gB,OAAP,KACE4Y,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEjC,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMq7B,cAF5B,OAMA1Z,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACEjC,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMyD,eAF5B,MAMAke,EAAA9d,EAAAC,cAACoH,EAAA,EAAD,CACE7C,QAAQ,UACRc,MAAI,EACJC,IAAE,EACF7C,KAAK,SACL2C,QAAS,kBAAMjJ,EAAKD,MAAMs7B,4BAL5B,4CAtCsB/xB,aCoBzBgyB,oLAlBX,OACE5Z,EAAA9d,EAAAC,cAAA,WACE6d,EAAA9d,EAAAC,cAAC4M,EAAA,EAAD,CACEa,QACEoQ,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAMjiB,OAAK,GACTga,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,KACEjI,EAAA9d,EAAAC,cAAC8lB,EAAA,EAAD,CAAKK,GAAI,GAAIriB,GAAI,IACf+Z,EAAA9d,EAAAC,cAAA,SAAG6d,EAAA9d,EAAAC,cAAA,KAAGqmB,MAAM,oBAAoBqR,cAAY,SAA5C,0EAA8H7Z,EAAA9d,EAAAC,cAAA,KAAG6O,KAAK,2BAAR,2CAA0EgP,EAAA9d,EAAAC,cAAA,KAAGC,UAAU,cAAcy3B,cAAY,wBAT1OjyB,4iCCERkyB,GAJG,CAChB,CAAElF,KAAM,IAAKxwB,KAAM,OAAQywB,sBC6B3B,SAAAkF,EAAY17B,GAAO,IAAAC,EAAA,OAAAC,OAAAqhB,EAAA,EAAArhB,CAAAE,KAAAs7B,IACjBz7B,EAAAC,OAAAshB,EAAA,EAAAthB,CAAAE,KAAAF,OAAAsP,EAAA,EAAAtP,CAAAw7B,GAAAn7B,KAAAH,KAAMJ,KACD27B,wBAA0B17B,EAAK07B,wBAAwBryB,KAA7BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAE/BA,EAAK+5B,cAAgB/5B,EAAK+5B,cAAc1wB,KAAnBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACrBA,EAAK2qB,cAAgB3qB,EAAK2qB,cAActhB,KAAnBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAErBA,EAAKqd,mBAAqBrd,EAAKqd,mBAAmBhU,KAAxBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC1BA,EAAK2c,mBAAqB3c,EAAK2c,mBAAmBtT,KAAxBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC1BA,EAAKoqB,qBAAuBpqB,EAAKoqB,qBAAqB/gB,KAA1BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC5BA,EAAK2xB,qBAAuB3xB,EAAK2xB,qBAAqBtoB,KAA1BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAE5BA,EAAK+yB,oBAAsB/yB,EAAK+yB,oBAAoB1pB,KAAzBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC3BA,EAAK+c,oBAAsB/c,EAAK+c,oBAAoB1T,KAAzBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC3BA,EAAKq0B,sBAAwBr0B,EAAKq0B,sBAAsBhrB,KAA3BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC7BA,EAAK00B,sBAAwB10B,EAAK00B,sBAAsBrrB,KAA3BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAE7BA,EAAK27B,8BAAgC37B,EAAK27B,8BAA8BtyB,KAAnCpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAErCA,EAAKsD,eAAiBtD,EAAKsD,eAAe+F,KAApBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACtBA,EAAK8S,kBAAoB9S,EAAK8S,kBAAkBzJ,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAKgK,kBAAoBhK,EAAKgK,kBAAkBX,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAEzBA,EAAK8yB,qBAAuB9yB,EAAK8yB,qBAAqBzpB,KAA1BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAE5BA,EAAK47B,kBAAoB57B,EAAK47B,kBAAkBvyB,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAK67B,gBAAkB77B,EAAK67B,gBAAgBxyB,KAArBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACvBA,EAAK87B,qBAAuB97B,EAAK87B,qBAAqBzyB,KAA1BpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAC5BA,EAAK+7B,kBAAoB/7B,EAAK+7B,kBAAkB1yB,KAAvBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACzBA,EAAKg8B,cAAgBh8B,EAAKg8B,cAAc3yB,KAAnBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACrBA,EAAKi8B,UAAYj8B,EAAKi8B,UAAU5yB,KAAfpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACjBA,EAAKk8B,OAASl8B,EAAKk8B,OAAO7yB,KAAZpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAEdA,EAAKm8B,gBAAkBn8B,EAAKm8B,gBAAgB9yB,KAArBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAEvBA,EAAKy5B,aAAez5B,EAAKy5B,aAAapwB,KAAlBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACpBA,EAAKo8B,cAAgBp8B,EAAKo8B,cAAc/yB,KAAnBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACrBA,EAAKq8B,cAAgBr8B,EAAKq8B,cAAchzB,KAAnBpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KACrBA,EAAKs8B,iCAAmCt8B,EAAKs8B,iCAAiCjzB,KAAtCpJ,OAAA6jB,EAAA,EAAA7jB,QAAA6jB,EAAA,EAAA7jB,CAAAD,KAExCA,EAAKO,MAAQ,CACXg8B,oBAAqB,KACrBxS,kBAAkB,EAClBrN,uBAAuB,EACvBgV,yBAAyB,EACzB5U,wBAAwB,EACxB2X,0BAA0B,EAC1B+H,kCAAkC,EAClCt3B,UAAWA,GACXf,SAAUA,GACVsD,kBAAmB,KACnBwxB,YAAa,GAnDEj5B,8EAuDJgrB,GACb,IADyBhnB,EACrBy4B,EAAM,GADex4B,EAAAy4B,GAEZ1R,GAFY,IAEzB,IAAA/mB,EAAAK,MAAAN,EAAAC,EAAAM,KAAAC,MAAyB,CACvBi4B,GADuBz4B,EAAAd,MACb0B,KAAO,KAHM,MAAAC,GAAAZ,EAAAa,EAAAD,GAAA,QAAAZ,EAAAc,IAMzB,OAAO03B,EAAIr3B,MAAM,GAAG,oCAIpB,OAAO,IAAIu3B,KAAQ,SAACvF,EAAQwF,GAC1BC,MAAM,mBAAmBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAAQF,KAAK,SAACG,GACrD7F,EAAO6F,EAAIf,UAEVgB,MAAM,SAAAr4B,GACP+3B,EAAO/3B,mDAMO,IAAAgC,EAAA1G,KACd6qB,EAAa7qB,KAAK27B,qBAAqB37B,KAAKI,MAAM2E,WACnD8lB,EAAWtgB,OAAS,GACrBmyB,MAAM5B,GAAiB,iBAAmB96B,KAAKg9B,eAAenS,IAAa8R,KAAK,SAACM,GAC/E,OAAOA,EAAShrB,SACf0qB,KAAK,SAAC3C,GAGP,IAFA,IAAIkD,EAAUC,KAAKC,MAAMpD,GACrB9N,EAAQ,EACHnX,EAAI,EAAGA,EAAImoB,EAAQ3yB,OAAQwK,IAAK,CACvC,IAAIkK,EAAWjc,WAAWk6B,EAAQnoB,GAAGsoB,GAOrC,GAAGpe,EAAW,OAEmC,MAA5Cjb,GAASmqB,cAAc/B,IAAI8Q,EAAQnoB,GAAGzQ,IACvC2a,IAAajb,GAASmqB,cAAc/B,IAAI8Q,EAAQnoB,GAAGzQ,GAAGqV,OAAO,CAC7D,IAAItX,EAAO,IAAIC,IAAa46B,EAAQnoB,GAAGzQ,EAAGN,GAASukB,KACnDvkB,GAASmqB,cAAc9B,IAAI6Q,EAAQnoB,GAAGzQ,EAAG,IAAIs2B,GAAOv4B,EAAM4c,EAAU,IAAIvd,KAAkC,IAA7B47B,SAASJ,EAAQnoB,GAAG2Z,EAAG,KAAawO,EAAQnoB,GAAGrD,IAC5Hwa,KAKN,GAAGA,EAAQ,EAAG,CACZ5rB,QAAQC,IAAI,0BAA4B2rB,EAAQ,cAChD,IAAIkC,EAAW,IAAIZ,EAAU9mB,EAAKtG,MAAM2E,UAAU8F,aAAcnE,EAAKtG,MAAM2E,UAAUuP,UAAW5N,EAAKtG,MAAM4D,UAC3G0C,EAAKtD,SAAS,CACZ2B,UAAWqpB,EACXpqB,SAAU0C,EAAKtG,MAAM4D,SAASiL,uDAStC,OAAO,IAAIutB,KAAQ,SAACvF,EAAQwF,GAE1BC,MADU5B,IAAkBA,GAAqB,kBAAoB,eAC1D6B,KAAK,SAACM,GACf,OAAOA,EAAShrB,SACf0qB,KAAK,SAAC3C,GAAS,IAAAn1B,EAAAC,EAAAy3B,GACFY,KAAKC,MAAMpD,IADT,IAChB,IAAAl1B,EAAAX,MAAAU,EAAAC,EAAAV,KAAAC,MAAgC,KAAvBC,EAAuBO,EAAA9B,MAC1B6G,EAAW,IAAIixB,GAASv2B,EAAEA,EAAGA,EAAEF,EAAGE,EAAEsL,EAAGtL,EAAEM,GAC7CZ,GAASC,aAAaooB,IAAIziB,EAAU,IACf,QAAlBA,EAASnF,OACVT,GAASukB,IAAM3e,IALH,MAAAlF,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,IAQhBqyB,qDAMelyB,GACnB,IAD8BioB,EAE1BnC,EAAa,GAFaqC,EAAAqP,GACPx3B,EAAUC,WAAWC,OAAO,GAAG,GAErBC,SAAShB,QAHZ,IAG9B,IAAAgpB,EAAA/oB,MAAA6oB,EAAAE,EAAA9oB,KAAAC,MAAkD,KAAvC+L,EAAuC4c,EAAAjqB,MAChD8nB,EAAWtmB,KAAK6L,IAJY,MAAA1L,GAAAwoB,EAAAvoB,EAAAD,GAAA,QAAAwoB,EAAAtoB,IAO9B,OAAOimB,4CAGSA,EAAYiK,GAAW,IAAAnuB,EAAA3G,KAGvCA,KAAK87B,YAAYa,KAAK,WAEpB,IAF0BnM,EAEpB+M,EAAW,GAFS7M,EAAA6L,GAGN1R,GAHM,IAG1B,IAAA6F,EAAAvsB,MAAAqsB,EAAAE,EAAAtsB,KAAAC,MAAgC,KAAxBuF,EAAwB4mB,EAAAztB,MAC9Bw6B,EAASh5B,KAAKoC,EAAKk1B,cAAcjyB,EAAUkrB,KAJnB,MAAApwB,GAAAgsB,EAAA/rB,EAAAD,GAAA,QAAAgsB,EAAA9rB,IAQ1B43B,KAAQgB,IAAID,GAAUZ,KAAK,WACzBr8B,QAAQC,IAAI,2BAA6Bg9B,EAAShzB,OAAS,aAG3D,IAAIkzB,EAAc92B,EAAKvG,MAAM4D,SAASiL,QAClCyuB,EAAe,IAAIlQ,EAAU7mB,EAAKvG,MAAM2E,UAAU8F,aAAclE,EAAKvG,MAAM2E,UAAUuP,UAAWmpB,GACpG92B,EAAKvD,SAAS,CACZ2B,UAAW24B,EACX15B,SAAUy5B,8CAMJ7zB,EAAU6P,GACtB,OAAO,IAAI+iB,KAAQ,SAACvF,EAAQwF,GAC1BC,MAAM5B,GAAiB,kBAAoBrhB,EAAO,WAAa7P,EAASnF,MACvEk4B,KAAK,SAACM,GACL,OAAOA,EAAShrB,SACf0qB,KAAK,SAAC3C,GACP,IADgB5G,EACZuK,EAAW,GADCtK,EAAAkJ,GAEFY,KAAKC,MAAMpD,IAFT,IAEhB,IAAA3G,EAAAlvB,MAAAivB,EAAAC,EAAAjvB,KAAAC,MAAgC,KAAvBqqB,EAAuB0E,EAAArwB,MAC1BV,EAAO,IAAIC,IAAasH,EAAU5F,GAASukB,KAC/CoV,EAASp5B,KAAK,IAAIq2B,GAAOv4B,EAAMqsB,EAAE2O,EAAG,IAAI37B,KAAyB,IAApB47B,SAAS5O,EAAEA,EAAG,QAJ7C,MAAAhqB,GAAA2uB,EAAA1uB,EAAAD,GAAA,QAAA2uB,EAAAzuB,IAMhBZ,GAASC,aAAaooB,IAAIziB,EAAU+zB,GACpC1G,4CAMM,IAAA9vB,EAAAnH,KACV,OAAO,IAAIw8B,KAAQ,SAACvF,EAAQwF,GAC1B,IAAI5R,EAAa1jB,EAAKw0B,qBAAqBx0B,EAAK/G,MAAM2E,WACnD8lB,EAAWtgB,OAAS,GACrBmyB,MAAM5B,GAAiB,eAAiB3zB,EAAK61B,eAAenS,IAAa8R,KAAK,SAACM,GAC7E,OAAOA,EAAShrB,SACf0qB,KAAK,SAAC3C,GAEP,IADA,IAAIkD,EAAUC,KAAKC,MAAMpD,GAChBjlB,EAAI,EAAGA,EAAImoB,EAAQ3yB,OAAQwK,IAAK,CACxB/Q,GAASgvB,mBAAmBkK,EAAQnoB,GAAGzQ,GAC7C2rB,KAAOkN,KAAKC,MAAMF,EAAQnoB,GAAG6oB,GAExC3G,oDAQNj3B,KAAKoD,SAAS,CACZg5B,oBAAqBp8B,KAAKq4B,KAAKwF,gEAIhBl5B,GACQ,SAArBA,EAAEm5B,QAAQC,SACZnF,SAASuB,gBAAgB6D,UAAY,EACrCpF,SAASqF,iBAAiBD,UAAY,EACtCh+B,KAAKq4B,KAAK6F,UAAUF,UAAY,GAGhCx9B,OAAO+uB,WAAa,KACC,SAArB5qB,EAAEm5B,QAAQC,SACkD,IAA5DnF,SAASuB,gBAAgBx2B,UAAU+X,QAAQ,aAE3Ckd,SAASuB,gBAAgBF,UAAUC,OAAO,yDAIzB,IAAA9yB,EAAApH,KAGnBA,KAAK07B,kBAAkBiB,KAAK,WAC1Bv1B,EAAK20B,SAASY,KAAK,SAACZ,GAClB,IACI3N,EADAwL,GAAgB,EAEpB,GAAImC,EAgBFz7B,QAAQC,IAAI,6BACZ6tB,EAAWhnB,EAAK40B,gBAAgBmC,GAAW,OAjBjC,CAEVvE,OAAsDjpB,IAAtCytB,KAAOC,KAAK,sBAC5BD,KAAOE,KAAK,qBAAsB,IAAK,CAAEnI,KAAM,IAAKoI,OAAQ,UAG5D,IAAIC,EAAgBC,aAAaC,QAAQ,eACzC,GAAoB,MAAjBF,GAA2C,KAAlBA,EAAsB,CAChD,IAAIG,EAAkBxB,KAAKC,MAAMoB,GACjCl+B,QAAQC,IAAI,wCACZ6tB,EAAWhnB,EAAK40B,gBAAgB2C,EAAiBA,EAAgB7F,kBAEjE1K,EAAWhnB,EAAK40B,gBAAgB,GAAI,GAaxC,GALA50B,EAAKhE,SAAS,CACZwmB,iBAAkBgQ,EAClBmC,OAAQA,IAGqB,MAA5B3N,EAASvjB,aAAa,GAAY,CACnC,IAAIiqB,EAAY1G,EAAS2G,sBACzB3tB,EAAKw0B,kBAAkBx0B,EAAKu0B,qBAAqBvN,GAAW0G,EAAY,GAI1E1tB,EAAKq0B,oBACLmD,YAAYx3B,EAAKq0B,kBAAmB,UAKwB,IAA5D7C,SAASuB,gBAAgBx2B,UAAU+X,QAAQ,aAC7Ckd,SAASuB,gBAAgBF,UAAUC,OAAO,4DAItB5gB,GACtB,IACIulB,EACJ,OAFYp0B,KAAKq0B,MAAsB,EAAhBr0B,KAAKgZ,SAAe,IAGzC,KAAK,EACHob,EAAQ,UACR,MACF,KAAK,EACHA,EAAQ,UACR,MACF,KAAK,EACHA,EAAQ,QACR,MACF,KAAK,EACHA,EAAQ,OAKZ7+B,KAAKI,MAAMg8B,oBAAoB2C,gBAAgB,CAC7Ch+B,MAAOwgB,EAAA9d,EAAAC,cAAA,QAAMs7B,cAAY,OAAOr7B,UAAU,eAC1Cs7B,QACE1d,EAAA9d,EAAAC,cAAA,gCAIFm7B,MAAOA,EACPvlB,SAAUA,EACV4lB,YAAa,6CAOfl/B,KAAKoD,SAAS,CAAEwmB,kBAAkB,4CAIlC5pB,KAAKoD,SAAS,CAAEwmB,kBAAkB,iDAIlC5pB,KAAKoD,SAAS,CAAEmZ,uBAAuB,iDAIvCvc,KAAKoD,SAAS,CAAEmZ,uBAAuB,mDAIvCvc,KAAKoD,SAAS,CAAEmuB,yBAAyB,mDAIzCvxB,KAAKoD,SAAS,CAAEmuB,yBAAyB,kDAIzCvxB,KAAKoD,SAAS,CAAEuZ,wBAAwB,kDAIxC3c,KAAKoD,SAAS,CAAEuZ,wBAAwB,oDAIxC3c,KAAKoD,SAAS,CAAEkxB,0BAA0B,oDAI1Ct0B,KAAKoD,SAAS,CAAEkxB,0BAA0B,4DAK1Ct0B,KAAKoD,SAAS,CAAEi5B,kCAAkC,2CAGrCp5B,GACb,IAAIk8B,GAAW,EAAMC,GAAgB,EAErC,GAAyC,MAAtCp/B,KAAKI,MAAM2E,UAAUC,WAAW,GAAY,CAC7C,IAAIgpB,EAAY,IAAItsB,KAAK1B,KAAKI,MAAM2E,UAAUC,WAAW,GAAG8mB,UAAUniB,MACtEw1B,EAAW9R,EAAUY,aAAa,IAAIvsB,KAAKuB,EAAG0G,OAAS0jB,EAAUY,aAAaD,GAC9EoR,GAAiBp/B,KAAKI,MAAM2E,UAAUC,WAAWC,OAAO,GAAG,GAAGC,SAASm6B,IAAIp8B,EAAGZ,KAAKmH,MAIrFxJ,KAAKI,MAAM2E,UAAU8F,aAAatG,KAAKtB,GACvCjD,KAAKI,MAAM2E,UAAU8F,aAAa2hB,KAAK,SAAC/oB,EAAGuY,GACzC,OAAOvY,EAAEkG,KAAOqS,EAAErS,OAIpB,IAAIykB,EAAW,IAAIZ,EAAUxtB,KAAKI,MAAM2E,UAAU8F,aAAc7K,KAAKI,MAAM2E,UAAUuP,UAAWtU,KAAKI,MAAM4D,UACvGs7B,EAAiBt/B,KAAKI,MAAM04B,YAAc,EAY9C,GAXA94B,KAAKoD,SAAS,CACZ2B,UAAWqpB,EACX0K,YAAawG,IAIXt/B,KAAKI,MAAM27B,QACb0C,aAAac,QAAQ,cAAev/B,KAAKw/B,iBAAiBpR,EAAUkR,IAInEF,GAAiBD,EAAU,CAC5B,IAAInR,EAAYI,EAASppB,WAAW,GAAG8mB,UAAUniB,KACjD3J,KAAK47B,kBAAkB57B,KAAK27B,qBAAqBvN,GAAWf,EAAUY,aAAaD,GAAa,GAGlG1tB,QAAQC,IAAI,sBAAwB6tB,EAASvjB,aAAaN,OAAS,0EAGnDtH,GAAI,IAAAw8B,EAAAz/B,KAEhBguB,EAAY,IAAItsB,KAAK1B,KAAKI,MAAM2E,UAAUC,WAAW,GAAG8mB,UAAUniB,MAClEw1B,EAAW9R,EAAUY,aAAa,IAAIvsB,KAAKuB,EAAG0G,OAAS0jB,EAAUY,aAAaD,GAC9EoR,GAAiBp/B,KAAKI,MAAM2E,UAAUC,WAAWC,OAAO,GAAG,GAAGC,SAASm6B,IAAIp8B,EAAGZ,KAAKmH,MAGnFk2B,EAAkB1/B,KAAKI,MAAM2E,UAAU8F,aAAa0Q,OAAO,SAACokB,GAC9D,OAAOA,IAASF,EAAKr/B,MAAMkH,oBAE7Bo4B,EAAgBn7B,KAAKtB,GACrBy8B,EAAgBlT,KAAK,SAAC/oB,EAAGuY,GACvB,OAAOvY,EAAEkG,KAAOqS,EAAErS,OAIpB,IAAIykB,EAAW,IAAIZ,EAAUkS,EAAiB1/B,KAAKI,MAAM2E,UAAUuP,UAAWtU,KAAKI,MAAM4D,UACrFs7B,EAAiBt/B,KAAKI,MAAM04B,YAAc,EAY9C,GAXA94B,KAAKoD,SAAS,CACZ2B,UAAWqpB,EACX0K,YAAawG,IAIXt/B,KAAKI,MAAM27B,QACb0C,aAAac,QAAQ,cAAev/B,KAAKw/B,iBAAiBpR,EAAUkR,IAInEF,GAAiBD,EAAU,CAC5B,IAAInR,EAAYI,EAASppB,WAAW,GAAG8mB,UAAUniB,KACjD3J,KAAK47B,kBAAkB57B,KAAK27B,qBAAqBvN,GAAWf,EAAUY,aAAaD,GAAa,GAGlG1tB,QAAQC,IAAI,sBAAwB6tB,EAASvjB,aAAaN,OAAS,0EAGnDtH,GAEhB,IAAI+qB,EAAY,IAAItsB,KAAK1B,KAAKI,MAAM2E,UAAUC,WAAW,GAAG8mB,UAAUniB,MAClEw1B,EAAW9R,EAAUY,aAAa,IAAIvsB,KAAKuB,EAAG0G,QAAU0jB,EAAUY,aAAaD,GAC/EoR,GAAiBp/B,KAAKI,MAAM2E,UAAUC,WAAWC,OAAO,GAAG,GAAGC,SAASm6B,IAAIp8B,EAAGZ,KAAKmH,MAGnFk2B,EAAkB1/B,KAAKI,MAAM2E,UAAU8F,aAAa0Q,OAAO,SAACokB,GAC9D,OAAOA,IAAS18B,IAElBy8B,EAAgBlT,KAAK,SAAC/oB,EAAGuY,GACvB,OAAOvY,EAAEkG,KAAOqS,EAAErS,OAIpB,IAAIykB,EAAW,IAAIZ,EAAUkS,EAAiB1/B,KAAKI,MAAM2E,UAAUuP,UAAWtU,KAAKI,MAAM4D,UACrFs7B,EAAiBt/B,KAAKI,MAAM04B,YAAc,EAY9C,GAXA94B,KAAKoD,SAAS,CACZ2B,UAAWqpB,EACX0K,YAAawG,IAIXt/B,KAAKI,MAAM27B,QACb0C,aAAac,QAAQ,cAAev/B,KAAKw/B,iBAAiBpR,EAAUkR,IAInEF,GAAiBD,EAAU,CAC5B,IAAInR,EAAYI,EAASppB,WAAW,GAAG8mB,UAAUniB,KACjD3J,KAAK47B,kBAAkB57B,KAAK27B,qBAAqBvN,GAAWf,EAAUY,aAAaD,GAAa,GAGlG1tB,QAAQC,IAAI,wBAA0B6tB,EAASvjB,aAAaN,OAAS,6EAGlDtH,GACnBjD,KAAKoD,SAAS,CAAEkE,kBAAmBrE,2CAKhCjD,KAAKI,MAAM04B,YAAc,IAAM94B,KAAKI,MAAMi8B,iCAC3Cr8B,KAAKoD,SAAS,CACZi5B,kCAAkC,KAGpC/7B,QAAQC,IAAI,yBAEZP,KAAKg8B,gBAAgB,GAAI,GAGrBh8B,KAAKI,MAAM27B,QACb0C,aAAac,QAAQ,cAAe,IAGtCv/B,KAAKoD,SAAS,CAAEi5B,kCAAkC,IAElD17B,IAAQ2F,MAAM,CAACsK,SAAU,OAAQmtB,OAAQ,oEAK3C/9B,KAAKk8B,gBACLl8B,KAAKs5B,uDAISsG,EAAqB9G,GACnC,IAAIjuB,EAAe,GAAIyJ,EAAY,GAEhCsrB,EAAoB/0B,eACrBA,EAAe7K,KAAK6/B,iCAAiCD,EAAoB/0B,eAGxE+0B,EAAoBtrB,YACrBA,EAAYsrB,EAAoBtrB,WAIlC,IAAI8Z,EAAW,IAAIZ,EAAU3iB,EAAcyJ,EAAWtU,KAAKI,MAAM4D,UAMjE,OALAhE,KAAKoD,SAAS,CACZ2B,UAAWqpB,EACX0K,YAAaA,IAGR1K,wCAGK2I,GAAO,IAAA+I,EAAA9/B,KACb+/B,EAAS,IAAIC,WACnBD,EAAOvQ,iBAAiB,OAAQ,WAI1BsQ,EAAK1/B,MAAM27B,QACb0C,aAAac,QAAQ,cAAeQ,EAAOE,QAI7C,IAAIC,EAAe/C,KAAKC,MAAM2C,EAAOE,QAGjC7R,EAAW0R,EAAK9D,gBAAgBkE,EAAc,GAC9ClS,EAAYI,EAASppB,WAAW,GAAG8mB,UAAUniB,KACjDm2B,EAAKlE,kBAAkBkE,EAAKnE,qBAAqBvN,GAAWf,EAAUY,aAAaD,GAAa,GAEhGrtB,IAAQ2F,MAAM,CAACsK,SAAU,OAAQmtB,OAAQ,WACxC,GACChH,EAAMxsB,OAAS,GACjBw1B,EAAOI,WAAWpJ,EAAM,4CAQ1B,IAAIyH,EAAgBx+B,KAAKw/B,iBAAiBx/B,KAAKI,MAAM2E,UAAW,GAG5D/E,KAAKI,MAAM27B,QACb0C,aAAac,QAAQ,cAAef,GAItC,IAAI4B,EAAO,IAAIC,KAAK,CAAC7B,GAAgB,gBAAkBx+B,KAAKI,MAAM2E,UAAU8F,aAAaN,OAAS,QAAS,CAACpE,KAAM,6BAClHm6B,KAAUC,OAAOH,GAEjBpgC,KAAKoD,SAAS,CACZ01B,YAAa,IAGfn4B,IAAQ2F,MAAM,CAACsK,SAAU,OAAQmtB,OAAQ,kDAG1Bh5B,EAAW+zB,GAC1B,IADuC0H,EACnCC,EAAmB,GADgBC,EAAAnE,GAEzBx3B,EAAU8F,cAFe,IAEvC,IAAA61B,EAAAv8B,MAAAq8B,EAAAE,EAAAt8B,KAAAC,MAAsC,KAA9BpB,EAA8Bu9B,EAAAz9B,MAChC49B,EAAQ,CACV9Y,QAAS5kB,EAAG4kB,QACZtlB,MAAOU,EAAGV,MACVF,KAAMY,EAAGZ,KAAKmH,KAAK/E,KAAO,IAAMxB,EAAGZ,KAAKqH,QAAQjF,KAChD4E,WAAYpG,EAAGoG,WACfI,cAAexG,EAAGwG,cAClBE,KAAM1G,EAAG0G,KAAKkjB,UACdjrB,QAASqB,EAAGrB,SAEd6+B,EAAiBl8B,KAAKo8B,IAZe,MAAAj8B,GAAAg8B,EAAA/7B,EAAAD,GAAA,QAAAg8B,EAAA97B,IAcvC,IAAIg8B,EAAgB,CAClBjG,QAAS,EACTkG,OAAQ,mEACRh2B,aAAc41B,EACd3H,YAAaA,GAGf,OAAOqE,KAAK2D,UAAUF,EAAe,KAAM,+DAGZG,GAE/B,IAFuDC,EAEnDn2B,EAAe,GAFoCo2B,EAAA1E,GAG1CwE,GAH0C,IAGvD,IAAAE,EAAA98B,MAAA68B,EAAAC,EAAA78B,KAAAC,MAAqC,KAA7BqqB,EAA6BsS,EAAAj+B,MAC/BgwB,EAAUrE,EAAErsB,KAAK+vB,MAAM,KACvB5oB,EAAOxF,GAASgvB,mBAAmBD,EAAQ,IAC3CrpB,EAAU1F,GAASgvB,mBAAmBD,EAAQ,IAClD,GAAY,OAATvpB,GAA6B,OAAZE,EAAkB,CACpC,IAAIrH,EAAO,IAAIC,IAAakH,EAAME,GAC9BzG,EAAK,IAAIC,IAAYwrB,EAAE7G,QAAS6G,EAAEnsB,MAAOF,EAAMqsB,EAAErlB,WAAYqlB,EAAEjlB,cAAe,IAAI/H,KAAKgtB,EAAE/kB,MAAO+kB,EAAE9sB,SACtGiJ,EAAatG,KAAKtB,KAViC,MAAAyB,GAAAu8B,EAAAt8B,EAAAD,GAAA,QAAAu8B,EAAAr8B,IAcvD,OAAOiG,mCAGA,IAAAq2B,EAAAlhC,KACHmhC,EACF5f,EAAA9d,EAAAC,cAAC09B,GAAD,CACEtgC,cAAed,KAAKI,MAAMi8B,iCAC1Bh5B,WAAYrD,KAAKw7B,8BACjBP,UAAWj7B,KAAKs5B,aAChB4B,wBAAyBl7B,KAAKm8B,iCAC9BrD,YAAa94B,KAAKI,MAAM04B,cAI5B,OACEvX,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,WACb4d,EAAA9d,EAAAC,cAAC29B,EAAA59B,EAAD,CAAoBg0B,IAAI,qBAAqBrc,MAAOA,WACpDmG,EAAA9d,EAAAC,cAAC49B,GAADxhC,OAAAmO,OAAA,GAAajO,KAAKJ,MAAlB,CACE05B,aAAct5B,KAAKs5B,aACnBG,wBAAyBz5B,KAAKi8B,cAC9B1C,kBAAmBv5B,KAAKk8B,cACxBtC,cAAe55B,KAAK45B,cACpB70B,UAAW/E,KAAKI,MAAM2E,UACtBf,SAAUhE,KAAKI,MAAM4D,SACrB80B,YAAa94B,KAAKI,MAAM04B,eAE1BvX,EAAA9d,EAAAC,cAAA,OACEC,UACE,cACkC,2BAAjC3D,KAAKJ,MAAMa,SAASC,SACjB,mBACA,IAEN+2B,IAAI,aAEJlW,EAAA9d,EAAAC,cAAC69B,GAAD,CACE9gC,SAAUT,KAAKJ,MAAMa,SACrBsE,UAAW/E,KAAKI,MAAM2E,UACtBf,SAAUhE,KAAKI,MAAM4D,WAEtBhE,KAAKI,MAAM27B,OACVxa,EAAA9d,EAAAC,cAAA,OAAKC,UAAU,gBACb4d,EAAA9d,EAAAC,cAAC89B,GAAD,OAEA,GAGJjgB,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACG0U,GAAgB9jB,IAAI,SAACqgB,EAAMljB,GAC1B,OAAIkjB,EAAK4D,SACA5D,EAAK6D,MAAMlkB,IAAI,SAACqgB,EAAMljB,GAC3B,MAAkB,kBAAdkjB,EAAK9sB,KAEL4b,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE2U,KAAM1D,EAAK0D,KACX5mB,IAAKA,EACLkyB,OAAQ,SAAAC,GAAU,OAChBngB,EAAA9d,EAAAC,cAAC+uB,EAAK2D,UAANt2B,OAAAmO,OAAA,GACMyzB,EADN,CAEEC,YAAaT,EAAK3F,8BAOxBha,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE2U,KAAM1D,EAAK0D,KACXC,UAAW3D,EAAK2D,UAChB7mB,IAAKA,MAMTkjB,EAAK+D,SAELjV,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CAAU0E,KAAMuM,EAAK0D,KAAMhQ,GAAIsM,EAAKgE,OAAQlnB,IAAKA,IAIjDgS,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACE2U,KAAM1D,EAAK0D,KAEX5mB,IAAKA,EACLkyB,OAAQ,SAAAC,GAAU,OAChBngB,EAAA9d,EAAAC,cAAC+uB,EAAK2D,UAANt2B,OAAAmO,OAAA,GACMyzB,EADN,CAEEC,YAAaT,EAAK3F,wBAClBx2B,UAAWm8B,EAAK9gC,MAAM2E,UACtBf,SAAUk9B,EAAK9gC,MAAM4D,SAErB4lB,iBAAkBsX,EAAK9gC,MAAMwpB,iBAC7BY,cAAe0W,EAAK1W,cAEpBjO,sBAAuB2kB,EAAK9gC,MAAMmc,sBAClCW,mBAAoBgkB,EAAKhkB,mBACzBV,mBAAoB0kB,EAAK1kB,mBAEzB+U,wBAAyB2P,EAAK9gC,MAAMmxB,wBACpCtH,qBAAsBiX,EAAKjX,qBAC3BuH,qBAAsB0P,EAAK1P,qBAE3B7U,uBAAwBukB,EAAK9gC,MAAMuc,uBACnCiW,oBAAqBsO,EAAKtO,oBAC1BhW,oBAAqBskB,EAAKtkB,oBAE1B0X,yBAA0B4M,EAAK9gC,MAAMk0B,yBACrCJ,sBAAuBgN,EAAKhN,sBAC5BK,sBAAuB2M,EAAK3M,sBAE5BpxB,eAAgB+9B,EAAK/9B,eACrBwP,kBAAmBuuB,EAAKvuB,kBAExB9I,kBAAmBq3B,EAAKr3B,kBACxB8oB,qBAAsBuO,EAAKvO,qBAC3BrrB,kBAAmB45B,EAAK9gC,MAAMkH,2BAQ9Cia,EAAA9d,EAAAC,cAACk+B,GAAD,CAAQr6B,OAAK,IACZvH,KAAKI,MAAMi8B,iCAAmC8E,EAA4B,YA1tB7Dh4B,2CCrBxB7I,QAAQC,IAAIC,OAAOC,SAASC,SAAWF,OAAOC,SAAS6S,MAGrD3S,IAAQkhC,WAAW,kBAInBvhC,QAAQC,IAAI,eACZuhC,IAASL,OACPlgB,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACED,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,KACG6Z,GAAYjpB,IAAI,SAACqgB,EAAMljB,GACtB,OAAOgS,EAAA9d,EAAAC,cAAC8d,EAAA,EAAD,CACC2U,KAAM1D,EAAK0D,KACX5mB,IAAKA,EACLkyB,OAAQ,SAAAC,GAAU,OAChBngB,EAAA9d,EAAAC,cAAC+uB,EAAK2D,UACAsL,UAOtB9I,SAASC,eAAe,oHCvBtB/E,oLAGF,GAAqC,MAAjC9zB,KAAKJ,MAAMqT,mBACb,OAAOjT,KAAKJ,MAAMqT,mBAAmB4U,QAAU,QAAU,mDAK3D,GAAqC,MAAjC7nB,KAAKJ,MAAMqT,mBACb,OAAQjT,KAAKJ,MAAMqT,mBAAmB4U,QAAU,QAAU,WAAa,KAAO7nB,KAAKJ,MAAMqT,mBAAmB8uB,kDAK9G,GAAqC,MAAjC/hC,KAAKJ,MAAMqT,mBACb,MAAO,SAAWjT,KAAKJ,MAAMqT,mBAAmBtJ,KAAKwoB,cAAcC,MAAM,KAAK,wCAKhF,GAAqC,MAAjCpyB,KAAKJ,MAAMqT,mBACb,MAAO,YAAcjT,KAAKJ,MAAMqT,mBAAmBrR,yCAI9C,IAAA/B,EAAAG,KACP,OACEwD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACs+B,EAAA,EAAD,CAAMz6B,OAAK,GACT/D,EAAAC,EAAAC,cAACs+B,EAAA,EAAD,KACEx+B,EAAAC,EAAAC,cAACs+B,EAAA,EAAD,CAAKx6B,GAAI,GACPhE,EAAAC,EAAAC,cAACs+B,EAAA,EAAD,CACEv6B,KAAMzH,KAAKJ,MAAMkB,cACjB4G,OAAQ,kBAAM7H,EAAKD,MAAMyD,eAEzBG,EAAAC,EAAAC,cAACs+B,EAAA,EAAMr6B,OAAP,CAAcC,aAAW,GACvBpE,EAAAC,EAAAC,cAACs+B,EAAA,EAAMn6B,MAAP,wBAEFrE,EAAAC,EAAAC,cAACs+B,EAAA,EAAMl6B,KAAP,KACEtE,EAAAC,EAAAC,cAAA,iDACwC1D,KAAKiiC,UAD7C,KAGAz+B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACG1D,KAAKkiC,kBAER1+B,EAAAC,EAAAC,cAAA,SACG1D,KAAKwuB,WAERhrB,EAAAC,EAAAC,cAAA,SACG1D,KAAKmiC,eAGV3+B,EAAAC,EAAAC,cAACs+B,EAAA,EAAMr5B,OAAP,KACEnF,EAAAC,EAAAC,cAAC0+B,EAAA,EAAD,CACEv5B,QAAM,EACNC,QAAS,kBAAMjJ,EAAKD,MAAMyD,eAF5B,UAMAG,EAAAC,EAAAC,cAAC0+B,EAAA,EAAD,CACEn6B,QAAQ,UACRc,MAAI,EACJC,IAAE,EACF7C,KAAK,SACL2C,QAAS,kBAAMjJ,EAAKD,MAAM+S,sBAL5B,uBA7D2BxJ,aAgF9B2qB,mHCzFTzc,0JAE2B9I,oFAC3B8zB,EAAM,mFAAqF9zB,EAAQkN,cAAgB,8BAChGihB,MAAM2F,iBAAvBpF,kBACeA,EAASJ,mBAAxByF,UACI/zB,EAAQkN,wDACVsG,OAAOugB,EAAO/zB,EAAQkN,eAAe8M,sCAGtC","file":"static/js/main.c447bbb4.chunk.js","sourcesContent":["import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/addTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // track ga\r\n    /*if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addTrade');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(nextProps) {\r\n    return {\r\n      isDialogShown: nextProps.isDialogShown,\r\n      title: \"Add trade\",\r\n      buttonText: \"Add\",\r\n      buyAmount: \"\",\r\n      buyAmountError: null,\r\n      buyCurrency: null,\r\n      buyCurrencyError: null,\r\n      sellAmount: \"\",\r\n      sellAmountError: null,\r\n      sellCurrency: null,\r\n      sellCurrencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: \"\",\r\n      buyCurrencies: this.getBuyCurrencies(nextProps),\r\n      sellCurrencies: this.getSellCurrencies(nextProps),\r\n    }\r\n  }\r\n\r\n  getPair(buyCurrency, sellCurrency, buyAmount, sellAmount) {\r\n    let buyRank = buyCurrency.rank + (buyCurrency.isFiat ? -1000000 : 0);\r\n    let sellRank = sellCurrency.rank + (sellCurrency.isFiat ? -1000000 : 0);\r\n    // reverse if needed for ranks, or in special case where ETH/ETH and 0\r\n    if(buyRank < sellRank || (buyRank === sellRank && buyAmount === 0)) {\r\n      return {\r\n        pair: new CurrencyPair(sellCurrency, buyCurrency),\r\n        isBuy: false,\r\n        buyAmount: sellAmount,\r\n        sellAmount: buyAmount\r\n      }\r\n    }\r\n\r\n    return {\r\n      pair: new CurrencyPair(buyCurrency, sellCurrency),\r\n      isBuy: true,\r\n      buyAmount: buyAmount,\r\n      sellAmount: sellAmount\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n      \r\n\r\n      let pairBuy = this.getPair(this.state.buyCurrency.value, this.state.sellCurrency.value, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount));\r\n      let pair = pairBuy.pair;\r\n      let isBuy = pairBuy.isBuy;\r\n      let buyAmount = pairBuy.buyAmount;\r\n      let sellAmount = pairBuy.sellAmount;\r\n\r\n      let tx = new Transaction(true, isBuy, pair, buyAmount, sellAmount, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.setState(this.getInitialState(this.props));\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddTradeDialog;","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Nav,\r\n  NavItem,\r\n  Tab\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonTradeDialog extends Component {\r\n\r\n  isValidBuyAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ buyAmountError: null }) : this.setState({\r\n      buyAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidBuyCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      buyCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ buyCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidSellAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ sellAmountError: null }) : this.setState({\r\n      sellAmountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidSellCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      sellCurrencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select a currency.\r\n        </small>)\r\n      })\r\n    : this.setState({ sellCurrencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n      })\r\n    : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getBuyCurrencies(nextProps) {\r\n    let buyCurrencies = [];\r\n    for(let c of nextProps.resModel.dailyTickers.keys()) {\r\n      buyCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return buyCurrencies;\r\n  }\r\n\r\n  getSellCurrencies(nextProps) {\r\n    let currentPortfolio = nextProps.userModel.portfolios.slice(-1)[0];\r\n    let sellCurrencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      sellCurrencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return sellCurrencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  /*isAllowedAmount(strValue, sellCurrency) {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let numValue = parseFloat(strValue);\r\n    //console.log(sellCurrency.value)\r\n    if(sellCurrency != null) {\r\n      console.log(sellCurrency.value)\r\n      console.log(currentPortfolio.balances.get(sellCurrency.value));\r\n    }\r\n    let isAllowed = sellCurrency != null ? numValue <= currentPortfolio.balances.get(sellCurrency.value) : true;\r\n    return isAllowed;\r\n  }\r\n\r\n  getMaxSellValueAndCurrency(sellCurrency) {\r\n    if(sellCurrency != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.balances.get(sellCurrency.value) + \" \" + sellCurrency.value.code;\r\n    }\r\n\r\n    return \"\";\r\n  }*/\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuyFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          min={0}\r\n          name=\"buyAmount\"\r\n          value={this.state.buyAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              buyAmount: event.target.value\r\n            });\r\n            this.isValidBuyAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.buyAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"buyCurrency\"\r\n          value={this.state.buyCurrency}\r\n          options={this.state.buyCurrencies}\r\n          onChange={value => {\r\n            this.setState({ buyCurrency: value });\r\n            this.isValidBuyCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.buyCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getSellFormGroup(name, placeholder) {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"sellAmount\"\r\n          min={0}\r\n          value={this.state.sellAmount}\r\n          onChange={event => {\r\n            this.setState({\r\n              sellAmount: event.target.value\r\n            });\r\n            this.isValidSellAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.sellAmountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"sellCurrency\"\r\n          value={this.state.sellCurrency}\r\n          options={this.state.sellCurrencies}\r\n          onChange={value => {\r\n            this.setState({ sellCurrency: value });\r\n            this.isValidSellCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.sellCurrencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate()});\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let defaultActiveKey = \"buy\";\r\n    if(this.props.editedTransaction != null && !this.props.editedTransaction.isBuy) {\r\n      defaultActiveKey = \"sell\";\r\n    }\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tab.Container id=\"tabs-with-dropdown\" defaultActiveKey={defaultActiveKey}>\r\n                    <Row className=\"clearfix\">\r\n                      <Col sm={12}>\r\n                        <Nav bsStyle=\"tabs\">\r\n                          <NavItem eventKey=\"buy\">Buy</NavItem>\r\n                          <NavItem eventKey=\"sell\">Sell</NavItem>\r\n                        </Nav>\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <Tab.Content animation>\r\n                          <Tab.Pane eventKey=\"buy\">\r\n                            <Form horizontal>  \r\n                              {this.getBuyFormGroup(\"Buy amount\", \"How much to buy?\")}\r\n                              {this.getSellFormGroup(\"Cost\", \"How much is cost?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                          <Tab.Pane eventKey=\"sell\">\r\n                            <Form horizontal>  \r\n                              {this.getSellFormGroup(\"Sell amount\", \"How much to sell?\")}\r\n                              {this.getBuyFormGroup(\"Proceeds\", \"How much to receive?\")}\r\n                              {this.getDateFormGroup()}\r\n                              {this.getCommentFormGroup()}\r\n                            </Form>\r\n                          </Tab.Pane>\r\n                        </Tab.Content>\r\n                      </Col>\r\n                    </Row>\r\n                  </Tab.Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonTradeDialog;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonTradeDialog from \"./CommonTradeDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditTradeDialog extends CommonTradeDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update trade\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      buyAmount: props.editedTransaction.baseAmount.toString(),\r\n      buyAmountError: null,\r\n      buyCurrency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      buyCurrencyError: null,\r\n      buyCurrencies: this.getBuyCurrencies(props),\r\n      sellAmount: props.editedTransaction.counterAmount.toString(),\r\n      sellAmountError: null,\r\n      sellCurrency: this.getSelectObject(props.editedTransaction.pair.counter),\r\n      sellCurrencyError: null,\r\n      sellCurrencies: this.getSellCurrencies(props),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editTrade\");\r\n    ReactGA.modalview(window.location.pathname + '#/editTrade');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        buyAmount: nextProps.editedTransaction.baseAmount.toString(),\r\n        buyAmountError: null,\r\n        buyCurrency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        buyCurrencyError: null,\r\n        buyCurrencies: this.getBuyCurrencies(nextProps),\r\n        sellAmount: nextProps.editedTransaction.counterAmount.toString(),\r\n        sellAmountError: null,\r\n        sellCurrency: this.getSelectObject(nextProps.editedTransaction.pair.counter),\r\n        sellCurrencyError: null,\r\n        sellCurrencies: this.getSellCurrencies(nextProps),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editTrade');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidBuyAmount(this.state.buyAmount) &&\r\n       this.isValidBuyCurrency(this.state.buyCurrency) &&\r\n       this.isValidSellAmount(this.state.sellAmount) &&\r\n       this.isValidSellCurrency(this.state.sellCurrency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving trade..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.buyCurrency.value, this.state.sellCurrency.value);\r\n      let tx = new Transaction(true, this.state.editedTransaction.isBuy, pair, parseFloat(this.state.buyAmount), parseFloat(this.state.sellAmount), this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditTradeDialog;","/*jshint esversion: 6 */\r\nimport React  from 'react';\r\n\r\nclass FormatUtils {\r\n  formatNumber(value, digits) {\r\n    if (value != null) {\r\n      return value.toLocaleString('en-US', { minimumFractionDigits: digits, maximumFractionDigits: digits });\r\n    }\r\n\r\n    return \"0\";\r\n  }\r\n\r\n  toShortFormat(balance) {\r\n    let short = balance;\r\n    let adder = \"\";\r\n    if(balance > 10000000000) {\r\n      short = balance / 1000000000;\r\n      adder = \"B\";\r\n    } else if(balance > 10000000) {\r\n      short = balance / 1000000;\r\n      adder = \"M\";\r\n    } else if(balance > 10000) {\r\n      short = balance / 1000;\r\n      adder = \"K\";\r\n    }\r\n\r\n    // special case if portfolio is negative\r\n    if(balance < 0) {\r\n      let value = formatUtils.formatNumber(short, 2) + adder;\r\n      return \"-$\" + value.slice(1, value.length);\r\n    }\r\n\r\n    return \"$\" + formatUtils.formatNumber(short, 2) + adder;\r\n  }\r\n\r\n  toGreenRedPercentStyle(value) {\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.formatNumber(value, 2) + \"%\"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>navigate to the Funding page,</li>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n}\r\n\r\nexport let formatUtils = new FormatUtils();","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n// used to make this component's props into classes\r\nimport cx from \"classnames\";\r\n// used for making the props of this component to bool\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CustomButton extends Component {\r\n  render() {\r\n    const {\r\n      special,\r\n      speciallarge,\r\n      table,\r\n      fill,\r\n      simple,\r\n      pullRight,\r\n      block,\r\n      wd,\r\n      round,\r\n      icon,\r\n      neutral,\r\n      twitter,\r\n      facebook,\r\n      google,\r\n      linkedin,\r\n      pinterest,\r\n      youtube,\r\n      tumblr,\r\n      github,\r\n      behance,\r\n      dribbble,\r\n      reddit,\r\n      stumbleupon,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const btnClasses = cx({\r\n      \"btn-special\": special,\r\n      \"btn-special-large\": speciallarge,\r\n      \"btn-table\": table,\r\n      \"btn-fill\": fill,\r\n      \"btn-simple\": simple,\r\n      \"pull-right\": pullRight,\r\n      \"btn-block\": block,\r\n      \"btn-wd\": wd,\r\n      \"btn-round\": round,\r\n      \"btn-icon\": icon,\r\n      \"btn-neutral\": neutral,\r\n      \"btn-social btn-twitter\": twitter,\r\n      \"btn-social btn-facebook\": facebook,\r\n      \"btn-social btn-google\": google,\r\n      \"btn-social btn-linkedin\": linkedin,\r\n      \"btn-social btn-pinterest\": pinterest,\r\n      \"btn-social btn-youtube\": youtube,\r\n      \"btn-social btn-tumblr\": tumblr,\r\n      \"btn-social btn-github\": github,\r\n      \"btn-social btn-behance\": behance,\r\n      \"btn-social btn-dribbble\": dribbble,\r\n      \"btn-social btn-reddit\": reddit,\r\n      \"btn-social btn-stumbleupon\": stumbleupon\r\n    });\r\n\r\n    return <Button className={btnClasses} {...rest} />;\r\n  }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n  special: PropTypes.bool,\r\n  speciallarge: PropTypes.bool,\r\n  table: PropTypes.bool,\r\n  fill: PropTypes.bool,\r\n  simple: PropTypes.bool,\r\n  pullRight: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  wd: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  neutral: PropTypes.bool,\r\n  twitter: PropTypes.bool,\r\n  facebook: PropTypes.bool,\r\n  google: PropTypes.bool,\r\n  linkedin: PropTypes.bool,\r\n  pinterest: PropTypes.bool,\r\n  youtube: PropTypes.bool,\r\n  tumblr: PropTypes.bool,\r\n  github: PropTypes.bool,\r\n  behance: PropTypes.bool,\r\n  dribbble: PropTypes.bool,\r\n  reddit: PropTypes.bool,\r\n  stumbleupon: PropTypes.bool\r\n};\r\n\r\nexport default CustomButton;\r\n","\r\n\t\t\r\n\r\n\r\n// token addresses\r\nexport const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\r\nexport const cdaiAddress = \"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643\";\r\nexport const usdcAddress = \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\";\r\nexport const cusdcAddress = \"0x39aa39c021dfbae8fac545936693ac917d5e7563\";\r\nexport const batAddress = \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\";\r\nexport const sethAddress = \"0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb\";\r\nexport const wethAddress = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\t\t\r\nexport const compAddress = \"0xc00e94cb662c3520282e6f5717214004a7f26888\";\r\nexport const sushiAddress = \"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2\";\r\nexport const alphaAddress = \"0xa1faa113cbe53436df28ff0aee54275c13b40975\";\r\nexport const ibethAddress = \"0x67B66C99D3Eb37Fa76Aa3Ed1ff33E8e39F0b9c7A\";\r\nexport const bacAddress = \"0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a\";\r\nexport const wbtcAddress = \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\";\r\n\r\nexport const ustAddress = \"0xa47c8bf37f92abed4a126bda807a7b7498661acd\";\r\nexport const mmsftAddress = \"0x41bbedd7286daab5910a1f15d12cbda839852bd7\";\r\nexport const mgoogAddress = \"0x59a921db27dd6d4d974745b7ffc5c33932653442\";\r\nexport const mtwtrAddress = \"0xedb0414627e6f1e3f082de65cd4f9c693d78cca9\";\r\n\r\n\r\n\r\n// uniswap v2 exchange addresses\r\nexport const uniswapV2DAIWETHAddress = \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\";\r\nexport const uniswapV2USDCWETHAddress = \"0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc\";\r\nexport const uniswapV2BATWETHAddress = \"0xb6909b960dbbe7392d405429eb2b3649752b4838\";\r\nexport const uniswapV2DAIUSDCAddress = \"0xae461ca67b15dc8dc81ce7615e0320da1a9ab8d5\";\r\nexport const uniswapV2ALPHAIBETHAddress = \"0x411a9b902f364817a0f9c4261ce28b5566a42875\";\r\nexport const uniswapV2USTmMSFTAddress = \"0xeAfAD3065de347b910bb88f09A5abE580a09D655\";\r\nexport const uniswapV2USTmGOOGAddress = \"0x4b70ccD1Cf9905BE1FaEd025EADbD3Ab124efe9a\";\r\nexport const uniswapV2USTmTWTRAddress = \"0x34856be886A2dBa5F7c38c4df7FD86869aB08040\";\r\nexport const uniswapV2DAIBACAddress = \"0xd4405f0704621dbe9d4dea60e128e0c3b26bddbd\";\r\n\r\nexport const sushiswapV2COMPETHAddress = \"0x31503dcb60119a812fee820bb7042752019f2355\";\r\nexport const sushiswapV2SUSHIETHAddress = \"0x795065dcc9f64b5614c407a6efdc400da6221fb0\";\r\n\r\nexport const inchV2DAIETHAddress = \"0x7566126f2fd0f2dddae01bb8a6ea49b760383d5a\";\r\n\r\nexport function getContractInstance(web3, abi, address) {\t\t\t\r\n\t//console.log(\"Loading contract instance for address: \" + address)\r\n\treturn new web3.eth.Contract(abi, address);\r\n}\r\n\r\n/*export function checkBalances(market, balanceLPT) {\r\n    let balanceETH = balanceLPT * market.poolUNDER / market.poolLIQ;\r\n    let balanceToken = balanceLPT * market.poolBASE / market.poolLIQ;\r\n    return [balanceETH, balanceToken];\r\n}*/\r\n  \r\nexport function debalanceETH(currentPrice, startBASE, ethTokens, daiTokens) {\r\n    let diffDai = startBASE - daiTokens;\r\n    let newETH = ethTokens - diffDai / currentPrice;\r\n    \r\n    return [newETH, startBASE];\r\n  }\r\n  \r\nexport function debalanceDAI(currentPrice, startUNDER, ethTokens, daiTokens) {\r\n    let diffETH = startUNDER - ethTokens;\r\n    let newDAI = daiTokens - diffETH * currentPrice;\r\n    \r\n    return [startUNDER, newDAI];\r\n}\r\n\r\n/**\r\n * @function\r\n * @description Deep clone a class instance.\r\n * @param {object} instance The class instance you want to clone.\r\n * @returns {object} A new cloned instance.\r\n */\r\nexport function clone(original) {\r\n  var copied = Object.assign(\r\n    Object.create(\r\n      Object.getPrototypeOf(original)\r\n    ),\r\n    original\r\n  );\r\n  return copied;\r\n}\r\n\r\n//----------------- BLACK-SCHOLES -----------------------\r\n/*\r\n  PutCallFlag: Either \"put\" or \"call\"\r\n  S: Stock Price\r\n  X: Strike Price\r\n  T: Time to expiration (in years)\r\n  r: Risk-free rate\r\n  v: Volatility\r\n  This is the same one found in http://www.espenhaug.com/black_scholes.html\r\n  but written with proper indentation and a === instead of == because it's\r\n  faster, and it doesn't declare 5 useless variables (although if you really\r\n  want to do it to have more elegant code I left a commented CND function in\r\n  the end)\r\n*/\r\nexport class OptionMath {\r\n\tblackScholes(PutCallFlag, S, X, T, r, v) {\r\n\t  let d1 = (Math.log(S / X) + (r + v * v / 2) * T) / (v * Math.sqrt(T));\r\n\t  let d2 = d1 - v * Math.sqrt(T);\r\n\t  if (PutCallFlag === \"call\") {\r\n\t\treturn ( S * this.CND(d1)-X * Math.exp(-r * T) * this.CND(d2) );\r\n\t  } else {\r\n\t\treturn ( X * Math.exp(-r * T) * this.CND(-d2) - S * this.CND(-d1) );\r\n\t  }\r\n\t}\r\n\r\n\t/* The cummulative Normal distribution function: */\r\n\tCND(x){\r\n\t  if(x < 0) {\r\n\t\treturn ( 1-this.CND(-x) );\r\n\t  } else {\r\n\t\tlet k = 1 / (1 + .2316419 * x);\r\n\t\treturn ( 1 - Math.exp(-x * x / 2)/ Math.sqrt(2*Math.PI) * k * (.31938153 + k * (-.356563782 + k * (1.781477937 + k * (-1.821255978 + k * 1.330274429)))) );\r\n\t  }\r\n\t}\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"card\" +\r\n          (this.props.hidden ? \" card-hidden\" : \"\") +\r\n          (this.props.calendar ? \" card-calendar\" : \"\") +\r\n          (this.props.plain ? \" card-plain\" : \"\") +\r\n          (this.props.wizard ? \" card-wizard\" : \"\")\r\n        }\r\n      >\r\n        {this.props.title !== undefined || this.props.category !== undefined ? (\r\n          <div\r\n            className={\"header\" + (this.props.textCenter ? \" text-center\" : \"\")}\r\n          >\r\n            <div className=\"clearfix\">\r\n              <h4 className=\"title\">{this.props.title}</h4>      \r\n              <p className=\"rightsection\">{this.props.rightSection}</p>\r\n            </div>\r\n            <p className=\"category\">{this.props.category}</p>\r\n            <div className=\"clearboth\"></div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            \"content\" +\r\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\r\n            (this.props.ctFullWidth ? \" content-full-width\" : \"\") +\r\n            (this.props.ctTextCenter ? \" text-center\" : \"\") +\r\n            (this.props.tableFullWidth ? \" table-full-width\" : \"\")\r\n          }\r\n        >\r\n          {this.props.content}\r\n        </div>\r\n        {this.props.stats !== undefined || this.props.legend !== undefined ? (\r\n          <div\r\n            className={\r\n              \"footer\" + (this.props.ftTextCenter ? \" text-center\" : \"\")\r\n            }\r\n          >\r\n            {this.props.legend !== undefined ? (\r\n              <div className=\"legend\">{this.props.legend}</div>\r\n            ) : null}\r\n            {this.props.stats !== undefined ? <hr /> : null}\r\n            {this.props.stats !== undefined ? (\r\n              <div className=\"stats\">{this.props.stats}</div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","module.exports = __webpack_public_path__ + \"static/media/full-screen-image-3.ef9c8d65.jpg\";","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from '../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\nimport Web3 from 'web3';\r\nimport Uniswap from '../web3/Uniswap';\r\nimport dYdXLong from '../web3/dYdXLong';\r\nimport dYdXShort from '../web3/dYdXShort';\r\nimport GammaOptions from '../web3/GammaOptions';\r\nimport Manual from '../web3/Manual';\r\nimport UniswapV3 from '../web3/UniswapV3';\r\nimport PositionChartCard from \"./positions/PositionChartCard\";\r\nimport { clone, debalanceETH, debalanceDAI } from '../web3/common.js';\r\nimport { CoinGeckoPrices } from '../web3/CoinGeckoPrices.js';\r\nimport { \r\n  uniswapdYdXTest, \r\n  dydxShortTest, \r\n  callOptionTest, \r\n  putOptionTest,\r\n  uniswapv3Test\r\n } from '../web3/templates/positions.js';\r\n\r\nclass PositionsView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.hideChartDialog = this.hideChartDialog.bind(this);\r\n    this.loadWeb3 = this.loadWeb3.bind(this);\r\n    this.loadWeb3Account = this.loadWeb3Account.bind(this);\r\n    this.addService = this.addService.bind(this);\r\n\r\n    // load web3\r\n    let web3;\r\n    if (typeof window.web3 !== \"undefined\") {\r\n      web3 = this.loadWeb3();\r\n    }\r\n\r\n    this.state = {\r\n      //data: null,\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null,\r\n      isChartDialogShown: false,\r\n      web3: web3,\r\n      account: null,\r\n      web3DataLoaded: false,\r\n      selectedPosition: null\r\n    };\r\n  }\r\n  \r\n  async componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n\r\n    // load account\r\n    const web3 = this.state.web3;\r\n    if (web3) {\r\n      const userAccount = await this.loadWeb3Account(web3);\r\n      this.setState({\r\n        account: userAccount\r\n      });\r\n    }\r\n  }\r\n\r\n  loadWeb3() {\r\n    let web3;\r\n    if (typeof global.window !== \"undefined\") {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        web3 = new Web3(window.ethereum);\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (typeof global.window.web3 !== \"undefined\") {\r\n        // Use Mist/MetaMask's provider\r\n        web3 = new Web3(window.web3.currentProvider);\r\n      } else {\r\n        // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\r\n        web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\r\n      }\r\n    }\r\n\r\n    return web3;\r\n  };\r\n  \r\n  async loadWeb3Account(web3) {\r\n    try {\r\n      await window.ethereum.enable();\r\n      const accounts = await web3.eth.getAccounts();\r\n      return accounts[0];\r\n    } catch (e) {\r\n      console.error(\"Unable to load web3 account. Please enable web3 wallet in your browser. Message: \" + e.getMessage());\r\n    }\r\n  };\r\n\r\n  async componentDidUpdate() {\r\n    if (this.props.userModel && this.props.userModel.positions && Array.isArray(this.props.userModel.positions) && this.state.web3) {\r\n      // call only once\r\n      if (!this.state.web3DataLoaded) {\r\n        console.log(\"Loading web3 data and setting up data for table\")\r\n        this.setState({\r\n          web3DataLoaded: true\r\n        });\r\n        // NOTE: here I can create JSON objects and append to positions\r\n        let appendedPositions = [...this.props.userModel.positions, uniswapv3Test];\r\n        //let appendedPositions = [this.props.userModel.positions[6], uniswapv3Test];\r\n        //let appendedPositions = [callOptionTest, uniswapdYdXTest, dydxShortTest, this.props.userModel.positions[0]];\r\n\r\n        // get live market data from smart contracts via web3\r\n        await this.loadWeb3Data(appendedPositions);\r\n\r\n        // calculate data for table\r\n        let tableData = await this.prepareTableData(appendedPositions);\r\n\r\n        // update table\r\n        this.setState({\r\n          data: tableData,\r\n          selectedPosition: appendedPositions[0]\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadWeb3Data(positions) {\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        await this.addService(pos, subpos);\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  async addService(pos, subpos) {\r\n    let service;\r\n    switch (subpos.type) {\r\n      case \"uniswap\":\r\n        service = new Uniswap(subpos.marketAddress, pos.base.address, pos.under.address, subpos.liq.start);\r\n        break;\r\n      case \"dydx-long\":\r\n        service = new dYdXLong(subpos.under.start, subpos.borrowedBASE, subpos.boughtUNDER, subpos.openingPrice);\r\n        break;\r\n      case \"dydx-short\":\r\n        service = new dYdXShort(subpos.base.start, subpos.borrowedUNDER, subpos.boughtBASE, subpos.openingPrice);\r\n        break;\r\n      case \"option\":\r\n        service = new GammaOptions(subpos.isCall, subpos.isLong, subpos.quantity, subpos.strike, subpos.daysToExpiry, subpos.iv);\r\n        break;\r\n      case \"manual\":\r\n        service = new Manual(subpos.base.start, subpos.base.extra, subpos.under.start, subpos.under.extra);\r\n        break;\r\n      case \"uniswapv3\":\r\n        service = new UniswapV3(subpos.base.start, subpos.under.start, pos.entryPrice, subpos.minPrice, subpos.maxPrice, subpos.feeInPercent);\r\n        break;\r\n    }\r\n\r\n    await service.getMarketData(this.state.web3, pos);\r\n    console.log(service)\r\n    // todo: dirty adding to position\r\n    subpos.service = service;\r\n  }\r\n\r\n  async prepareTableData(positions) {\r\n    let uniswapTableSet = [];\r\n    for(let i = 0; i < positions.length; i++) {\r\n      let pos = positions[i];\r\n      // time \r\n      let startDate = new Date(pos.startDate);\r\n      let daysSinceStart = (new Date() - startDate) / (1000 * 60 * 60 * 24);\r\n\r\n      // find uniswap market\r\n      let market, currentPrice;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n        if(subpos.type === \"uniswap\") {\r\n          market = clone(subpos.service);\r\n          currentPrice = market.getPrice();\r\n        }\r\n      }\r\n\r\n      // if there is no uniswap market, use coingecko api\r\n      if(!market) {\r\n        //let priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address);\r\n        //let priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address);\r\n        //console.log(priceUNDERUSD)\r\n        market = {\r\n          priceBASEUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.base.address),\r\n          priceUNDERUSD: await CoinGeckoPrices.getTokenPriceInUSD(pos.under.address)\r\n        }\r\n        currentPrice = market.priceUNDERUSD / market.priceBASEUSD;\r\n      }\r\n\r\n\r\n      let totalInBASE = 0, totalOutBASE = 0;//, startBASE = 0, startUNDER = 0;\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        // calculate Ins\r\n        totalInBASE += subpos.base.start + subpos.under.start * currentPrice;\r\n\r\n        // calculate Outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * currentPrice;\r\n        totalOutBASE += subpos.service.getCurrentValue(currentPrice)[0] + extraBASE; \r\n      }\r\n\r\n      // today\r\n      let profitTodayToken = totalOutBASE - totalInBASE;\t\t\t\t\r\n      let profitPerMonthTodayToken = profitTodayToken * 30.4167 / daysSinceStart;\t\t\t\t\t\t\r\n      let aprToday = profitTodayToken / totalInBASE / daysSinceStart * 365 * 100;\t\r\n\r\n      let subpos = pos.subpositions[0];\r\n\r\n      // target UNDER\r\n      // default is if there is only one asset on opening\r\n      let targetPriceUNDER = currentPrice;\r\n      let targetProfitUNDER = profitTodayToken / currentPrice;\r\n      let profitPerMonthTargetUNDER = profitPerMonthTodayToken / currentPrice;\r\n      let aprTargetUNDER = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitUNDER = this.findMaxUNDER(pos);\r\n        targetPriceUNDER = priceAndProfitUNDER[0];\r\n        targetProfitUNDER = priceAndProfitUNDER[1];\r\n        let targetHodlUNDER = priceAndProfitUNDER[2];\r\n        profitPerMonthTargetUNDER = targetProfitUNDER * 30.4167 / daysSinceStart;\t\r\n        aprTargetUNDER = targetProfitUNDER / targetHodlUNDER / daysSinceStart * 365 * 100;\r\n      } \r\n\r\n      // target BASE\r\n      // default is if there is only one asset on opening\r\n      let targetPriceBASE = currentPrice;\r\n      let targetProfitBASE = profitTodayToken;\r\n      let profitPerMonthTargetBASE = profitPerMonthTodayToken;\r\n      let aprTargetBASE = aprToday;\r\n      // if there base and under, calculate real target values\r\n      if(subpos.type === 'uniswap' && subpos.base.start > 0 && subpos.under.start > 0) {\r\n        let priceAndProfitBASE = this.findMaxBASE(pos);\r\n        targetPriceBASE = priceAndProfitBASE[0];\r\n        targetProfitBASE = priceAndProfitBASE[1];\r\n        let targetHodlBASE = priceAndProfitBASE[2];\r\n        console.log(\"targetHodlBASE: \" + targetHodlBASE)\r\n        profitPerMonthTargetBASE = targetProfitBASE * 30.4167 / daysSinceStart;\t\r\n        aprTargetBASE = targetProfitBASE / targetHodlBASE / daysSinceStart * 365 * 100;\r\n      } \r\n            \r\n      // profits in (USD)\r\n      let profitTargetETHUSD = targetProfitUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? targetProfitBASE * market.priceBASEUSD : targetProfitBASE / targetPriceBASE * market.priceUNDERUSD;\r\n      let profitPerMonthTargetETHUSD = profitPerMonthTargetUNDER * targetPriceUNDER * market.priceBASEUSD;\r\n      let profitPerMonthTargetTokenUSD = pos.base.symbol === \"DAI\" || pos.base.symbol === \"USDC\" || pos.base.symbol === \"UST\" ? profitPerMonthTargetBASE * market.priceBASEUSD : profitPerMonthTargetBASE / targetPriceBASE * market.priceUNDERUSD;\r\n\r\n      pos.maxProfitTargetUSD = Math.max(profitTargetETHUSD, profitTargetTokenUSD);\r\n      pos.maxProfitPerMonthTargetUSD = Math.max(profitPerMonthTargetTokenUSD, profitPerMonthTargetETHUSD);\r\n\r\n      // prepare dataset for table\r\n      uniswapTableSet.push({\r\n        id: pos,\r\n        position: [pos.name, pos.description, pos.address], \r\n        sizedays: {\r\n          size: [totalOutBASE * market.priceBASEUSD, \"USD\"],\r\n          days: [daysSinceStart.toFixed(0), \"days\"],\r\n        },\r\n        price: {\r\n          lower: [targetPriceUNDER, pos.base.symbol],\r\n          current: [currentPrice, pos.base.symbol],\r\n          higher: [targetPriceBASE, pos.base.symbol]\r\n        },\r\n        totalprofit: {\r\n          lower: [targetProfitUNDER, pos.under.symbol, profitTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitTodayToken, \"USD\", market.priceBASEUSD * profitTodayToken],\r\n          higher: [targetProfitBASE, pos.base.symbol, profitTargetTokenUSD]\r\n        },\r\n        monthlyprofit: {\r\n          lower: [profitPerMonthTargetUNDER, pos.under.symbol, profitPerMonthTargetETHUSD],\r\n          current: [market.priceBASEUSD * profitPerMonthTodayToken, \"USD\", market.priceBASEUSD * profitPerMonthTodayToken],\r\n          higher: [profitPerMonthTargetBASE, pos.base.symbol, profitPerMonthTargetTokenUSD]\r\n        },\r\n        apr: {\r\n          lower: [aprTargetUNDER, \"%\"],\r\n          current: [aprToday, \"%\"],\r\n          higher: [aprTargetBASE, \"%\"]\r\n        },\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isChartDialogShown: false, // todo: maybe enable later\r\n                  selectedPosition: positions[i]\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fas fa-chart-area\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                //this.props.setEditedTransaction(this.state.data[key].id);\r\n                //this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <br></br>\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  //removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n    return uniswapTableSet;\r\n  }\r\n\r\n  findMaxBASE(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceBASE = -100000000000;\r\n    let maxProfitBASE = -100000000000;\r\n    let maxTotalHodlBASE = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutBASE = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        totalOutBASE += subpos.service.getCurrentValue(i)[0] + extraBASE;\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalanced = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" UNDER + \" + debalanced[1].toFixed(4) + \" BASE\");\r\n      if(maxBalanceBASE < debalanced[1]) {\r\n        maxBalanceBASE = debalanced[1];\r\n        maxProfitBASE = debalanced[1] - startBASE;\r\n        maxPrice = i;\r\n        maxTotalHodlBASE = startBASE + startUNDER * maxPrice;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitBASE, maxTotalHodlBASE];\r\n  }\r\n\r\n  findMaxUNDER(position) {\r\n    let startPrice = 0.1;\r\n    let endPrice = 5000;\t\r\n    let maxPrice = startPrice;\t\t\t\r\n    let maxBalanceUNDER = -100000000000;\r\n    let maxProfitUNDER = -100000000000;\r\n    let maxTotalHodlUNDER = -100000000000;\r\n\r\n    for(let i = startPrice; i < endPrice; i += 0.01) {\r\n      let totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < position.subpositions.length; j++) {\r\n        let subpos = position.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraUNDER = subpos.under.extra + subpos.base.extra / i;\r\n        totalOutUNDER += subpos.service.getCurrentValue(i)[1] + extraUNDER;\r\n      }\r\n\r\n      // debalance for max UNDER\r\n      let debalanced = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced @\" + i.toFixed(3) + \": \" + debalanced[0].toFixed(4) + \" ETH + \" + debalanced[1].toFixed(4) + \" COMP\");\r\n      if(maxBalanceUNDER < debalanced[0]) {\r\n        maxBalanceUNDER = debalanced[0];\r\n        maxProfitUNDER = debalanced[0] - startUNDER;\r\n        maxPrice = i;\r\n        maxTotalHodlUNDER = startBASE / maxPrice + startUNDER;\r\n      }\r\n    }\r\n\r\n    return [maxPrice, maxProfitUNDER, maxTotalHodlUNDER];\r\n  }\r\n\r\n  getTotalProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitTargetUSD;\r\n      } \r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getMonthlyProfitSum() {\r\n    let sumA = 0;\r\n    for(let i = 0; i < this.props.userModel.positions.length; i++) {\r\n      if(this.props.userModel.positions[i].maxProfitPerMonthTargetUSD) {\r\n        sumA += this.props.userModel.positions[i].maxProfitPerMonthTargetUSD;\r\n      }\r\n    }\r\n    \r\n    return sumA;\r\n  };\r\n\r\n  getSumFooter(rows, columnName, subName, index) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row[columnName][subName][index];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  displayDescription = (description) => {\r\n    return (description ? description.text : null)\r\n  };\r\n\r\n  displayLinks = (description) => {\r\n    if(description) {\r\n      return (\r\n        description.links.map((link, key) => {\r\n          return (\r\n            <span key={key}>\r\n              <a href={link.link}>{link.anchor}</a>{\" \"}\r\n            </span>\r\n          );\r\n        })\r\n      )\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { \r\n        Header: \"Position\", accessor: \"position\", maxWidth: 550, style: { 'whiteSpace': 'unset' },\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Cell: row => {\r\n          return (\r\n            <span style={{ float: \"left\" }}>\r\n              <b>{row.value[0]}</b><br></br>\r\n              {this.displayDescription(row.value[1])}<br></br>\r\n              {this.displayLinks(row.value[1])}\r\n              <a href={\"https://zapper.fi/dashboard?address=\" + row.value[2]}>Zap</a>\r\n            </span>\r\n          )\r\n        },\r\n      },\r\n      { \r\n        Header: \"Size/Days\", accessor: \"sizedays\", maxWidth: 120, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {\"$\" + formatUtils.formatNumber(row.value.size[0], 0)}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.days[0], 0) + \" \" + row.value.days[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"sizedays\", \"size\", 0), 0) + \" \" + rows.data[0][\"sizedays\"][\"size\"][1]}\r\n            </strong>\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }\r\n      },\r\n      { \r\n        Header: \"Price\", accessor: \"price\", maxWidth: 130, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \" \" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \" \" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \" \" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              @current\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              @target\r\n              </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Total Profit\", accessor: \"totalprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"totalprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getTotalProfitSum(), 0) + \" \" + rows.data[0][\"totalprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Monthly Profit\", accessor: \"monthlyprofit\", maxWidth: 350, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 0) + \" \" + row.value.lower[1] + \" ($\" + formatUtils.formatNumber(row.value.lower[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 0) + \" \" + row.value.current[1] + \" ($\" + formatUtils.formatNumber(row.value.current[2], 0) + \")\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 0) + \" \" + row.value.higher[1] + \" ($\" + formatUtils.formatNumber(row.value.higher[2], 0) + \")\"}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; }, \r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum(), 0) + \" \" + rows.data[0][\"monthlyprofit\"][\"current\"][1]}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"APR\", accessor: \"apr\", maxWidth: 70, filterable: false,\r\n        Cell: row => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.lower[0], 2) + \"\" + row.value.lower[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.current[0], 2) + \"\" + row.value.current[1]}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(row.value.higher[0], 2) + \"\" + row.value.higher[1]}\r\n            </div>\r\n          </div>\r\n        ),\r\n        sortMethod: (a, b) => { return b - a; },\r\n        Footer: rows => (\r\n          <div>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getSumFooter(rows, \"monthlyprofit\", \"current\", 0) * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n            <br/>\r\n            <div style={{ float: \"right\" }}>\r\n              {formatUtils.formatNumber(this.getMonthlyProfitSum() * 12 / this.getSumFooter(rows, \"sizedays\", \"size\", 0) * 100, 2) + \"%\"}\r\n            </div>\r\n          </div>\r\n        )\r\n      },\r\n      { \r\n        Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false \r\n      }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  hideChartDialog() {\r\n    this.setState({\r\n      isChartDialogShown: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      123 help\r\n    </Tooltip>;\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my opened positions?\"\r\n                rightSection={\r\n                  <span>\r\n                    <Button\r\n                      // was like this for without color\r\n                      //simple\r\n                      bsStyle=\"info\"\r\n                      fill\r\n                      special   \r\n                      onClick={() => this.props.showAddTradeDialog()}\r\n                    >\r\n                      <i className={\"fa fa-plus\"} /> Add trade\r\n                    </Button>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                      <Button\r\n                        bsStyle=\"default\"\r\n                        special // for share button: fa fa-share-alt\r\n                        //speciallarge \r\n                        //pullRight\r\n                        simple\r\n                      >\r\n                        <i className={\"fa fa-question-circle\"} /> Help \r\n                      </Button> \r\n                    </OverlayTrigger>\r\n                  </span>\r\n                }\r\n                category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n                content={this.state.data ? \r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                : null}\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <PositionChartCard \r\n                selectedPosition={this.state.selectedPosition}\r\n                userModel={this.props.userModel}\r\n                resModel={this.props.resModel}\r\n                addService={this.addService}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionsView;\r\n","import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\nimport uniswapABI from \"../abis/uniswapABI.json\";\r\nimport daiABI from \"../abis/daiABI.json\";\r\nimport { usdcAddress, wbtcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class Uniswap {\t\t\r\n\tconstructor(marketAddress, addressBASE, addressUNDER, myLIQ) {\r\n\t\tthis.marketAddress = marketAddress;\r\n\t\tthis.addressBASE = addressBASE;\r\n\t\tthis.addressUNDER = addressUNDER;\r\n\t\tthis.feeInPercent = 0.3;\r\n\r\n\t\t// my position\r\n\t\tthis.myBASE = 0;\r\n\t\tthis.myUNDER = 0;\r\n\t\tthis.myLIQ = myLIQ;\r\n\r\n\t\t// pool \r\n\t\tthis.poolBASE = 0;\r\n\t\tthis.poolUNDER = 0;\r\n\t\tthis.poolLIQ = 0;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tlet marketInstance = getContractInstance(web3, uniswapABI, this.marketAddress);\r\n\t\tlet baseInstance = getContractInstance(web3, daiABI, this.addressBASE);\r\n\t\tlet underInstance = getContractInstance(web3, daiABI, this.addressUNDER);\r\n\r\n\t\tlet ethBalance = await web3.eth.getBalance(this.marketAddress);\r\n\t\tlet poolLIQ = await marketInstance.methods.totalSupply().call();\r\n\t\tlet poolBASE = await baseInstance.methods.balanceOf(this.marketAddress).call();\r\n\t\tlet poolUNDER = await underInstance.methods.balanceOf(this.marketAddress).call();\r\n\r\n\t\t// if pool is using eth instead of weth\r\n\t\tif(poolUNDER / 10 ** 18 === 0 && ethBalance / 10 ** 18 > 0) {\r\n\t\t\tpoolUNDER = ethBalance;\r\n\t\t}\r\n\r\n\t\t// save to position\r\n\t\tthis.poolUNDER = poolUNDER / 10 ** this.getDecimals(this.addressUNDER); \r\n\t\tthis.poolLIQ = poolLIQ / 10 ** 18; \r\n\t\tthis.poolBASE = poolBASE / (this.addressBASE !== usdcAddress ? 10 ** 18 : 10 ** 6);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\t//this.priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\t//this.priceLIQBASE = this.poolBASE / this.poolLIQ;\r\n\t\t//this.priceUNDERBASE = this.poolBASE / this.poolUNDER;\r\n\r\n\t\tthis.priceBASEUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressBASE);\r\n\t\tthis.priceUNDERUSD = await CoinGeckoPrices.getTokenPriceInUSD(this.addressUNDER);\r\n\r\n\t\tconsole.log(\"AMM market data loaded. \" + position.base.symbol + \": \" + this.priceBASEUSD + \" USD, \" + position.under.symbol + \": \" + this.priceUNDERUSD + \" USD\");\r\n\t}\r\n\r\n\tgetDecimals() {\r\n\t\tif(this.addressUNDER === usdcAddress) {\r\n\t\t\treturn 6;\r\n\t\t} else if (this.addressUNDER === wbtcAddress) {\r\n\t\t\treturn 8;\r\n\t\t}\r\n\r\n\t\treturn 18;\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price. \r\n\t// Moves price to newPrice, calculates, and later returns market to \r\n\tgetCurrentValue(newPrice) {\r\n\t\t// get old price, move to new price\r\n\t\tlet oldPrice = this.getPrice();\r\n\t\tthis.setMarketPrice(newPrice);\r\n\r\n\t\tlet myShare = this.myLIQ / this.poolLIQ;\r\n\t\tlet myBASE = this.poolBASE * myShare + this.poolUNDER * myShare * newPrice;\r\n\t\tlet myUNDER = myBASE / newPrice;\r\n\r\n\t\t// back to old price\r\n\t\tthis.setMarketPrice(oldPrice);\r\n\r\n\t\treturn [myBASE, myUNDER];\r\n\t}\r\n\r\n\taddLiquidity(exactUNDER, exactBASE) {\r\n\t\tlet exactLIQ = exactUNDER * (this.poolLIQ / this.poolUNDER);\r\n\t\t//console.log(\"Pool before: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.poolLIQ += exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + market.poolUNDER + \" ETH + \" + market.poolBASE + \" Token\");\r\n\t\treturn exactLIQ;\r\n\t}\r\n\t\r\n\tremoveLiquidity(exactLIQ) {\r\n\t\tlet priceLIQUNDER = this.poolUNDER / this.poolLIQ;\r\n\t\tlet priceLIQDAI = this.poolBASE / this.poolLIQ;\r\n\t\tlet exactUNDER = exactLIQ * priceLIQUNDER;\r\n\t\tlet exactBASE = exactLIQ * priceLIQDAI;\r\n\t\t//console.log(\"Pool before: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\tthis.poolUNDER -= exactUNDER;\r\n\t\tthis.poolBASE -= exactBASE;\r\n\t\tthis.poolLIQ -= exactLIQ;\r\n\t\tthis.k = this.poolBASE * this.poolUNDER;\r\n\t\t//console.log(\"Pool after: \" + simETHPool + \" ETH + \" + simDAIPool + \" DAI\");\r\n\t\treturn [exactUNDER, exactBASE];\r\n\t}\r\n\r\n\tbuyUNDER(exactBASE) {\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactUNDER = Math.abs(this.k / (this.poolBASE + exactBASE) - this.poolUNDER);\r\n\t\t\t\t\t\t\r\n\t\t// apply fee\r\n\t\tlet exactUNDERWithFees = exactUNDER * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER -= exactUNDERWithFees;\r\n\t\tthis.poolBASE += exactBASE;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactUNDERWithFees;\r\n\t}\r\n\r\n\tsellUNDER(exactUNDER) {\t\t\t\t\r\n\t\t// calculate \r\n\t\tlet exactBASE = Math.abs(this.k / (this.poolUNDER + exactUNDER) - this.poolBASE);\r\n\t\t\r\n\t\t// apply fee\r\n\t\tlet exactBASEWithFees = exactBASE * (1 - this.feeInPercent / 100);\r\n\t\t\r\n\t\t// update BASE and UNDER pools and recalculate k (since fee is added to pools)\r\n\t\tthis.poolUNDER += exactUNDER;\r\n\t\tthis.poolBASE -= exactBASEWithFees;\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t\t\r\n\t\treturn exactBASEWithFees;\r\n\t}\r\n\r\n\tgetInputPrice(inputAmount, inputPool, outputPool) {\r\n\t\treturn (inputAmount * outputPool) / (inputPool + inputAmount);\r\n\t}\r\n\r\n\t// helper method to set new price\r\n\tsetMarketPrice(newPrice) {\r\n\t\tlet k = this.poolBASE * this.poolUNDER;\r\n\t\tthis.poolUNDER = Math.sqrt(k / newPrice);\r\n\t\tthis.poolBASE = Math.sqrt(k * newPrice);\r\n\t\tthis.k = this.poolUNDER * this.poolBASE;\r\n\t}\r\n\r\n\tgetPrice() {\r\n\t\treturn this.poolBASE / this.poolUNDER;\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXLong {\t\t\r\n\tconstructor(collateralUNDER, borrowedBASE, boughtUNDER, openingPrice) {\r\n\t\tthis.collateralUNDER = collateralUNDER;\r\n\t\tthis.borrowedBASE = borrowedBASE;\r\n\t\tthis.boughtUNDER = boughtUNDER;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXLong market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = (this.collateralUNDER + this.boughtUNDER) * currentPrice - this.borrowedBASE;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class dYdXShort {\t\t\r\n\tconstructor(collateralBASE, borrowedUNDER, boughtBASE, openingPrice) {\r\n\t\tthis.collateralBASE = collateralBASE;\r\n\t\tthis.borrowedUNDER = borrowedUNDER;\r\n\t\tthis.boughtBASE = boughtBASE;\r\n\t\tthis.openingPrice = openingPrice;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"dYdXShort market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.collateralBASE + this.boughtBASE - this.borrowedUNDER * currentPrice;\r\n\t\treturn [Math.max(0, positionBASE), Math.max(0, positionBASE) / currentPrice];\r\n\t}\r\n}\t\t\r\n","import { OptionMath } from './common.js'\r\nexport default class GammaOptions {\t\t\r\n\tconstructor(isCall, isLong, quantity, strike, daysToExpiry, iv) {\r\n\t\tthis.isCall = isCall;\r\n\t\tthis.isLong = isLong;\r\n\t\tthis.quantity = quantity;\r\n\t\tthis.strike = strike;\r\n\t\tthis.daysToExpiry = daysToExpiry;\r\n\t\tthis.iv = iv;\r\n\t\tthis.optionMath = new OptionMath(); \r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"GammaOptions market data loaded. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet currentValueBASE = this.quantity * this.optionMath.blackScholes(this.isCall ? 'call' : 'put', currentPrice, this.strike, this.daysToExpiry / 365, 0.02, this.iv / 100);\r\n\t\t//console.log(\"optionBASE: \" + optionBASE);\r\n\t\treturn [currentValueBASE, currentValueBASE / currentPrice];\r\n\t}\r\n}\t\t\r\n","\t\t\r\nexport default class Manual {\t\t\r\n\tconstructor(startBASE, extraBASE, startUNDER, extraUNDER) {\r\n\t\tthis.startBASE = startBASE;\r\n\t\tthis.extraBASE = extraBASE;\r\n\t\tthis.startUNDER = startUNDER;\r\n\t\tthis.extraUNDER = extraUNDER;\r\n\t}\r\n\r\n\t// gets live market data via web3 \r\n\tasync getMarketData(web3, position) {\r\n\t\t// do nothing for now\r\n\t\tconsole.log(\"Manual market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// gets current value in [BASE, UNDER]\r\n\tgetCurrentValue(currentPrice) {\r\n\t\tlet positionBASE = this.startBASE + this.startUNDER * currentPrice;\r\n\t\treturn [positionBASE, positionBASE / currentPrice];\r\n\t}\r\n}\t\t\r\n","//import { CoinGeckoPrices } from './CoinGeckoPrices.js';\r\n//import uniswapABI from \"../abis/uniswapABI.json\";\r\n//import daiABI from \"../abis/daiABI.json\";\r\n//import { usdcAddress, getContractInstance } from './common.js'\r\n\t\t\r\nexport default class UniswapV3 {\t\t\r\n\tconstructor(myBASE, myUNDER, openingPrice, minPrice, maxPrice, feeInPercent) {\r\n\t\tthis.myBASE = myBASE;             // user invested in BASE\r\n\t\tthis.myUNDER = myUNDER;           // user invested in UNDER\r\n\t\tthis.openingPrice = openingPrice; // price when liq position is opened\r\n\t\tthis.minPrice = minPrice;\r\n\t\tthis.maxPrice = maxPrice;\r\n\t\tthis.feeInPercent = feeInPercent;\r\n\r\n\t\t// total in BASE amd total in UNDER\r\n\t\tthis.openingTotalBASE = myBASE + myUNDER * openingPrice;\r\n\r\n\t\tthis.token1V2 = this.openingTotalBASE / 2;\r\n\t\tthis.token2V2 = this.token1V2 / openingPrice;\r\n\t\tthis.L = Math.sqrt(this.token1V2 * this.token2V2);\r\n\t\tthis.L2 = this.token1V2 * this.token2V2;\r\n\t\tthis.T = this.L * Math.sqrt(minPrice);\r\n\t\tthis.H = this.L / Math.sqrt(maxPrice);\r\n\t\tthis.maxToken2 = this.L2 / this.H - this.T;\r\n\t\tthis.maxToken1 = this.L2 / this.T - this.H;\r\n\t\tthis.LP_a = openingPrice > maxPrice ? 0 : (this.L / Math.sqrt(openingPrice) - this.H) * openingPrice;\r\n\t\tthis.LP_b = openingPrice > maxPrice ? this.maxToken2 : this.L * Math.sqrt(openingPrice) - this.T;\r\n\t\tthis.LP = this.LP_a + this.LP_b;\r\n\t\tthis.multiplier = openingPrice > minPrice ? this.openingTotalBASE / this.LP : this.openingTotalBASE / (openingPrice * this.maxToken1);\r\n\t}\r\n\r\n\t// gets pool sizes and prices from live market \r\n\tasync getMarketData(web3, position) {\r\n\t\tconsole.log(\"UniswapV3 market data not needed to be loaded, skip. \");\r\n\t}\r\n\r\n\t// gets user balance in [BASE, UNDER] for given price \r\n\tgetCurrentValue(newPrice) {\r\n\t\tlet x, y, value; // x is BASE. y is UNDER\r\n\t\tif (newPrice < this.minPrice) {\r\n\t\t\tx = this.maxToken1 * this.multiplier;\r\n\t\t\ty = 0;\r\n\t\t\tvalue = x * newPrice;\r\n\t\t} else if (newPrice >= this.minPrice && newPrice <= this.maxPrice) {\r\n\t\t\tx = (this.L / Math.sqrt(newPrice) - this.H) * this.multiplier;\r\n\t\t\ty = (this.L * Math.sqrt(newPrice) - this.T) * this.multiplier;\r\n\t\t\tvalue = x * newPrice + y;\r\n\t\t} else if (newPrice > this.maxPrice) {\r\n\t\t\tx = 0;\r\n\t\t\ty = this.maxToken2 * this.multiplier;\r\n\t\t\tvalue = y;\r\n\t\t}\r\n\r\n\t\treturn [value, value / newPrice];\r\n\t}\r\n}\t\t\r\n","const dai = {\r\n  address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n  symbol: \"DAI\"\r\n}\r\nconst eth = {\r\n  address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\r\n  symbol: \"ETH\"\r\n}\r\n\r\nexport const uniswapdYdXTest = {\r\n  name: \"(T) Uniswap + DYDX LONG 1x\",\r\n  startDate: \"2021-02-14T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 1800,\r\n  subpositions: [\r\n    {\r\n      type: \"uniswap\",\r\n      marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n      base: {\r\n        start: 1800,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 1,\r\n        extra: 0\r\n      },\r\n      liq: {\r\n        start: 30.67,\r\n        extra: 0\r\n      }\r\n    },\r\n    {\r\n      type: \"dydx-long\",\r\n      base: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 1,\r\n        extra: 0\r\n      },\r\n      borrowedBASE: 1800, \r\n      boughtUNDER: 1, \r\n      openingPrice: 1800\r\n    }\r\n  ]\r\n}\r\n\r\nexport const dydxShortTest = {\r\n  name: \"(T) DYDX SHORT 1x\",\r\n  startDate: \"2021-02-14T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 1800,\r\n  subpositions: [\r\n    {\r\n      type: \"dydx-short\",\r\n      base: {\r\n        start: 1800,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      borrowedUNDER: 1,\r\n      boughtBASE: 1800,\r\n      openingPrice: 1800\r\n    }\r\n  ]\r\n}\r\n\r\nexport const callOptionTest = {\r\n  name: \"(T) C3200 26 days\",\r\n  startDate: \"2021-05-01T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 2900,\r\n  subpositions: [\r\n    {\r\n      type: \"option\",\r\n      base: {\r\n        start: 183,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      isCall: true, \r\n      isLong: true, \r\n      quantity: 1, \r\n      strike: 3200,\r\n      daysToExpiry: 26,\r\n      iv: 86\r\n    },\r\n  ]\r\n}\r\n\r\nexport const putOptionTest = {\r\n  name: \"(T) P2000 Month away\",\r\n  startDate: \"2021-05-01T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 2800,\r\n  subpositions: [\r\n    {\r\n      type: \"option\",\r\n      base: {\r\n        start: 1000,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      isCall: false, \r\n      isLong: true, \r\n      quantity: 1, \r\n      strike: 2000,\r\n      daysToExpiry: 30,\r\n      iv: 90\r\n    },\r\n  ]\r\n}\r\n\r\nexport const uniswapv3Test = {\r\n  name: \"(T) Uniswap V3 + Puts\",\r\n  startDate: \"2021-05-03T15:01:00.000Z\",\r\n  base: dai,\r\n  under: eth,\r\n  entryPrice: 3900,\r\n  subpositions: [\r\n    {\r\n      type: \"uniswapv3\",\r\n      base: {\r\n        start: 1000,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      minPrice: 3900 * 0.8, \r\n      maxPrice: 3900 * 1.2, \r\n      feeInPercent: 0.3\r\n    },\r\n    {\r\n      type: \"option\",\r\n      base: {\r\n        start: 107,\r\n        extra: 0\r\n      },\r\n      under: {\r\n        start: 0,\r\n        extra: 0\r\n      },\r\n      isCall: false, \r\n      isLong: true, \r\n      quantity: 0.27, \r\n      strike: 3900,\r\n      daysToExpiry: 30,\r\n      iv: 90,\r\n      openingPrice: 3900,\r\n    }\r\n  ]\r\n}","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { \r\n  Col, \r\n  Row\r\n} from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass AddSubpositionCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedType: { value: 'uniswap', label: 'uniswap' }\r\n    }\r\n  }\r\n\r\n  getTypes() {\r\n    return this.props.types.map((type, index) => {\r\n      return { value: type, label: type };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={'Add New'}\r\n        content={\r\n          <div>\r\n            <Row>\r\n              <Col md={12}>\r\n                <div className=\"table-responsive\">\r\n                  <h5>Select subposition</h5>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n              <Select\r\n                placeholder=\"Type\"\r\n                name=\"type\"\r\n                value={this.state.selectedType}\r\n                options={this.getTypes()}\r\n                onChange={value => {\r\n                  this.setState({ selectedType: value });\r\n                }}\r\n              />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Button\r\n                  bsStyle=\"info\"\r\n                  fill\r\n                  //special   \r\n                  onClick={() => this.props.addSubposition(this.state.selectedType.value)}\r\n                >\r\n                  <i className={\"fa fa-plus\"} /> Add subposition\r\n                </Button> \r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSubpositionCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass UniswapV2Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.extra = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStartLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.start = Number(newValue);\r\n    subpos.service.myLIQ = Number(newValue) + subpos.liq.extra;\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeExtraLiq(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.liq.extra = Number(newValue);\r\n    subpos.service.myLIQ = subpos.liq.start + Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'UniswapV2'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.extra}\r\n                onChange={(event) => this.onChangeExtraBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.extra}\r\n                onChange={(event) => this.onChangeExtraUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.start}\r\n                onChange={(event) => this.onChangeStartLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Extra LIQ:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.liq.extra}\r\n                onChange={(event) => this.onChangeExtraLiq(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              APR [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"%\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={20}\r\n                onChange={event => {\r\n                  this.setState({\r\n                    customMin: Number(event.target.value)\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default UniswapV2Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXLongCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.under.start = Number(newValue);\r\n    subpos.service.collateralUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedBASE = Number(newValue);\r\n    subpos.service.borrowedBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtUNDER = Number(newValue);\r\n    subpos.service.boughtUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'dYdX Long'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.under.start}\r\n                onChange={(event) => this.onChangeStartUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.borrowedBASE}\r\n                onChange={(event) => this.onChangeBorrowedBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.boughtUNDER}\r\n                onChange={(event) => this.onChangeBoughtUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXLongCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass DYDXShortCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    subpos.service.collateralBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBorrowedUnder(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.borrowedUNDER = Number(newValue);\r\n    subpos.service.borrowedUNDER = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeBoughtBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.boughtBASE = Number(newValue);\r\n    subpos.service.boughtBASE = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'dYdX Short'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Borrowed UNDER:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.borrowedUNDER}\r\n                onChange={(event) => this.onChangeBorrowedUnder(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Bought BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.boughtBASE}\r\n                onChange={(event) => this.onChangeBoughtBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default DYDXShortCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger, FormControl } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { clone } from '../../../web3/common.js';\r\n\r\nclass GammaOptionsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onChangeStartBase(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.base.start = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIsCall(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.isCall = newValue === 'C';\r\n    subpos.service.isCall = newValue === 'C';\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeQuantity(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.quantity = Number(newValue);\r\n    subpos.service.quantity = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeStrike(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.strike = Number(newValue);\r\n    subpos.service.strike = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeDaysToExpiry(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.daysToExpiry = Number(newValue);\r\n    subpos.service.daysToExpiry = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  onChangeIV(newValue) {\r\n    let subpos = clone(this.props.subposition);\r\n    subpos.iv = Number(newValue);\r\n    subpos.service.iv = Number(newValue);\r\n    this.props.updateSubposition(this.props.index, subpos);\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Close this subposition\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={'Gamma Options'}\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special\r\n              simple\r\n              onClick={() => this.props.removeSubposition(this.props.index)}\r\n            >\r\n              <i className={\"fa fa-times\"} />\r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              Start BASE:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.base.start}\r\n                onChange={(event) => this.onChangeStartBase(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Call or Put:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"text\"\r\n                value={this.props.subposition.isCall ? 'C' : 'P'}\r\n                onChange={(event) => this.onChangeIsCall(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Quantity:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.quantity}\r\n                onChange={(event) => this.onChangeQuantity(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Strike:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.strike}\r\n                onChange={(event) => this.onChangeStrike(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              Days to expiry:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.daysToExpiry}\r\n                onChange={(event) => this.onChangeDaysToExpiry(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              IV [%]:\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormControl\r\n                placeholder={\"Amount\"}\r\n                type=\"number\"\r\n                min={0}\r\n                value={this.props.subposition.iv}\r\n                onChange={(event) => this.onChangeIV(event.target.value)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          </div>\r\n        }\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default GammaOptionsCard;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport { \r\n  Tooltip, \r\n  OverlayTrigger,\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  FormControl\r\n } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport AddSubpositionCard from \"./AddSubpositionCard.jsx\";\r\nimport UniswapV2Card from \"./subpositions/UniswapV2Card.jsx\";\r\nimport DYDXLongCard from \"./subpositions/DYDXLongCard.jsx\";\r\nimport DYDXShortCard from \"./subpositions/DYDXShortCard.jsx\";\r\nimport GammaOptionsCard from \"./subpositions/GammaOptionsCard.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { debalanceETH, debalanceDAI, clone } from '../../web3/common.js';\r\n\r\nclass PositionChartCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chartLoaded: false,\r\n      chartData: [Math.random() * 5, 2, 1],\r\n      customMin: 100,\r\n      customMax: 3000\r\n    };\r\n\r\n    this.addSubposition = this.addSubposition.bind(this);\r\n    this.updateSubposition = this.updateSubposition.bind(this);\r\n    this.removeSubposition = this.removeSubposition.bind(this);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    \r\n    if (this.userModelLoaded() && this.props.selectedPosition) {\r\n      // set customPosition if there is a change in props\r\n      if(prevProps.selectedPosition !== this.props.selectedPosition) {\r\n        console.log(\"setting customPosition\")\r\n        this.setState({\r\n          customPosition: clone(this.props.selectedPosition)\r\n        });\r\n      } else {\r\n        // refresh chart if customPosition is updated\r\n        if(prevState.customPosition !== this.state.customPosition) {\r\n          console.log(\"refreshing chart\")\r\n          this.refreshChart();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  userModelLoaded() {\r\n    let userModel = this.props.userModel;\r\n    return userModel && userModel.positions && Array.isArray(userModel.positions);\r\n  }\r\n\r\n  refreshChart() {\r\n    console.log(\"Refreshing chart data. Position: \");\r\n    let pos = this.state.customPosition;   \r\n    console.log(pos)\r\n    \r\n    // time \r\n    let daysSinceStart = (new Date() - new Date(pos.startDate)) / (1000 * 60 * 60 * 24);\r\n    \r\n    let chartWindow = this.getChartWindow(pos);\r\n    let currentPrice = 0;\r\n    let startPrice = chartWindow.step * 25;\r\n    let endPrice = chartWindow.right;\t\r\n    let step = chartWindow.step;\t\r\n    let aprsBASE = [], profitsBASE = [], profitsUNDER = [];\r\n    for(let i = startPrice; i < endPrice; i += step) {\r\n      let totalOutBASE = 0, totalOutUNDER = 0, startBASE = 0, startUNDER = 0;\r\n      // get totals out\r\n      for(let j = 0; j < pos.subpositions.length; j++) {\r\n        let subpos = pos.subpositions[j];\r\n\r\n        // get ins\r\n        startBASE += subpos.base.start;\r\n        startUNDER += subpos.under.start;\r\n\r\n        // get outs\r\n        let extraBASE = subpos.base.extra + subpos.under.extra * i;\r\n        totalOutBASE += subpos.service.getCurrentValue(i)[0] + extraBASE;\r\n\r\n        let extraUNDER = subpos.base.extra / i + subpos.under.extra;\r\n        totalOutUNDER += subpos.service.getCurrentValue(i)[1] + extraUNDER;\r\n\r\n        if(subpos.type === \"uniswap\") {\r\n          currentPrice = subpos.service.getPrice();\r\n        }\r\n      }\r\n\r\n      // debalance for max BASE\r\n      let debalancedBASE = debalanceDAI(i, startUNDER, 0, totalOutBASE);\r\n      //console.log(\"debalanced BASE @\" + i.toFixed(3) + \": \" + debalancedBASE[0].toFixed(4) + \" UNDER + \" + debalancedBASE[1].toFixed(4) + \" BASE\");\r\n      let profitBASE = debalancedBASE[1] - startBASE;\r\n      let hodlBASE = startBASE + startUNDER * i;\r\n      let aprTargetBASE = profitBASE / hodlBASE / daysSinceStart * 365 * 100;\r\n\r\n      // debalance for max UNDER\r\n      let debalancedUNDER = debalanceETH(i, startBASE, totalOutUNDER, 0);\r\n      //console.log(\"debalanced UNDER @\" + i.toFixed(3) + \": \" + debalancedUNDER[0].toFixed(4) + \" UNDER + \" + debalancedUNDER[1].toFixed(4) + \" BASE\");\r\n      let profitUNDER = debalancedUNDER[0] - startUNDER;\r\n      //let hodlUNDER = startBASE / i + startUNDER;\r\n      //let aprTargetUNDER = profitUNDER / hodlUNDER / daysSinceStart * 365 * 100;\r\n\r\n      aprsBASE.push({x: i, y: aprTargetBASE});\r\n      profitsBASE.push({x: i, y: profitBASE});\r\n      profitsUNDER.push({x: i, y: profitUNDER});\r\n    }\r\n\r\n    let rangeEdgesBASE = this.getRangePoints(profitsBASE);\r\n    let rangeEdgesUNDER = this.getRangePoints(profitsUNDER);\r\n\r\n\r\n    this.setState({\r\n      chartLoaded: true,\r\n      chartData1: aprsBASE,\r\n      chartData2: profitsBASE,\r\n      chartData3: profitsUNDER,\r\n      rangeEdgesBASE: rangeEdgesBASE, \r\n      rangeEdgesUNDER: rangeEdgesUNDER,\r\n      currentPrice: currentPrice,\r\n      customMin: chartWindow.left,\r\n      customMax: chartWindow.right\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns start, end prices for chart.\r\n   *\r\n   * @param {object}   pos       Position.\r\n   * @return {type} Return value description.\r\n   */\r\n  getChartWindow(pos) {\r\n    let pivot = pos.entryPrice;\r\n    let step;\r\n    if(pivot < 1) {\r\n      step = 0.001;\r\n    } else if(pivot < 10) {\r\n      step = 0.01;\r\n    } else if(pivot < 100) {\r\n      step = 0.1;\r\n    } else if(pivot < 1000) {\r\n      step = 1;\r\n    } else if(pivot < 10000) {\r\n      step = 10;\r\n    } else if(pivot < 100000) {\r\n      step = 100;\r\n    }\r\n\r\n    return {\r\n      left: Number(pivot / 3),\r\n      right: Number(pivot * 4),\r\n      step: step\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns points for range ploting (90%).\r\n   *\r\n   * @param {Array}   profits       Profit points on chart.\r\n   * @return {type} Return value description.\r\n   */\r\n  getRangePoints(profits) {\r\n    // find maximum profit\r\n    let maxProfit = -100000000000;\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(maxProfit < profits[i].y) {\r\n        maxProfit = profits[i].y;\r\n      }\r\n    }\r\n\r\n    console.log(\"maxProfit: \" + maxProfit)\r\n\r\n    let firstPoint = { x: profits[0].x, y: profits[0].y };\r\n    let leftPoint = firstPoint; \r\n    let rightPoint = null, prevPoint;\r\n    // find left and right range edge [90%]\r\n    for(let i = 0; i < profits.length; i++) {\r\n      if(leftPoint === firstPoint && profits[i].y >= maxProfit * 0.9) {\r\n        leftPoint = { x: profits[i].x, y: profits[i].y };\r\n      } \r\n      \r\n      if(leftPoint !== firstPoint && rightPoint === null && profits[i].y < maxProfit * 0.9) {\r\n        rightPoint = prevPoint;\r\n      }\r\n\r\n      prevPoint = { x: profits[i].x, y: profits[i].y };\r\n    }\r\n\r\n    if(rightPoint === null) {\r\n      rightPoint = prevPoint;\r\n    }\r\n\r\n    return [leftPoint, rightPoint]\r\n  }\r\n\r\n  getPerformanceChartOptions() {\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'line',\r\n        height: '600'\r\n      },\r\n      title: {\r\n        text: 'APR for position: ' + (this.state.customPosition != null ? this.state.customPosition.name : 'unknown')\r\n      },\r\n      xAxis: {\r\n        min: this.state.customMin,\r\n        max: this.state.customMax,\r\n        plotLines: [{\r\n          color: '#3D3D3D',\r\n          width: 2,\r\n          value: this.state.currentPrice ? this.state.currentPrice : 0,\r\n          label: {\r\n            text: \"Current price\"\r\n          }\r\n        }],\r\n        plotBands: [\r\n          {\r\n            from: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[0].x : 0,\r\n            to: this.state.rangeEdgesUNDER ? this.state.rangeEdgesUNDER[1].x : 0,\r\n            color: 'rgba(165, 244, 151, 0.4)',\r\n            label: {\r\n                text: '90% UNDER',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          },\r\n          { \r\n            from: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[0].x : 0,\r\n            to: this.state.rangeEdgesBASE ? this.state.rangeEdgesBASE[1].x : 0,\r\n            color: 'rgba(242, 240, 150, 0.4)',\r\n            label: {\r\n                text: '90% BASE',\r\n                style: {\r\n                    color: '#606060'\r\n                }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      yAxis: [\r\n        {\r\n          title: {\r\n            text: 'APR [%]'\r\n          },\r\n          min: -100,\r\n          plotBands: [\r\n            {\r\n              from: 0,\r\n              to: -10000000000,\r\n              color: 'rgba(255, 33, 33, 0.06)',\r\n              label: {\r\n                  text: 'Red Zone',\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [BASE]'\r\n          },\r\n          opposite: true\r\n        },\r\n        {\r\n          title: {\r\n            text: 'Profit [UNDER]'\r\n          },\r\n          opposite: true\r\n        }\r\n      ],\r\n      series: [\r\n        { \r\n          name: \"APR [%] (BASE or UNDER)\", \r\n          data: this.state.chartData1,\r\n          tooltip: {\r\n            valueSuffix: '%'\r\n          },\r\n          turboThreshold: 10000\r\n        },\r\n        { \r\n          name: \"Profit [BASE]\", \r\n          data: this.state.chartData2,\r\n          yAxis: 1,\r\n          tooltip: {\r\n            valueSuffix: ' BASE' // todo\r\n          },\r\n          turboThreshold: 10000\r\n        },\r\n        { \r\n          name: \"Profit [UNDER]\", \r\n          data: this.state.chartData3,\r\n          yAxis: 2,\r\n          tooltip: {\r\n            valueSuffix: ' UNDER' // todo\r\n          },\r\n          turboThreshold: 10000\r\n        }\r\n      ],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  async addSubposition(type) {\r\n    let newSubpos;\r\n    if(type === 'uniswap') {\r\n      newSubpos = {\r\n        type: type,\r\n        marketAddress: \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\r\n        base: {\r\n          start: 1800,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        liq: {\r\n          start: 30.67,\r\n          extra: 0\r\n        },\r\n      }\r\n    } else if(type === 'dydx-long') {\r\n      newSubpos = {\r\n        type: \"dydx-long\",\r\n        base: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 1,\r\n          extra: 0\r\n        },\r\n        borrowedBASE: 2700, \r\n        boughtUNDER: 1, \r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'dydx-short') {\r\n      newSubpos = {\r\n        type: \"dydx-short\",\r\n        base: {\r\n          start: 2700,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        borrowedUNDER: 1,\r\n        boughtBASE: 2700,\r\n        openingPrice: 2700\r\n      }\r\n    } else if(type === 'option') {\r\n      newSubpos = {\r\n        type: type,\r\n        base: {\r\n          start: 183,\r\n          extra: 0\r\n        },\r\n        under: {\r\n          start: 0,\r\n          extra: 0\r\n        },\r\n        isCall: true, \r\n        isLong: true, \r\n        quantity: 1, \r\n        strike: 3200,\r\n        daysToExpiry: 26,\r\n        iv: 86\r\n      }\r\n    }\r\n    await this.props.addService(this.state.customPosition, newSubpos);\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions.push(newSubpos);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  updateSubposition(index, subpos) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions[index] = subpos;\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  removeSubposition(index) {\r\n    let updatedPosition = clone(this.state.customPosition);\r\n    updatedPosition.subpositions.splice(index, 1);\r\n    this.setState({\r\n      customPosition: updatedPosition\r\n    });\r\n  }\r\n\r\n  displayCard(subpos, index) {\r\n\r\n    if(subpos.type === 'uniswap') {\r\n      return (\r\n        <UniswapV2Card\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-long') {\r\n      return (\r\n        <DYDXLongCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'dydx-short') {\r\n      return (\r\n        <DYDXShortCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    } else if(subpos.type === 'option') {\r\n      return (\r\n        <GammaOptionsCard\r\n          index={index}\r\n          subposition={subpos}\r\n          updateSubposition={this.updateSubposition}\r\n          removeSubposition={this.removeSubposition}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  getSubpositionCards() {\r\n    if(this.state.customPosition) {\r\n      return this.state.customPosition.subpositions.map((subpos, index) => {\r\n        return (\r\n          <Col md={4}>\r\n            {this.displayCard(subpos, index)}\r\n          </Col>\r\n        )\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <Card\r\n        title=\"How does my position looks like?\"\r\n        //category=\"24 Hours performance\"\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              special // for share button: fa fa-share-alt\r\n              //speciallarge \r\n              //pullRight\r\n              simple\r\n              >\r\n              <i className={\"fa fa-question-circle\"} /> Help \r\n            </Button> \r\n          </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div className=\"main-content\">\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col md={12}>\r\n                <HighchartsReact\r\n                  highcharts={Highcharts}\r\n                  options={this.getPerformanceChartOptions()}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={1}>\r\n                Min X:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Min X\"}\r\n                  type=\"number\"\r\n                  name=\"customMin\"\r\n                  min={0}\r\n                  value={this.state.customMin}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMin: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={3}>\r\n              </Col>\r\n              <Col md={1}>\r\n                Max X:\r\n              </Col>\r\n              <Col md={2}>\r\n                <FormControl\r\n                  placeholder={\"Max X\"}\r\n                  type=\"number\"\r\n                  name=\"customMax\"\r\n                  min={0}\r\n                  value={this.state.customMax}\r\n                  onChange={event => {\r\n                    this.setState({\r\n                      customMax: Number(event.target.value)\r\n                    });\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col md={3}>\r\n              </Col>\r\n              {this.getSubpositionCards()}\r\n              <Col md={4}>\r\n                <AddSubpositionCard\r\n                  types={['uniswap', 'dydx-long', 'dydx-short', 'option']}\r\n                  addSubposition={this.addSubposition}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PositionChartCard;","/*jshint esversion: 6 */\r\n\r\nexport default class CurrencyPair {\r\n  constructor(base, counter) {\r\n    this.base = base;\r\n    this.counter = counter;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\n\r\nexport default class Transaction {\r\n  constructor(isTrade, isBuy, pair, baseAmount, counterAmount, time, comment) {\r\n    this.isTrade = isTrade; // trade or funding\r\n    this.isBuy = isBuy; // buy or sell\r\n    this.pair = pair;\r\n    this.baseAmount = baseAmount;\r\n    this.counterAmount = counterAmount;\r\n    this.time = time;\r\n    this.comment = comment;\r\n  }\r\n\r\n  getPrice() {\r\n    if(this.baseAmount > 0) {\r\n      return this.counterAmount / this.baseAmount; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getProfit(resModel, denomination) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n    let profit = this.baseAmount * (priceNow - priceThen) * (this.isBuy ? 1 : -1);\r\n\r\n    if(this.pair.counter !== denomination) {\r\n      let lastPrice = resModel.getLastPrice(this.pair.counter, denomination);\r\n      profit = profit * lastPrice;\r\n    }\r\n\r\n    return profit;\r\n  }\r\n\r\n  getProfitPercent(resModel) {\r\n    let priceThen = this.getPrice();\r\n    let priceNow = resModel.getLastPrice(this.pair.base, this.pair.counter);\r\n   \r\n    if(priceThen !== 0) {\r\n      return (priceNow - priceThen) / priceThen * 100 * (this.isBuy ? 1 : -1);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  toShortString() {\r\n\t\tlet base = \"\";\r\n\t\tif(this.isTrade) {\r\n      let tradeType = this.isBuy ? \"buy\" : \"sell\";\r\n      base += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code + \" @ \" ;\r\n      base += formatUtils.formatNumber(this.getPrice(), 6)+ this.pair.counter.code;\r\n    } else {\r\n      let tradeType = this.isBuy ? \"deposit\" : \"withdrawal\";\r\n\t\t\tbase += tradeType + \" \" + formatUtils.formatNumber(this.baseAmount, 2) + this.pair.base.code;\r\n\t\t}\r\n\t\t\r\n\t\treturn base;\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport { formatUtils } from '../../utils/FormatUtils';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass InsightsCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTradingProfit = this.getTradingProfit.bind(this);\r\n  }\r\n\r\n  getTradingProfit(props) {\r\n    let totalProfit = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (tx.isTrade) {\r\n        totalProfit += tx.getProfit(props.resModel, props.resModel.usd);\r\n      }\r\n    }\r\n\r\n    return totalProfit;\r\n  }\r\n\r\n  getTotalFundings(props) {\r\n    // sum all deposits, and withdrawals on their transaction date\r\n    let totalDeposits = 0, totalWithdrawals = 0;\r\n    for (let tx of props.userModel.transactions) {\r\n      if (!tx.isTrade) {\r\n        let lastPrice = props.resModel.getPastPrice(tx.pair.base, props.resModel.usd, tx.time);\r\n        if (tx.isBuy) {\r\n          totalDeposits += tx.baseAmount * lastPrice;\r\n        } else {\r\n          totalWithdrawals += tx.baseAmount * lastPrice;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalDeposits: totalDeposits,\r\n      totalWithdrawals: totalWithdrawals\r\n    }\r\n  }\r\n\r\n  getExposureToCryptoPercentage(props, currentPortfolio, totalBalance) {\r\n    let totalCryptoBalance = currentPortfolio.getTotalCryptoBalance(props.resModel, props.resModel.usd);\r\n    return totalCryptoBalance / totalBalance * 100;\r\n  }\r\n\r\n  toShortFormatStyled(value) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    let style1 = \"font-\" + (value >= 0 ? \"green\" : \"red\" );\r\n    style1 = Math.abs(value) < 0.001 ? \"\" : style1;\r\n    return (\r\n      <div className={style1}>\r\n        {formatUtils.toShortFormat(value)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toDecimalFormatStyled(value, addon) {\r\n    value = isNaN(value) ? 0 : value;\r\n    value = Math.abs(value) < 0.0001 ? 0 : value;\r\n    return (\r\n      <div>\r\n        {formatUtils.formatNumber(value, 2) + addon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    let tradingProfit = this.getTradingProfit(this.props);\r\n    let fundings = this.getTotalFundings(this.props);\r\n    let totalProfit = totalBalance - fundings.totalDeposits + fundings.totalWithdrawals;\r\n    let holdingProfit = totalProfit - tradingProfit;\r\n    let tradeCount = this.props.userModel.portfolios.slice(-1)[0].tradeCount;\r\n    let exposureToCrypto = this.getExposureToCryptoPercentage(this.props, currentPortfolio, totalBalance);\r\n\r\n    const tooltipHelpText = <Tooltip id=\"edit_tooltip\">\r\n      Hodling and trading profits are 2 components of the Total profit you made since you deposited your first currency. <br/><br/>\r\n      Trading profit is profit you made from trading, and includes all your trades. Go to Trades page to see more details on trades. <br/><br/>\r\n      Hodling profit is profit you made by just hodling your currencies, without trading. It's calculated by subtracting trading profit from total profit.\r\n    </Tooltip>; \r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category='All time'\r\n        rightSection={\r\n          <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText}>\r\n            <Button\r\n            bsStyle=\"default\"\r\n            special // for share button: fa fa-share-alt\r\n            //speciallarge \r\n            //pullRight\r\n            simple\r\n          >\r\n            <i className={\"fa fa-question-circle\"} /> Help\r\n          </Button> \r\n        </OverlayTrigger>\r\n        }\r\n        content={\r\n          <div>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"table-responsive\">\r\n                <h5>How do I make profit?</h5>\r\n                <table className=\"table table-hover\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>by hodling</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(holdingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(holdingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>by trading</td>\r\n                      <td className=\"text-right\">{this.toDecimalFormatStyled(tradingProfit / totalProfit * 100, '%')}</td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td className=\"text-right\">{this.toShortFormatStyled(totalProfit)}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive\">\r\n              <h5>What are my key insights?</h5>\r\n              <table className=\"table table-hover\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Average profit per trade</td>\r\n                    <td className=\"text-right\">{this.toShortFormatStyled(tradingProfit / tradeCount)}</td>\r\n                  </tr>\r\n                  {/*<tr>\r\n                    <td>Most profitable pair</td>\r\n                    <td className=\"text-right\">ETH/USD</td>\r\n                  </tr>*/}\r\n                  <tr>\r\n                    <td>Withdrawn</td>\r\n                    <td className=\"text-right\">{formatUtils.toShortFormat(fundings.totalWithdrawals)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Exposure to crypto</td>\r\n                    <td className=\"text-right\">{this.toDecimalFormatStyled(exposureToCrypto, '%')}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n          }\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default InsightsCard;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass HelpCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n      {this.props.isHelpPanelShown ? (\r\n        <Card\r\n          title=\"Getting started\"\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={5} md={3} sm={0} xs={0}>\r\n                  <p>Welcome to Forkfolio app, a private-by-design crypto portfolio manager you \r\n                    can use to watch live crypto prices, track your trades, and get insights \r\n                    into your trading performance. </p>\r\n                  <p>If you haven't seen Forkfolio in action, visit <a href=\"https://forkfol.io/demo/\">demo app</a> loaded with public portfolio \r\n                    that showcases all features, or click on a play button to watch a short \r\n                    introductory video.</p>\r\n                  <h4 class=\"help-card-title\">Quick start</h4> \r\n                  <p class=\"help-card-paragraph\">Your portfolio is like a bank account - first, you need to deposit tokens to \r\n                    your portfolio to be able to trade them for another one. </p>\r\n                  <Button\r\n                    danger\r\n                    bsStyle=\"danger\"\r\n                    fill\r\n                    wd                    \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    Add Your First Deposit Now\r\n                  </Button>\r\n                </Col>\r\n                <Col lg={7} md={9} sm={12} xs={12} >\r\n                  <iframe title=\"Getting started with ForkFolio\" width=\"600\" height=\"370\" src=\"https://www.useloom.com/embed/87407d8535bd43b7b5c8a67da8c99d77\" frameBorder=\"0\" webkitallowfullscreen mozallowfullscreen allowFullScreen></iframe>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col md={2} mdOffset={11}>\r\n                <Button\r\n                  bsStyle=\"default\"\r\n                  fill\r\n                  onClick={() => this.props.hideHelpPanel()}\r\n                >\r\n                  Close\r\n                </Button>\r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        /> ) : (\"\") }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelpCard;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"react-select/dist/react-select.css\";\r\n\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Tab,\r\n  Tabs\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass CommonFundingDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTabSelect = this.handleTabSelect.bind(this);\r\n  }\r\n\r\n  isValidAmount(value) {\r\n    let isValidNumber = this.isValidNumber(value);\r\n    isValidNumber ? this.setState({ amountError: null }) : this.setState({\r\n      amountError: (\r\n        <small className=\"text-danger\">\r\n          Please enter a positive number.\r\n        </small>)\r\n      });\r\n    return isValidNumber;\r\n  }\r\n\r\n  isValidCurrency(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      currencyError: (\r\n        <small className=\"text-danger\">\r\n          Please select currency.\r\n        </small>)\r\n    })\r\n      : this.setState({ currencyError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  isValidDate(value) {\r\n    let isInvalid = value == null;\r\n    isInvalid ? this.setState({\r\n      dateError: (\r\n        <small className=\"text-danger\">\r\n          Please select date.\r\n        </small>)\r\n    })\r\n      : this.setState({ dateError: null });\r\n    return !isInvalid;\r\n  }\r\n\r\n  getDepositCurrencies() {\r\n    const currencies = [];\r\n    for (let c of this.props.resModel.dailyTickers.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  getWithdrawalCurrencies() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const c of currentPortfolio.balances.keys()) {\r\n      currencies.push({ value: c, label: c.code });\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n\r\n  isValidNumber(strValue) {\r\n    let numValue = parseFloat(strValue);\r\n    return !isNaN(numValue) && numValue >=0;\r\n  }\r\n\r\n  isEnabledDate(current) {\r\n    // between 2009-01-01 and now\r\n    return current.isAfter(new Date(2008, 11, 31)) && current.isBefore(Datetime.moment());\r\n  };\r\n\r\n  getBuySellFormGroup(name, placeholder) {\r\n    this.selected = name;\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        {name}\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder={placeholder}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          min={0}\r\n          value={this.state.amount}\r\n          onChange={event => {\r\n            this.setState({\r\n              amount: event.target.value\r\n            });\r\n            this.isValidAmount(event.target.value);\r\n          }}\r\n        />\r\n        {this.state.amountError}\r\n      </Col>\r\n      <Col sm={3}>\r\n        <Select\r\n          placeholder=\"Currency\"\r\n          name=\"currency\"\r\n          value={this.state.currency}\r\n          options={this.state.currencies}\r\n          onChange={value => {\r\n            this.setState({ currency: value });\r\n            this.isValidCurrency(value);\r\n          }}\r\n        />\r\n        {this.state.currencyError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getDateFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalNumber\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Date\r\n      </Col>\r\n      <Col sm={5}>\r\n        <Datetime\r\n          isValidDate={this.isEnabledDate}\r\n          dateFormat={'YYYY-MM-DD'}\r\n          timeFormat={false}\r\n          closeOnSelect={true}\r\n          inputProps={{ placeholder: \"Click to select a date\" }}\r\n          value={this.state.date}\r\n          onChange={event => {\r\n            this.setState({ date: (typeof event === \"string\") ? null : event.toDate() });\r\n            this.isValidDate((typeof event === \"string\") ? null : event.toDate());\r\n          }}\r\n        />\r\n        {this.state.dateError}\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  getCommentFormGroup() {\r\n    return (\r\n      <FormGroup controlId=\"formHorizontalURL\">\r\n      <Col componentClass={ControlLabel} sm={3} smOffset={0}>\r\n        Comment\r\n      </Col>\r\n      <Col sm={5}>\r\n        <FormControl\r\n          placeholder=\"What's going on?\"\r\n          type=\"text\"\r\n          name=\"comment\"\r\n          value={this.state.comment !== \"null\" ? this.state.comment : \"\"}\r\n          onChange={event => {\r\n            this.setState({ comment: event.target.value });\r\n          }}\r\n        />\r\n      </Col>\r\n    </FormGroup>\r\n    );\r\n  }\r\n\r\n  handleTabSelect(key) {\r\n    this.setState({\r\n      isDeposit: key === \"deposit\",\r\n      currencies: key === \"deposit\" ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      currency: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{this.state.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Tabs\r\n                    activeKey={this.state.isDeposit ? \"deposit\" : \"withdrawal\"}\r\n                    onSelect={this.handleTabSelect}\r\n                    id=\"controlled-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Deposit\", \"Deposit amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"withdrawal\" title=\"Withdrawal\">\r\n                      <Form horizontal> \r\n                        {this.getBuySellFormGroup(\"Withdrawal\", \"Withdrawal amount\")}\r\n                        {this.getDateFormGroup()}\r\n                        {this.getCommentFormGroup()}\r\n                      </Form>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={/*() => */this.handleSaveButtonClick.bind(this)}\r\n                  >\r\n                    {this.state.buttonText}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonFundingDialog;\r\n","import \"react-select/dist/react-select.css\";\r\n\r\nimport CurrencyPair from \"../../model/CurrencyPair\"\r\nimport Transaction from \"../../model/Transaction\"\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass AddFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState(props.isInitialDeposit);\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/addFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/addFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*this.setState(this.getInitialState());\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/addFunding');\r\n    }*/\r\n  }\r\n\r\n  getInitialState(isInitialDeposit) {\r\n    return {\r\n      title: \"Add funding\",\r\n      buttonText: \"Add\",\r\n      isDeposit: true,\r\n      amount: \"\",\r\n      amountError: null,\r\n      currency: null,\r\n      currencyError: null,\r\n      date: new Date(),\r\n      dateError: null,\r\n      comment: isInitialDeposit == null ? \"\" : \"It's my first deposit\",\r\n      currencies: this.getDepositCurrencies()\r\n    }\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.addTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddFundingDialog;\r\n","/*jshint esversion: 6 */\r\n//import { resModel } from \"./init/ResModelInit.js\";\r\n\r\nexport default class Portfolio {\r\n    constructor(previous, genesisTx) {\r\n      this.previous = previous;\r\n      this.genesisTx = genesisTx;\r\n      this.balances = new Map();\r\n      this.tradeCount = this.calculateTradeCount();\r\n\r\n      this.calculateCurrencyBalances();\r\n    }\r\n\r\n    calculateTradeCount() {\r\n        let count = this.previous != null ? this.previous.tradeCount : 0;\r\n        if(this.genesisTx != null && this.genesisTx.isTrade) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    calculateCurrencyBalances() {\r\n        if(this.previous !== null) {\r\n            this.balances = new Map(this.previous.balances);\r\n        }\r\n        if(this.genesisTx !== null) {\r\n            // add usd to balances only if not funding\r\n            let isNotFunding = this.genesisTx.pair.counter.code !== 'USD' || \r\n            (this.genesisTx.pair.counter.code === 'USD' && this.genesisTx.isTrade);\r\n\r\n            // if no base and counter in map, add them first\r\n            if(this.balances.get(this.genesisTx.pair.base) === undefined) {\r\n                this.balances.set(this.genesisTx.pair.base, 0);\r\n            }\r\n            if(this.balances.get(this.genesisTx.pair.counter) === undefined) {\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, 0);\r\n                }\r\n            }\r\n\r\n            // then do the calculation\r\n            if(this.genesisTx.isBuy) {\r\n                //  add base and subtract counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) + this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) - this.genesisTx.counterAmount);\r\n                }\r\n            } else {\r\n                //  subtract base and add counter\r\n                this.balances.set(this.genesisTx.pair.base, this.balances.get(this.genesisTx.pair.base) - this.genesisTx.baseAmount);\r\n                if(isNotFunding) {\r\n                    this.balances.set(this.genesisTx.pair.counter, this.balances.get(this.genesisTx.pair.counter) + this.genesisTx.counterAmount);\r\n                }\r\n            }            \r\n        }\r\n    }\r\n\r\n    sortBalances(resModel) {\r\n        this.balances = new Map([...this.balances.entries()].sort(\r\n            (a, b) => this.getCurrencyBalance(resModel, b[0], resModel.usd) - this.getCurrencyBalance(resModel, a[0], resModel.usd)            \r\n        ));\r\n    }\r\n\r\n    getCurrencyBalance(resModel, currency, denomination) {\r\n        let priceInDenomination = 1;\r\n        if(currency !== denomination) {\r\n            let lastPrice = resModel.getLastPrice(currency, denomination);\r\n            if(lastPrice !== null) {\r\n                priceInDenomination = lastPrice;\r\n            }\r\n        }\r\n\r\n        return this.balances.get(currency) * priceInDenomination;\r\n    }\r\n\r\n    getTotalBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    getTotalCryptoBalance(resModel, denomination) {\r\n        let totalBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            if(!k.isFiat) {\r\n                totalBalance += this.getCurrencyBalance(resModel, k, denomination);\r\n            }\r\n        }\r\n\r\n        return totalBalance;\r\n    }\r\n\r\n    // returns balance of the currency on a date\r\n    getPastCurrencyBalance(currency, date) {\r\n        let currencyBalance = 0;\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return currencyBalance;\r\n    }\r\n\r\n    // returns total balance of portfolio in past for denominated\r\n    getPastTotalBalance(resModel, date, denomination) {\r\n        let totalPastBalance = 0;\r\n        for (const k of this.balances.keys()) {\r\n            let pastPrice = resModel.getPastPrice(k, denomination, date);\r\n            totalPastBalance += pastPrice * this.getPastCurrencyBalance(k, date);\r\n        }\r\n\r\n        return totalPastBalance;\r\n\r\n        /*\r\n        if(this.genesisTx !== null) {\r\n            // if portfolio is created before timepoint, use it's balances\r\n            if(this.genesisTx.time.getTime() < date.getTime()) {\r\n                // if time point is after portfolio creation date, then use this portfolio's balance \r\n                currencyBalance = this.balances.get(currency);\r\n            } else {\r\n                let pastPortfolio = this.getPastPortfolio(date);\r\n                if(pastPortfolio !== null) {\r\n                    currencyBalance = pastPortfolio.balances.get(currency);\r\n                    if(currencyBalance == null) {\r\n                        currencyBalance = 0\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"Get past balance called for portfolio without genesis trade (first portfolio). Returning 0.\");\r\n        }\r\n\r\n        return totalPastBalance;*/\r\n    }\r\n\r\n    // returns portfolio was current at date\r\n    getPastPortfolio(date) {\r\n        let prev = this.previous;\r\n        while(prev !== null) {\r\n            if(prev.genesisTx == null || prev.genesisTx.time.getTime() < date.getTime()) {\r\n                return prev;\r\n            }\r\n            prev = prev.previous;\r\n        }\r\n\r\n        return null;\r\n    }\r\n  }","/*jshint esversion: 6 */\r\nimport moment from 'moment';\r\n\r\nclass DateUtils {\r\n  getDaysSince(sinceDate) {\r\n    return moment(new Date()).diff(moment(sinceDate), 'days');\r\n  }\r\n}\r\n\r\nexport let dateUtils = new DateUtils();","/*jshint esversion: 6 */\r\nimport Portfolio from './Portfolio';\r\nimport { dateUtils } from './../utils/DateUtils';\r\n\r\n\r\nexport default class UserModel {\r\n  constructor(transactions = [], positions = [], resModel) {\r\n    this.transactions = transactions;\r\n    this.positions = positions;\r\n    this.portfolios = [];\r\n\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  updateTransactions(transactions, resModel) {\r\n    this.transactions = transactions;\r\n    this.portfolios = [];\r\n    this.preparePortfolios(resModel);\r\n  }\r\n\r\n  preparePortfolios(resModel) {\r\n    //console.log(\"Preparing portfolios..\");\r\n    let empty = new Portfolio(null, null);\r\n    empty.sortBalances(resModel);\r\n    this.portfolios.push(empty);\r\n\r\n    let previous = empty;\r\n    for(let tx of this.transactions) {\r\n      let portfolio = new Portfolio(previous, tx);\r\n      portfolio.sortBalances(resModel);\r\n      this.portfolios.push(portfolio);\r\n      previous = portfolio;\r\n    } \r\n  }\r\n\r\n  // returns all portfolios created after date\r\n  getPortfoliosSince(date) {\r\n    let selected = [];\r\n    for(let p of this.portfolios) {\r\n      if(p.genesisTx !== null && p.genesisTx.isTrade) {\r\n        if(p.genesisTx.time.getTime() > date.getTime() || p === this.portfolios[this.portfolios.length - 1]) {\r\n          selected.push(p);\r\n        }\r\n      }\r\n    }\r\n\r\n    // always add the one before the first one\r\n    if(selected.length > 0) {\r\n      selected.unshift(selected[0].previous);\r\n    }\r\n\r\n    return selected;\r\n  }\r\n\r\n  getDaysSinceFirstTx() {\r\n    if(this.transactions.length > 0) {\r\n      let firstDate = new Date(this.transactions[0].time);\r\n      return dateUtils.getDaysSince(firstDate);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","import UserModel from \"../UserModel\"\r\nimport ResModel from \"../ResModel\"\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nexport var resModel = new ResModel();\r\nexport let userModel = new UserModel([], resModel);\r\n\r\n\r\nexport const rangeSelectorModel = {\r\n    inputPosition: {\r\n        align: 'left',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buttonPosition: {\r\n        align: 'right',\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    //selected: 2,\r\n    buttons: [ {\r\n        type: 'day',\r\n        count: 7,\r\n        text: '1w',\r\n        days: 7,\r\n        userFriendlyText: 'Last 7 days',\r\n    },{\r\n        type: 'month',\r\n        count: 1,\r\n        text: '1m',\r\n        days: 30,\r\n        userFriendlyText: 'Last 30 days',\r\n    }, {\r\n        type: 'month',\r\n        count: 3,\r\n        text: '3m',\r\n        days: 90,\r\n        userFriendlyText: 'Last 3 months',\r\n    }, {\r\n        type: 'ytd',\r\n        text: 'YTD',\r\n        days: dateUtils.getDaysSince(new Date(new Date().getFullYear(), 0, 0)),\r\n        userFriendlyText: 'Year-to-date',\r\n    }, {\r\n        type: 'year',\r\n        count: 1,\r\n        text: '1y',\r\n        days: 365,\r\n        userFriendlyText: 'Last year',\r\n    }, {\r\n        type: 'all',\r\n        text: 'All',\r\n        userFriendlyText: 'All time',\r\n    }]\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class ResModel {\r\n  constructor() {\r\n    this.usd = null;\r\n    this.dailyTickers = new Map();\r\n    this.recentTickers = new Map();\r\n  }\r\n\r\n  clone() {\r\n    let newModel = new ResModel();\r\n    newModel.usd = this.usd;\r\n    newModel.dailyTickers = this.dailyTickers;\r\n    newModel.recentTickers = this.recentTickers;\r\n    return newModel;\r\n  }\r\n\r\n  getLastPrice(base, counter) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      // counter usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null) {\r\n        return this.recentTickers.get(base.code).price;\r\n      }\r\n      // counter usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null) {\r\n        return this.dailyTickers.get(base).slice(-1)[0].price;\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      if(this.recentTickers.get(base.code) != null && \r\n          this.recentTickers.get(counter) != null) {\r\n        let baseUsd = this.recentTickers.get(base.code).price;\r\n        let counterUsd = this.recentTickers.get(counter.code).price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n\r\n      // counter not usd, there is no recent base\r\n      if(this.dailyTickers.get(base).slice(-1)[0] != null && \r\n          this.dailyTickers.get(counter).slice(-1)[0] != null) {\r\n        let baseUsd = this.dailyTickers.get(base).slice(-1)[0].price;\r\n        let counterUsd = this.dailyTickers.get(counter).slice(-1)[0].price;\r\n        return baseUsd / counterUsd;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getPercentChange24h(currency) {\r\n    if(this.recentTickers.get(currency) != null) {\r\n      return this.recentTickers.get(currency).percentChange24h;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  // returns the price of base denominated in counter on date\r\n  getPastPrice(base, counter, date) {\r\n    // if base and counter equal\r\n    if(base.code === counter.code) {\r\n      return 1;\r\n    }\r\n\r\n    if(counter === this.usd) {\r\n      for(let t of this.dailyTickers.get(base)) {\r\n        if(this.sameDay(date, t.time)) {\r\n          return t.price;\r\n        }\r\n      }\r\n    } else {\r\n      // counter not usd, there is recent base\r\n      // not implemented for now\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  findCurrencyByCode(code) {\r\n    for (const key of this.dailyTickers.keys()) {\r\n      if(key.code === code) {\r\n        return key;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport ReactTable from \"react-table\";\r\nimport Highstock from 'highcharts/highstock';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport InsightsCard from './common/InsightsCard';\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport HelpCard from './common/HelpCard';\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass PortfolioView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getPerformanceChartOptions = this.getPerformanceChartOptions.bind(this);\r\n    this.getTotalBalance = this.getTotalBalance.bind(this);\r\n    this.getTableColumnsDesktop = this.getTableColumnsDesktop.bind(this);\r\n    this.getTableColumnsMobile = this.getTableColumnsMobile.bind(this);\r\n    this.getTableData = this.getTableData.bind(this);\r\n    this.getLogoURL = this.getLogoURL.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  getTotalBalance(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.total[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  downsizeTokenLogo(originalLogoURL) {\r\n    return originalLogoURL.replace(\"64x64\", \"32x32\");\r\n  }\r\n\r\n  getTableColumnsDesktop() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"name\", maxWidth: 180, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 120,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"24h\", accessor: \"percentChange24h\", maxWidth: 80,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Balance\", accessor: \"balance\", maxWidth: 160, sortable: false, \r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Share\", accessor: \"share\", maxWidth: 80, \r\n      Footer: (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>100%</strong>{\" \"}\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value, 2) + \"%\"}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      { Header: \"Total\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getTableColumnsMobile() {\r\n    const tableColumns = [\r\n      { Header: \"Name\", accessor: \"code\", maxWidth: 100, \r\n      Cell: row => (\r\n        <span>\r\n          <img src={this.downsizeTokenLogo(row.value[0])} alt=\"\"></img> {row.value[1]}\r\n        </span>\r\n      )},\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 100,\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 4)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toGreenRedPercentStyle(row.value[1])}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }},\r\n      \r\n      { Header: \"Balance\", accessor: \"total\", minWidth: 120, maxWidth: 140, \r\n      Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>{\"$\" + formatUtils.formatNumber(this.getTotalBalance(rows), 2)}</strong>\r\n        </span>\r\n      ),\r\n      Cell: row => (\r\n        <div>\r\n          <span style={{ float: \"right\" }}>\r\n            {\"$\" + formatUtils.formatNumber(row.value[0], 2)}\r\n          </span><br/>\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.toShortFormat(row.value[1][0], 2).substr(1)}\r\n          </span>\r\n        </div>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }}\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  getLogoURL(currency) {\r\n    if(currency.meta == null) {\r\n        return \"fiat-logos/\" + (currency.isFiat ? currency.code.toLowerCase() : \"empty\") + \".png\";\r\n    }\r\n\r\n    return currency.meta.logo;\r\n  }\r\n\r\n  // gets table data for desktop and mobile\r\n  getTableData(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let totalBalance = currentPortfolio.getTotalBalance(props.resModel, props.resModel.usd);\r\n\r\n    const tableData = [];\r\n    for (let [k, v] of currentPortfolio.balances) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, k, props.resModel.usd);\r\n      let name = [this.getLogoURL(k), k.name];\r\n      let code = [this.getLogoURL(k), k.code];\r\n      let percentChange24h = props.resModel.getPercentChange24h(k.code);\r\n      let price = [props.resModel.getLastPrice(k, props.resModel.usd), percentChange24h];\r\n      let balance = [v, k.code];\r\n      let share = (currencyBalance / totalBalance * 100);\r\n      let total = [currencyBalance, balance];\r\n      tableData.push({\r\n        id: tableData.length, \r\n        name: name, \r\n        code: code, \r\n        price: price,\r\n        percentChange24h: percentChange24h,\r\n        balance: balance,\r\n        share: share,\r\n        total: total\r\n      });\r\n    }\r\n\r\n    return tableData;\r\n  }\r\n\r\n  getPerformanceChartOptions(props) {\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n\r\n    // prepare portfolio performance chart\r\n    const series = [];\r\n    for (const currency of currentPortfolio.balances.keys()) {\r\n      const serie = [];\r\n      for(let t of props.resModel.dailyTickers.get(currency)) {       \r\n          let balanceInDenominated = t.price * currentPortfolio.getPastCurrencyBalance(t.pair.base, t.time);\r\n          serie.push([t.time.getTime(), balanceInDenominated]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {\r\n        serie.slice(-1)[0][1] = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd)\r\n        series.push({name: currency.code, data: serie});\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      chart: {\r\n        type: 'area'\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      plotOptions: {\r\n        series: {\r\n          stacking: 'normal',\r\n          lineColor: '#666666',\r\n          lineWidth: 1,\r\n          marker: {\r\n              lineWidth: 1,\r\n              lineColor: '#666666'\r\n          }\r\n        }\r\n      },     \r\n      series: series,\r\n      rangeSelector: rangeSelectorModel,\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let assetCount = currentPortfolio.balances.size;\r\n    const showPagination = assetCount > 10;\r\n    const isMobile = window.innerWidth <= 992;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n        isInitialDeposit\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Balance sheet panel displays \r\n      all crypto and fiat currencies (coins) you own at this \r\n      moment. This is your portfolio. You can check live prices \r\n      of your currencies, total balance of a currency in USD, \r\n      and the total value in USD at the bottom. <br/><br/> \r\n      24H column displays a change in USD price in the last 24 hours.\r\n    </Tooltip>; \r\n    const tooltipHelpText2 = <Tooltip id=\"edit_tooltip\">\r\n      Portfolio history panel displays a chart of daily historical snapshots of your portfolio. \r\n      All changes to your portfolio are taken into account: trades, deposits and withdrawals. \r\n      <br/><br/> \r\n      Easily zoom in/out with predefined time periods, or use the slider on the bottom to fine tune.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <HelpCard \r\n                isHelpPanelShown={this.props.isHelpPanelShown}\r\n                hideHelpPanel={this.props.hideHelpPanel}\r\n                showAddFundingDialog={this.props.showAddFundingDialog}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              <Card\r\n                title=\"What's my balance sheet today?\"\r\n                category={assetCount + \" asset\" + (assetCount === 1 ? \"\" : \"s\")}\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.getTableData(this.props)}\r\n                    columns={isMobile ? this.getTableColumnsMobile(this.props) : this.getTableColumnsDesktop(this.props)}\r\n                    defaultPageSize={10}\r\n                    showPageSizeOptions={false}\r\n                    showPagination={showPagination}\r\n                    noDataText={formatUtils.getNoDataText('assets', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <InsightsCard\r\n                title=\"Portfolio insights\"\r\n                portfolio={this.props.userModel.portfolios.slice(-1)[0]}\r\n                resModel={this.props.resModel}\r\n                userModel={this.props.userModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What's my portfolio history?\"\r\n                //category=\"24 Hours performance\"\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText2}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={\r\n                  <HighchartsReact\r\n                    highcharts={Highstock}\r\n                    constructorType={'stockChart'}\r\n                    options={this.getPerformanceChartOptions(this.props)}\r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioView;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddTradeDialog from \"./dialogs/AddTradeDialog\";\r\nimport EditTradeDialog from \"./dialogs/EditTradeDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass TradesView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if (tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let pair = tx.pair.base.code + \"/\" + tx.pair.counter.code;\r\n        let type = tx.isBuy ? \"Buy\" : \"Sell\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        let price = [tx.getPrice(), tx.pair.counter.code];\r\n        let cost = [tx.counterAmount, tx.pair.counter.code];\r\n        let profitPercent = tx.getProfitPercent(props.resModel);\r\n        let profit = [tx.getProfit(props.resModel, props.resModel.usd), props.resModel.usd.code];\r\n        tableData.push([tx, date, pair, type, comment, volume, price, cost, profitPercent, profit]);\r\n      }\r\n    }\r\n\r\n    // second, map to state\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        pair: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        price: prop[6],\r\n        cost: prop[7],\r\n        profitpercentage: prop[8],\r\n        profit: prop[9],\r\n        actions: (\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditTradeDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTotalVolume(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.volume[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalPrice(rows) {\r\n    return this.getTotalCost(rows) / this.getTotalVolume(rows);\r\n  }\r\n\r\n  getTotalCost(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.cost[0] * (row.type === \"Buy\" ? 1 : -1);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getTotalProfitPercentage(rows) {\r\n    let pairStr = rows.data[0].pair.split('/');\r\n    let base = this.props.resModel.findCurrencyByCode(pairStr[0]);\r\n    let counter = this.props.resModel.findCurrencyByCode(pairStr[1]);\r\n    if(base !== null && counter !== null) {\r\n      let totalCost = this.getTotalCost(rows);\r\n      let totalCostInUsd = totalCost * this.props.resModel.getLastPrice(counter, this.props.resModel.usd);\r\n      let totalProfit = this.getTotalProfit(rows);\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      totalCostInUsd = totalCostInUsd * (isBuy ? 1 : -1);\r\n      // check eth/usd and rep/usd\r\n      return (totalProfit / Math.max(0, totalCostInUsd)) * 100; \r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getTotalProfit(rows) {\r\n    let total = 0;\r\n    for (let row of rows.data) {\r\n      total += row.profit[0];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  isOnePair(rows) {\r\n    for(let row of rows.data) {\r\n      if(row.pair !== rows.data[0].pair) {\r\n        return false;\r\n      }\r\n    }\r\n    return rows.data.length !== 0;\r\n  }\r\n\r\n  getPairFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return rows.data[0].pair;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTypeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return this.getTotalVolume(rows) >= 0 ? \"Buy\" : \"Sell\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getVolumeFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(Math.abs(this.getTotalVolume(rows)), 2) + \" \" + rows.data[0].volume[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getPriceFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalPrice(rows), 6) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getCostFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      let isBuy = this.getTypeFooter(rows) === \"Buy\";\r\n      return formatUtils.formatNumber(this.getTotalCost(rows) * (isBuy ? 1 : -1), 2) + \" \" + rows.data[0].cost[1];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getProfitPercentageFooter(rows) {\r\n    if(this.isOnePair(rows)) {\r\n      return formatUtils.formatNumber(this.getTotalProfitPercentage(rows), 2) + \"%\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Pair\", accessor: \"pair\", maxWidth: 100,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n        <span>\r\n          <strong>\r\n            {this.getPairFooter(rows)}\r\n          </strong>\r\n        </span>\r\n        )\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", maxWidth: 50,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1,\r\n        Footer: rows => (\r\n          <span>\r\n            <strong>\r\n              {this.getTypeFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", maxWidth: 300,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", maxWidth: 140, filterable: false,\r\n        Cell: row => (\r\n          <span style={{ float: \"right\" }}>\r\n            {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n          </span>\r\n        ),\r\n        sortMethod: (a, b) => { return b[0] - a[0]; \r\n        }, Footer: rows => (\r\n            <span style={{ float: \"right\" }}>\r\n              <strong>\r\n                {this.getVolumeFooter(rows)}\r\n              </strong>\r\n            </span>\r\n          )\r\n      },\r\n      { Header: \"Price\", accessor: \"price\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 6) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {this.getPriceFooter(rows)}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Cost\", accessor: \"cost\", maxWidth: 140, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getCostFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit [%]\", accessor: \"profitpercentage\", maxWidth: 80, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.toGreenRedPercentStyle(row.value)}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b - a;\r\n      }, Footer: rows => (\r\n        <span style={{ float: \"right\" }}>\r\n          <strong>\r\n            {this.getProfitPercentageFooter(rows)}\r\n          </strong>\r\n        </span>\r\n      )},\r\n      { Header: \"Profit\", accessor: \"profit\", maxWidth: 160, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }, Footer: rows => (\r\n          <span style={{ float: \"right\" }}>\r\n            <strong>\r\n              {formatUtils.formatNumber(this.getTotalProfit(rows), 2) + \" USD\"}\r\n            </strong>\r\n          </span>\r\n        )\r\n      },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 70, maxWidth: 70, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let tradeCount = currentPortfolio.tradeCount;\r\n\r\n    let addTradeDialog = (\r\n      <AddTradeDialog\r\n        isDialogShown={this.props.isAddTradeDialogShown}\r\n        hideDialog={this.props.hideAddTradeDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editTradeDialog = (\r\n      <EditTradeDialog\r\n        isDialogShown={this.props.isEditTradeDialogShown}\r\n        hideDialog={this.props.hideEditTradeDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Trades panel displays all your trades. A trade is when you exchange one currency for another. <br/><br/> \r\n      To add a trade, click on the Add trade button. To edit or remove a trade, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      PROFIT column will give you a trade's profit in USD for prices right now. There's also a total profit for all trades on the bottom. <br/><br/> \r\n      Trades can be sorted, and filtered in multiple ways. For example, to show all ETH/USD trades in 2018, enter ETH/USD in the PAIR filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent trades?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special   \r\n                    onClick={() => this.props.showAddTradeDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add trade\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                    <i className={\"fa fa-question-circle\"} /> Help \r\n                  </Button> \r\n                </OverlayTrigger>\r\n                </div>\r\n                }\r\n                category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}\r\n                    noDataText={formatUtils.getNoDataText('trades', this.props.userModel)}                    \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddTradeDialogShown ? addTradeDialog : \"\"}\r\n              {this.props.isEditTradeDialogShown ? editTradeDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TradesView;\r\n","import CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport CommonFundingDialog from \"./CommonFundingDialog\";\r\nimport ReactGA from 'react-ga';\r\n\r\nclass EditFundingDialog extends CommonFundingDialog {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Update funding\",\r\n      buttonText: \"Update\",\r\n      editedTransaction: props.editedTransaction,\r\n      isDeposit: props.editedTransaction.isBuy, \r\n      amount: props.editedTransaction.baseAmount.toString(),\r\n      amountError: null,\r\n      currency: this.getSelectObject(props.editedTransaction.pair.base),\r\n      currencyError: null,\r\n      currencies: props.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n      date: props.editedTransaction.time,\r\n      dateError: null,\r\n      comment: props.editedTransaction.comment\r\n    };\r\n\r\n    // track ga\r\n    console.log(\"Navigate to: \" + window.location.pathname + \"#/editFunding\");\r\n    ReactGA.modalview(window.location.pathname + '#/editFunding');\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    // old way, keeping it for now\r\n    /*if(nextProps.editedTransaction != null) {\r\n      this.setState({\r\n        editedTransaction: nextProps.editedTransaction,\r\n        isDeposit: nextProps.editedTransaction.isBuy, \r\n        amount: nextProps.editedTransaction.baseAmount.toString(),\r\n        amountError: null,\r\n        currency: this.getSelectObject(nextProps.editedTransaction.pair.base),\r\n        currencyError: null,\r\n        currencies: nextProps.editedTransaction.isBuy ? this.getDepositCurrencies() : this.getWithdrawalCurrencies(),\r\n        date: nextProps.editedTransaction.time,\r\n        dateError: null,\r\n        comment: nextProps.editedTransaction.comment\r\n      });\r\n    }\r\n\r\n    // track ga\r\n    if(nextProps.isDialogShown === true) {\r\n      ReactGA.modalview('/#/editFunding');\r\n    }*/\r\n  }\r\n\r\n  getSelectObject(currency) {\r\n    return { \r\n      value: currency, \r\n      label: currency.code\r\n    };\r\n  }\r\n\r\n  handleSaveButtonClick() {\r\n    console.log(\"Validating input..\");\r\n\r\n    if(this.isValidAmount(this.state.amount) &&\r\n       this.isValidCurrency(this.state.currency) &&\r\n       this.isValidDate(this.state.date)) {\r\n      console.log(\"All inputs valid. Saving funding..\"); \r\n\r\n      let pair = new CurrencyPair(this.state.currency.value, this.props.resModel.usd);\r\n      let tx = new Transaction(false, this.state.isDeposit, pair, parseFloat(this.state.amount), 0, this.state.date, this.state.comment);\r\n      this.props.updateTransaction(tx);\r\n      this.props.hideDialog();\r\n    }\r\n  }\r\n \r\n}\r\n\r\nexport default EditFundingDialog;\r\n","import React, { Component } from \"react\";\r\n// react component for creating dynamic tables\r\nimport ReactTable from \"react-table\";\r\nimport { Grid, Row, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport AddFundingDialog from \"./dialogs/AddFundingDialog\";\r\nimport EditFundingDialog from \"./dialogs/EditFundingDialog\";\r\nimport ConfirmRemoveTransactionDialog from \"./dialogs/ConfirmRemoveTransactionDialog\";\r\nimport { formatUtils } from './../utils/FormatUtils';\r\nimport ReactGA from 'react-ga';\r\n\r\nclass FundingView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.hideConfirmDialog = this.hideConfirmDialog.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.state = {\r\n      data: this.mapTradesToState(props),\r\n      isConfirmDialogShown: false,\r\n      removedTransaction: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n  \r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: this.mapTradesToState(nextProps)\r\n    });\r\n  }\r\n\r\n  mapTradesToState(props) {\r\n    // first get data from user and res model\r\n    const tableData = [];\r\n    let newestFirst = props.userModel.transactions.slice(0, props.userModel.transactions.length);\r\n    newestFirst.sort((a, b) => b.time.getTime() - a.time.getTime());\r\n    for (let tx of newestFirst) {\r\n      if(!tx.isTrade) {\r\n        let date = tx.time.toISOString().split('T')[0];\r\n        let name = tx.pair.base.name;\r\n        let type = tx.isBuy ? \"Deposit\" : \"Withdrawal\";\r\n        let comment = tx.comment === \"null\" ? \"\" : tx.comment;\r\n        let volume = [tx.baseAmount, tx.pair.base.code];\r\n        tableData.push([tx, date, name, type, comment, volume]);\r\n      }\r\n    }\r\n\r\n    return tableData.map((prop, key) => {\r\n      return {\r\n        id: prop[0],\r\n        date: prop[1],\r\n        name: prop[2],\r\n        type: prop[3],\r\n        comment: prop[4],\r\n        volume: prop[5],\r\n        actions: (\r\n          // we've added some custom button actions\r\n          <div className=\"actions-right\">\r\n            <Button\r\n              onClick={() => {\r\n                this.props.setEditedTransaction(this.state.data[key].id);\r\n                this.props.showEditFundingDialog();\r\n                return true;\r\n              }}\r\n              bsStyle=\"default\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-edit\" />\r\n            </Button>{\" \"}\r\n            <Button\r\n              onClick={() => {\r\n                this.setState({\r\n                  isConfirmDialogShown: true,\r\n                  removedTransaction: this.state.data[key].id\r\n                });\r\n                return true;\r\n              }}\r\n              bsStyle=\"danger\"\r\n              table\r\n              simple\r\n              icon\r\n            >\r\n              <i className=\"fa fa-times\" />\r\n            </Button>{\" \"}\r\n          </div>\r\n        )\r\n      };\r\n    })\r\n  }\r\n\r\n  getTableColumns() {\r\n    const tableColumns = [\r\n      { Header: \"Date\", accessor: \"date\", minWidth: 95, width: 160,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Name\", accessor: \"name\", minWidth: 120, width: 200,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Type\", accessor: \"type\", minWidth: 95, width: 120,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Comment\", accessor: \"comment\", minWidth: 100, width: 300, maxWidth: 500,\r\n        filterMethod: (filter, row) => row[filter.id].toLowerCase().indexOf(filter.value.toLowerCase()) !== -1\r\n      },\r\n      { Header: \"Volume\", accessor: \"volume\", minWidth: 120, width: 150, filterable: false,\r\n      Cell: row => (\r\n        <span style={{ float: \"right\" }}>\r\n          {formatUtils.formatNumber(row.value[0], 2) + \" \" + row.value[1]}\r\n        </span>\r\n      ),\r\n      sortMethod: (a, b) => {\r\n        return b[0] - a[0];\r\n      }\r\n    },\r\n      { Header: \"Actions\", accessor: \"actions\", minWidth: 80, maxWidth: 80, sortable: false, filterable: false }\r\n    ];\r\n\r\n    return tableColumns;\r\n  }\r\n\r\n  hideConfirmDialog() {\r\n    this.setState({\r\n      isConfirmDialogShown: false\r\n    });\r\n  }\r\n\r\n  removeTransaction() {\r\n    this.props.removeTransaction(this.state.removedTransaction);\r\n    this.hideConfirmDialog();\r\n  }\r\n\r\n  getNoDataText(name, userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    if(currentPortfolio.tradeCount === 0) {\r\n      // if there are no trades, and no fundings\r\n      if(userModel.transactions.length === 0) {\r\n        return (<span><p>Your portfolio is empty. To get started:</p>\r\n          <ol>\r\n            <li>click on the Add Funding button,</li>\r\n            <li>add your first deposit.</li>\r\n         </ol>\r\n         </span>);\r\n      } \r\n\r\n      return (<span>No {name} found</span>)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n    let fundingCount = this.props.userModel.transactions.length - currentPortfolio.tradeCount;\r\n\r\n    let addFundingDialog = (\r\n      <AddFundingDialog\r\n        isDialogShown={this.props.isAddFundingDialogShown}\r\n        hideDialog={this.props.hideAddFundingDialog}\r\n        addTransaction={this.props.addTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n\r\n    let editFundingDialog = (\r\n      <EditFundingDialog\r\n        isDialogShown={this.props.isEditFundingDialogShown}\r\n        hideDialog={this.props.hideEditFundingDialog}\r\n        editedTransaction={this.props.editedTransaction}\r\n        updateTransaction={this.props.updateTransaction}\r\n        userModel={this.props.userModel}\r\n        resModel={this.props.resModel}\r\n      />\r\n    );\r\n    \r\n    let confirmRemoveTransactionDialog = (\r\n      <ConfirmRemoveTransactionDialog\r\n        isDialogShown={this.state.isConfirmDialogShown}\r\n        hideDialog={this.hideConfirmDialog}\r\n        removedTransaction={this.state.removedTransaction}\r\n        removeTransaction={this.removeTransaction}\r\n      />\r\n    );\r\n\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Funding panel displays all your portfolio fundings: deposits and withdrawals. Deposit is when you add currency to your portfolio, and withdrawal is when you remove it. <br/><br/> \r\n      To add a funding, click on the Add funding button. To edit or remove a funding, click on the edit/remove icon found in ACTIONS column.<br/><br/> \r\n      Fundings can be sorted, and filtered in multiple ways. For example, to show all USD withdrawals in 2018, enter United States Dollar in the NAME filter, and 2018 in the DATE filter.\r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"What are my recent deposits and withdrawals?\"\r\n                rightSection={\r\n                  <div>\r\n                  <Button\r\n                    // was like this for without color\r\n                    //special\r\n                    //simple\r\n                    bsStyle=\"info\"\r\n                    fill\r\n                    special                   \r\n                    onClick={() => this.props.showAddFundingDialog()}\r\n                  >\r\n                    <i className={\"fa fa-plus\"} /> Add funding\r\n                  </Button>\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                    >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                  </div>\r\n                }\r\n                category={fundingCount + \" funding\" + (fundingCount === 1 ? \"\" : \"s\")}\r\n                content={\r\n                  <ReactTable\r\n                    className=\"-highlight\"\r\n                    data={this.state.data}\r\n                    filterable\r\n                    columns={this.getTableColumns()}\r\n                    defaultPageSize={10}                    \r\n                    noDataText={this.getNoDataText('deposits or withdrawals', this.props.userModel)} \r\n                  />\r\n                }\r\n              />\r\n              {this.props.isAddFundingDialogShown ? addFundingDialog : \"\"}\r\n              {this.props.isEditFundingDialogShown ? editFundingDialog : \"\"}\r\n              {this.state.isConfirmDialogShown ? confirmRemoveTransactionDialog : \"\"}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundingView;\r\n","import React, { Component } from \"react\";\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport Card from \"components/Card/Card.jsx\";\r\n\r\nclass PortfolioPie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartOptions: this.getPieOptions(props)\r\n    };\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n        chartOptions: this.getPieOptions(nextProps)\r\n    });\r\n  }\r\n\r\n  getPieOptions(props) {\r\n    let currentPortfolio = props.portfolio;\r\n\r\n    // prepare portfolio pie chart\r\n    const data = [];\r\n    for (let currency of currentPortfolio.balances.keys()) {\r\n      let currencyBalance = currentPortfolio.getCurrencyBalance(props.resModel, currency, props.resModel.usd);\r\n      data.push({name: currency.code, y: currencyBalance});\r\n    }\r\n\r\n    const pieOptions = {\r\n      chart: {\r\n        type: \"pie\",\r\n      },\r\n      title: {\r\n        text: null\r\n      },\r\n      series: [{\r\n        name: \"Allocation\",\r\n        data: data\r\n      }],\r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n    return pieOptions;\r\n  }\r\n   render() {\r\n     let tradeCount = this.props.portfolio.tradeCount;\r\n    return (\r\n      <Card\r\n        title={this.props.title}\r\n        category={tradeCount + \" trade\" + (tradeCount === 1 ? \"\" : \"s\")}\r\n        content={<HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={this.state.chartOptions}\r\n        />}\r\n        /*stats={\r\n          <div>\r\n            <i className=\"fa fa-clock-o\" /> Campaign sent 2 days ago\r\n          </div>\r\n        }*/\r\n      />          \r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioPie;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Highstock from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport PortfolioPie from './common/PortfolioPie'\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport { rangeSelectorModel } from \"../model/init/ResModelInit.js\";\r\nimport ReactGA from 'react-ga';\r\n\r\n\r\nclass PerformanceView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.rangeClickHandler = this.rangeClickHandler.bind(this);\r\n\r\n    let daysSince = props.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(props, daysSince);\r\n    this.state = {\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(props, portfolios.best, portfolios.current, portfolios.worst)\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    rangeSelectorModel.days = this.props.userModel.getDaysSinceFirstTx();;\r\n    rangeSelectorModel.userFriendlyText = \"All time\";\r\n\r\n    console.log(\"Navigate to: \" + window.location.pathname + window.location.hash);\r\n    ReactGA.pageview(window.location.pathname + window.location.hash);\r\n  }\r\n\r\n  // safely change state here\r\n  componentWillReceiveProps(nextProps) {\r\n    let daysSince = nextProps.userModel.getDaysSinceFirstTx();\r\n    let portfolios = this.getBestCurrentWorstPortfolio(nextProps, daysSince); \r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(nextProps, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  rangeClickHandler() {\r\n    let portfolios = this.getBestCurrentWorstPortfolio(this.props, rangeSelectorModel.days);\r\n    this.setState({\r\n      bestPortfolio: portfolios.best,\r\n      currentPortfolio: portfolios.current,\r\n      worstPortfolio: portfolios.worst,\r\n      performanceChartOptions: this.getPerformanceChartOptions(this.props, portfolios.best, portfolios.current, portfolios.worst)\r\n    });\r\n  }\r\n\r\n  getBestCurrentWorstPortfolio(props, days) {\r\n\r\n    // TODO: what's this\r\n    let since = new Date(2018,4,28);\r\n    since.setHours(2,0,0,0);\r\n    //console.log(since)\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null && \r\n      props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0] != null) {\r\n      since = props.resModel.dailyTickers.get(props.resModel.usd).slice(-days)[0].time;\r\n      //console.log(since)\r\n    }\r\n    //console.log(since)\r\n    let portfoliosSince = props.userModel.getPortfoliosSince(since);\r\n    //console.log(portfoliosSince);\r\n\r\n    let currentPortfolio = props.userModel.portfolios.slice(-1)[0];\r\n    let bestPortfolio = currentPortfolio, worstPortfolio = currentPortfolio;\r\n    for(let p of portfoliosSince) {\r\n      let totalBalance = p.getTotalBalance(props.resModel, props.resModel.usd);\r\n      // best \r\n      if(totalBalance >= bestPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        bestPortfolio = p;\r\n      }\r\n      // worst\r\n      if(totalBalance <= worstPortfolio.getTotalBalance(props.resModel, props.resModel.usd)) {\r\n        worstPortfolio = p;\r\n      }\r\n    }\r\n\r\n    // TODO: add future fundings here\r\n\r\n    return {\r\n      best: bestPortfolio, \r\n      current: currentPortfolio,\r\n      worst: worstPortfolio\r\n    };\r\n  }\r\n\r\n  getPortfolioSeries(props, portfolio) {\r\n    const serie = [];\r\n    // take usd tickers as template for dates\r\n    if(props.resModel.dailyTickers.get(props.resModel.usd) != null) {\r\n      for(let t of props.resModel.dailyTickers.get(props.resModel.usd)) {\r\n        let totalPastBalance = portfolio.getPastTotalBalance(props.resModel, t.time, props.resModel.usd);\r\n        serie.push([t.time.getTime(), totalPastBalance]);\r\n      }\r\n\r\n      // take the last price and update it with recent price\r\n      if(serie.slice(-1)[0] != null) {     \r\n        serie.slice(-1)[0][1] = portfolio.getTotalBalance(props.resModel, props.resModel.usd)\r\n      }\r\n    }\r\n\r\n    return serie;\r\n  }\r\n\r\n  getPerformanceChartOptions(props, best, current, worst) {   \r\n    let series = [];\r\n    series.push({name: \"Best portfolio\", data: this.getPortfolioSeries(props, best)});\r\n    series.push({name: \"Current portfolio\", data: this.getPortfolioSeries(props, current)});    \r\n    series.push({name: \"Worst portfolio\", data: this.getPortfolioSeries(props, worst)});\r\n\r\n    var externalCaller = this.rangeClickHandler;\r\n    for(let i = 0; i < rangeSelectorModel.buttons.length; i++) {\r\n      rangeSelectorModel.buttons[i].events = {\r\n        click: function() {\r\n          rangeSelectorModel.days = rangeSelectorModel.buttons[i].days;\r\n          rangeSelectorModel.userFriendlyText = rangeSelectorModel.buttons[i].userFriendlyText;\r\n          externalCaller.call();\r\n        }\r\n      }\r\n    }\r\n\r\n    const performanceOptions = {\r\n      title: {\r\n        text: null\r\n      },\r\n      rangeSelector: rangeSelectorModel,\r\n      series: series, \r\n      tooltip: {\r\n        shared: true, // this doesn't work\r\n        valueSuffix: ' USD',\r\n        valueDecimals: 2\r\n      },\r\n      credits: {\r\n        enabled: false\r\n      },\r\n    }\r\n\r\n    return performanceOptions;\r\n  }\r\n\r\n  render() {\r\n    const tooltipHelpText1 = <Tooltip id=\"edit_tooltip\">\r\n      Performance panel displays a chart of best, worst and current portfolio in a selected time period. Click on a zoom buttons to select time period. <br/><br/> \r\n      Chart is useful to evaluate your trading performance in selected time period. The closer your current is to the best portfolio, the better. <br/><br/> \r\n      Current portfolio is portfolio with all your trades, portfolio you have right now. <br/><br/> \r\n      Best/worst portfolio is portfolio with highest/lowest value in USD if you'd stopped trading altogether at some moment in selected time period. \r\n    </Tooltip>; \r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"How does my current portfolio compare to past portfolios?\"\r\n                category={rangeSelectorModel.userFriendlyText != null ? rangeSelectorModel.userFriendlyText : \"All time\" }\r\n                rightSection={\r\n                  <OverlayTrigger placement=\"bottom\" overlay={tooltipHelpText1}>\r\n                    <Button\r\n                      bsStyle=\"default\"\r\n                      special // for share button: fa fa-share-alt\r\n                      //speciallarge \r\n                      //pullRight\r\n                      simple\r\n                      >\r\n                      <i className={\"fa fa-question-circle\"} /> Help \r\n                    </Button> \r\n                  </OverlayTrigger>\r\n                }\r\n                content={<HighchartsReact\r\n                  highcharts={Highstock}\r\n                  constructorType={'stockChart'}\r\n                  options={this.state.performanceChartOptions}\r\n                />}\r\n                /*stats={\r\n                  <div>\r\n                    <i className=\"fa fa-history\" /> Updated 3 minutes ago\r\n                  </div>\r\n                }*/\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4}>\r\n            <PortfolioPie\r\n                title=\"Best portfolio\"\r\n                portfolio={this.state.bestPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Current portfolio\"\r\n                portfolio={this.state.currentPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <PortfolioPie\r\n                title=\"Worst portfolio\"\r\n                portfolio={this.state.worstPortfolio}\r\n                resModel={this.props.resModel}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PerformanceView;\r\n","import PortfolioView from \"views/PortfolioView.jsx\";\r\nimport TradesView from \"views/TradesView.jsx\";\r\nimport PositionsView from \"views/PositionsView.jsx\";\r\nimport FundingView from \"views/FundingView.jsx\";\r\nimport PerformanceView from \"views/PerformanceView.jsx\";\r\n\r\nvar dashboardRoutes = [\r\n  {\r\n    path: \"/portfolio\",\r\n    name: \"Portfolio\",\r\n    icon: \"fa fa-pie-chart\",\r\n    component: PortfolioView\r\n  }, {\r\n    path: \"/trades\",\r\n    name: \"Trades\",\r\n    icon: \"fa fa-retweet\",\r\n    component: TradesView\r\n  }, {\r\n    path: \"/positions\",\r\n    name: \"Positions\",\r\n    icon: \"fa fa-piggy-bank\",\r\n    component: PositionsView\r\n  }, {\r\n    path: \"/funding\",\r\n    name: \"Funding\",\r\n    icon: \"fa fa-money\",\r\n    component: FundingView\r\n  }, {\r\n    path: \"/performance\",\r\n    name: \"Performance\",\r\n    icon: \"fa fa-line-chart\",//fa fa-calculator, fa fa-area-chart\r\n    component: PerformanceView\r\n  }, {\r\n    collapse: true,\r\n    path: \"/manage\",\r\n    name: \"Manage\",\r\n    state: \"openManage\",\r\n    icon: \"fa fa-folder\",\r\n    views: [\r\n      {\r\n        path: \"/placeholder\",\r\n        name: \"Placeholder\",\r\n        mini: \"P\",\r\n        component: null\r\n      }\r\n    ]\r\n  },\r\n  /*{\r\n    path: \"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\",\r\n    name: \"Feedback\",\r\n    icon: \"fa fa-comments\",\r\n    component: null\r\n  },*/\r\n  { redirect: true, path: \"/\", pathTo: \"/portfolio\", name: \"Portfolio\" }\r\n];\r\nexport default dashboardRoutes;\r\n","// @flow\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Portal } from 'react-portal';\r\n\r\nclass InputFiles extends React.Component<{\r\n  children: React.Node,\r\n  onChange: (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n  accept?: string,\r\n  style?: Object,\r\n}> {\r\n  static propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onChange: PropTypes.func, // (files: Array<Object>, e: SyntheticEvent<HTMLInputElement>) => void,\r\n    accept: PropTypes.string,\r\n    style: PropTypes.object,\r\n  };\r\n  static defaultProps = {\r\n    accept: 'image/*',\r\n  };\r\n  onInputRef = (node: any): void => {\r\n    this.input = node;\r\n  };\r\n  onClick = (e: SyntheticEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (this.input) this.input.click();\r\n  };\r\n  onChange = (e: Object) => {\r\n    this.props.onChange(e.target.files, e);\r\n    e.target.value=null;\r\n  };\r\n  input: ?React.ElementRef<'input'>;\r\n  render() {\r\n    const { children, accept, style } = this.props;\r\n    const { onInputRef, onClick, onChange } = this;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          onClick={onClick}\r\n          onKeyPress={onClick}\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n          style={{ display: 'inline-block', ...style }}\r\n        >\r\n          {children}\r\n        </div>\r\n\r\n        <Portal>\r\n          <input\r\n            ref={onInputRef}\r\n            type=\"file\"\r\n            accept={accept}\r\n            onChange={onChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Portal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFiles;","import React, { Component } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// this is used to create scrollbars on windows devices like the ones from apple devices\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// backgroundImage for Sidebar\r\nimport image from \"assets/img/full-screen-image-3.jpg\";\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n//import InputFiles from 'react-input-files';\r\nimport InputFiles from './../Input/InputFiles.js'\r\n\r\n//const bgImage = { backgroundImage: \"url(\" + image + \")\" };\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onOpenClick = this.onOpenClick.bind(this);\r\n    this.state = {\r\n      isWindows: navigator.platform.indexOf(\"Win\") > -1 ? true : false,\r\n      width: window.innerWidth\r\n    };\r\n  }\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  // if the windows width changes CSS has to make some changes\r\n  // this functions tell react what width is the window\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    // add event listener for windows resize\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebarWrapper, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      setTimeout(() => {\r\n        ps.update();\r\n      }, 350);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n\r\n  onOpenClick() {\r\n    document.getElementById('input-files').click();     \r\n    return false;\r\n  }\r\n\r\n  getChangeCount() {\r\n    return this.props.changeCount > 0 ? \" (\" + this.props.changeCount + \")\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\" data-color=\"black\" data-image={image}>\r\n        {/*<div className=\"sidebar-background\" style={bgImage} />*/}\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-mini\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              <i className=\"fa fa-book\"></i>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"https://forkfol.io/app/\"\r\n            className=\"simple-text logo-normal\"\r\n          >\r\n            ForkFolio\r\n          </a>\r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebarWrapper\">\r\n          <ul className=\"nav\">\r\n            {/* If we are on responsive, we want both links from navbar and sidebar\r\n                            to appear in sidebar, so we render here HeaderLinks */}\r\n            {/*this.state.width <= 992 ? <HeaderLinks {...this.props} /> : null*/}\r\n            {/*\r\n                            here we render the links in the sidebar\r\n                            if the link is simple, we make a simple link, if not,\r\n                            we have to create a collapsible group,\r\n                            with the speciffic parent button and with it's children which are the links\r\n                        */}\r\n            {dashboardRoutes.map((prop, key) => {\r\n              var st = {};\r\n              st[prop[\"state\"]] = !this.state[prop.state];\r\n              if (prop.collapse) {\r\n                return (\r\n                  <li className={this.activeRoute(prop.path)} key={key}>\r\n                    <a onClick={() => this.setState(st)}>\r\n                      <i className={prop.icon} />\r\n                      <p>\r\n                        {prop.name + (this.state[prop.state] ? \"\" : this.getChangeCount())}\r\n                        <b\r\n                          className={\r\n                            this.state[prop.state]\r\n                              ? \"caret rotate-180\"\r\n                              : \"caret\"\r\n                          }\r\n                        />\r\n                      </p>\r\n                    </a>\r\n                    <Collapse in={this.state[prop.state]}>\r\n                      <ul className=\"nav\">\r\n                        <li className={\"\"} key={5}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.newPortfolio()}>\r\n                              <i className={\"fa fa-file-text-o\"} />\r\n                              <p>New</p>\r\n                            </a>\r\n                        </li>                      \r\n                        <li className={\"\"} key={6}>\r\n                          <a className=\"nav-link\" onClick={() => this.onOpenClick()}>\r\n                              <i className={\"fa fa-folder-open\"} />\r\n                              <p>Open</p>\r\n                            </a>\r\n                        </li>\r\n                        <li className={\"\"} key={7}>\r\n                          <a className=\"nav-link\" onClick={() => this.props.downloadPortfolio()}>\r\n                            <i className={\"fa fa-floppy-o\"} />\r\n                            <p>Save{this.getChangeCount()}</p>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </Collapse>\r\n                    <InputFiles \r\n                      onChange={this.props.uploadPortfolioFromFile}\r\n                      accept=\"application/json\">\r\n                      <a id=\"input-files\">\r\n                      </a>\r\n                    </InputFiles>\r\n                  </li>\r\n                );\r\n              } else {\r\n                if (prop.redirect) {\r\n                  return null;\r\n                } else {\r\n                  return (\r\n                    <li className={this.activeRoute(prop.path)} key={key}>\r\n                      <NavLink\r\n                        to={prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n            <li className={\"\"} key={8}>\r\n              <a className=\"nav-link\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSedlJMow1MmI3o6yBNAjtfXUQo05Pb6DVVSRg46PcM9yc8Bow/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className={\"fa fa-comments\"} />\r\n                <p>Feedback</p>\r\n              </a>    \r\n            </li>\r\n            <li className={\"\"} key={9}>\r\n              <a className=\"nav-link\" onClick={() => this.props.showHelpPanel()}>\r\n                <i className={\"fa fa-question-circle\"} />\r\n                <p>Help</p>\r\n              </a>    \r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n} from \"react-bootstrap\";\r\nimport { formatUtils } from './../../utils/FormatUtils';\r\n\r\nclass HeaderLinks extends Component {\r\n\r\n  getTotalBalance() {\r\n    if(this.props.userModel != null) {\r\n      let currentPortfolio = this.props.userModel.portfolios.slice(-1)[0];\r\n      return currentPortfolio.getTotalBalance(this.props.resModel, this.props.resModel.usd);\r\n    } \r\n\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav pullRight>\r\n          <NavItem eventKey={3} href=\"#/portfolio\">\r\n            <p>{formatUtils.toShortFormat(this.getTotalBalance())}</p>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\n// links that appear in navbar - they are separated from this component (navbar) so that we can redner them on responsive in sidebar as well\r\n\r\nimport HeaderLinks from \"./HeaderLinks.jsx\";\r\n\r\n// we import here the routes for dashboard pages (links that appear in sidebar) to set navbar's name\r\n\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMinimizeSidebar = this.handleMinimizeSidebar.bind(this);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n  }\r\n  makeBrand() {\r\n    var name;\r\n    dashboardRoutes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        prop.views.map((prop, key) => {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        if (prop.redirect) {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        } else {\r\n          if (prop.path === this.props.location.pathname) {\r\n            name = prop.name;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n  // function that makes the sidebar from normal to mini and vice-versa\r\n  handleMinimizeSidebar() {\r\n    document.body.classList.toggle(\"sidebar-mini\");\r\n  }\r\n  // function for responsive that hides/shows the sidebar\r\n  mobileSidebarToggle(e) {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  }\r\n\r\n  updateWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <div className=\"navbar-minimize\">\r\n          <button\r\n            id=\"minimizeSidebar\"\r\n            className=\"btn btn-default btn-fill btn-round btn-icon\"\r\n            onClick={this.handleMinimizeSidebar}\r\n          >\r\n            <i className=\"fa fa-ellipsis-v visible-on-sidebar-regular\" />\r\n            <i className=\"fa fa-navicon visible-on-sidebar-mini\" />\r\n          </button>\r\n        </div>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            {/* Here we create navbar brand, based on route name */}\r\n            {this.makeBrand()}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n\r\n        {/* Here we import the links that appear in navbar */}\r\n        {window.innerWidth > 992 ? (\r\n          <HeaderLinks \r\n            {...this.props}\r\n          />\r\n        ) : null}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nclass Footer extends Component {\r\n  /*\r\n  <li>\r\n    <a href=\"https://facebook.com/link-here\">\r\n      <i className=\"fa fa-facebook\"></i> Facebook \r\n    </a>\r\n  </li>\r\n  <li>\r\n    <a href=\"https://googleplus.com/link-here\">\r\n      <i className=\"fa fa-google-plus\"></i> Google Plus \r\n    </a>\r\n  </li>\r\n  */\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={\r\n          \"footer\" +\r\n          (this.props.transparent !== undefined ? \" footer-transparent\" : \"\")\r\n        }\r\n      >\r\n        <div\r\n          className={\r\n            \"container\" + (this.props.fluid !== undefined ? \"-fluid\" : \"\")\r\n          }\r\n        >\r\n          <nav className=\"pull-left\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://twitter.com/forkfol_io\">\r\n                  <i className=\"fa fa-twitter\"></i> Twitter \r\n                </a>\r\n              </li>             \r\n            </ul>\r\n          </nav>\r\n          <p className=\"copyright pull-right\">\r\n            Copyright &copy; {1900 + new Date().getYear()}{\" \"} ForkFol.io {packageJson.version}\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","/*jshint esversion: 6 */\r\n\r\nexport default class Ticker {\r\n  constructor(pair, price, time, percentChange24h) {\r\n    this.pair = pair;\r\n    this.price = price;\r\n    this.time = time;\r\n    this.percentChange24h = percentChange24h;\r\n  }\r\n}","/*jshint esversion: 6 */\r\n\r\nexport default class Currency {\r\n  constructor(code, name, rank, isFiat = false) {\r\n    this.code = code;\r\n    this.name = name;\r\n    this.rank = rank;\r\n    this.isFiat = isFiat;\r\n    this.meta = null;\r\n  }\r\n}\r\n","function getRestURL() {\r\n    console.log(window.location.host)\r\n    if (window.location.host === 'localhost:3000') {\r\n        //return 'http://localhost:8080/'\r\n        // bypass if server is not running on localhost\r\n        return 'https://forkfol.io/dummydata/';\r\n    } \r\n\r\n    return 'https://rest.forkfol.io/rest/';\r\n}\r\n\r\nfunction isLocalhost() {\r\n    return window.location.host === 'localhost:3000';\r\n}\r\n\r\nexport const config = {\r\n    restURL: getRestURL(),\r\n    isLocalhost: isLocalhost()\r\n}","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col, Modal} from \"react-bootstrap\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass ConfirmNewPortfolioDialog extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm new portfolio</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                  You have {this.props.changeCount} unsaved change{this.props.changeCount > 1 ? \"s\" : \"\"} in your current portfolio. If you create a\r\n\t\t              new portfolio, all unsaved changes will be lost.\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    Are you sure you want to create a new portfolio?\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.createNew()}\r\n                  >\r\n                    Yes\r\n                  </Button>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.saveCurrentAndCreateNew()}\r\n                  >\r\n                    Save current and create new\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmNewPortfolioDialog;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nclass DemoCard extends Component {\r\n   render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          content={\r\n            <Grid fluid>\r\n              <Row>\r\n                <Col lg={12} md={12}>\r\n                  <p><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> You're seeing a live demo, showcasing features on a sample portfolio. <a href=\"https://forkfol.io/app/\">Click here to create your portfolio now <i className=\"fa fa-check\" aria-hidden=\"true\"></i></a></p>            \r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DemoCard;\r\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\r\n\r\nvar indexRoutes = [\r\n  { path: \"/\", name: \"Home\", component: Dashboard }\r\n];\r\n\r\nexport default indexRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// react component that creates notifications (like some alerts with messages)\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\nimport Header from \"components/Header/Header.jsx\";\r\nimport Footer from \"components/Footer/Footer.jsx\";\r\nimport Promise from \"bluebird\";\r\n// dinamically create dashboard routes\r\nimport dashboardRoutes from \"routes/dashboard.jsx\";\r\n\r\n// style for notifications\r\nimport { style } from \"variables/Variables.jsx\";\r\nimport { userModel, resModel } from \"../../model/init/ResModelInit.js\";\r\n\r\nimport Ticker from \"../../model/Ticker\";\r\nimport demofolio from '../../model/init/demofolio.json';\r\nimport Currency from \"../../model/Currency\";\r\nimport CurrencyPair from \"../../model/CurrencyPair\";\r\nimport Transaction from \"../../model/Transaction\";\r\nimport UserModel from \"../../model/UserModel\";\r\nimport { config } from \"../../config/Config.js\";\r\nimport FileSaver from 'file-saver';\r\nimport cookie from 'react-cookies';\r\nimport ConfirmNewPortfolioDialog from \"../../views/dialogs/ConfirmNewPortfolioDialog\";\r\nimport DemoCard from \"../../views/common/DemoCard\";\r\nimport ReactGA from 'react-ga';\r\nimport { dateUtils } from './../../utils/DateUtils';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNotificationClick = this.handleNotificationClick.bind(this);\r\n    \r\n    this.showHelpPanel = this.showHelpPanel.bind(this);\r\n    this.hideHelpPanel = this.hideHelpPanel.bind(this);\r\n\r\n    this.showAddTradeDialog = this.showAddTradeDialog.bind(this);\r\n    this.hideAddTradeDialog = this.hideAddTradeDialog.bind(this);\r\n    this.showAddFundingDialog = this.showAddFundingDialog.bind(this);\r\n    this.hideAddFundingDialog = this.hideAddFundingDialog.bind(this);\r\n\r\n    this.showEditTradeDialog = this.showEditTradeDialog.bind(this);\r\n    this.hideEditTradeDialog = this.hideEditTradeDialog.bind(this);\r\n    this.showEditFundingDialog = this.showEditFundingDialog.bind(this);\r\n    this.hideEditFundingDialog = this.hideEditFundingDialog.bind(this);\r\n\r\n    this.hideConfirmNewPortfolioDialog = this.hideConfirmNewPortfolioDialog.bind(this);\r\n\r\n    this.addTransaction = this.addTransaction.bind(this);\r\n    this.removeTransaction = this.removeTransaction.bind(this);\r\n    this.updateTransaction = this.updateTransaction.bind(this);\r\n\r\n    this.setEditedTransaction = this.setEditedTransaction.bind(this);\r\n\r\n    this.fetchRecentPrices = this.fetchRecentPrices.bind(this);\r\n    this.fetchCurrencies = this.fetchCurrencies.bind(this);\r\n    this.getCurrenciesToFetch = this.getCurrenciesToFetch.bind(this);\r\n    this.fetchAllAndRender = this.fetchAllAndRender.bind(this);\r\n    this.fetchHistoday = this.fetchHistoday.bind(this);\r\n    this.fetchMeta = this.fetchMeta.bind(this);\r\n    this.isDemo = this.isDemo.bind(this);\r\n\r\n    this.updateUserModel = this.updateUserModel.bind(this);\r\n\r\n    this.newPortfolio = this.newPortfolio.bind(this);\r\n    this.openPortfolio = this.openPortfolio.bind(this);\r\n    this.savePortfolio = this.savePortfolio.bind(this);\r\n    this.saveCurrentAndCreateNewPortfolio = this.saveCurrentAndCreateNewPortfolio.bind(this);\r\n\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      isHelpPanelShown: false,\r\n      isAddTradeDialogShown: false,\r\n      isAddFundingDialogShown: false,\r\n      isEditTradeDialogShown: false,\r\n      isEditFundingDialogShown: false,\r\n      isConfirmNewPortfolioDialogShown: false,\r\n      userModel: userModel,\r\n      resModel: resModel,\r\n      editedTransaction: null,\r\n      changeCount: 0\r\n    };\r\n  }\r\n  \r\n  toTokensString(currencies) {\r\n    let str = \"\";\r\n    for(let c of currencies) {\r\n      str += (c.code + \",\");\r\n    }\r\n  \r\n    return str.slice(0,-1);\r\n  }\r\n\r\n  isDemo() {\r\n    return new Promise((accept, reject) => {\r\n      fetch('appversion.json').then(res => res.json()).then((out) => {\r\n        accept(out.isDemo);\r\n        return;\r\n      }).catch(err => { \r\n        reject(err);\r\n        return;  \r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchRecentPrices() {\r\n    let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n    if(currencies.length > 0) {\r\n      fetch(config.restURL + 'recent?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let tickers = JSON.parse(body);\r\n        let count = 0;\r\n        for (let i = 0; i < tickers.length; i++) {\r\n          let newPrice = parseFloat(tickers[i].l);\r\n          //console.log(\"--------\")\r\n          //console.log(\"Received token: \");\r\n          //console.log(tickers[i])\r\n          //console.log(\"Existing ticker:\");\r\n          //console.log(resModel.recentTickers.get(tickers[i].c))\r\n          // remove shitcoin duplicates\r\n          if(newPrice > 0.001) {\r\n            // if ticker doesn't exist or is updated\r\n            if(resModel.recentTickers.get(tickers[i].c) == null ||\r\n              newPrice !== resModel.recentTickers.get(tickers[i].c).price) {\r\n              let pair = new CurrencyPair(tickers[i].c, resModel.usd);\r\n              resModel.recentTickers.set(tickers[i].c, new Ticker(pair, newPrice, new Date(parseInt(tickers[i].t, 10) * 1000), tickers[i].p))\r\n              count++;\r\n            }\r\n          }\r\n        }\r\n        // if there is update, render\r\n        if(count > 0) {\r\n          console.log(\"Recent prices updated (\" + count + \" tickers).\")\r\n          let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n          this.setState({\r\n            userModel: newModel,\r\n            resModel: this.state.resModel.clone()\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // fetches a list of all curencies, crypto and fiat, and stores them in resModel\r\n  fetchCurrencies() {\r\n    return new Promise((accept, reject) => {\r\n      let url = config.restURL + (config.isLocalhost ? 'currencies.json' : 'currencies');\r\n      fetch(url).then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        for (let c of JSON.parse(body)) {\r\n          let currency = new Currency(c.c, c.n, c.r, c.f);\r\n          resModel.dailyTickers.set(currency, []);\r\n          if(currency.code === 'USD') {\r\n            resModel.usd = currency;\r\n          }\r\n        }\r\n        accept();\r\n        return;\r\n      })\r\n    });\r\n  }\r\n  \r\n  getCurrenciesToFetch(userModel) {\r\n    let currentPortfolio = userModel.portfolios.slice(-1)[0];\r\n    let currencies = [];\r\n    for (const k of currentPortfolio.balances.keys()) {\r\n      currencies.push(k);\r\n    }\r\n\r\n    return currencies;\r\n  }\r\n  \r\n  fetchAllAndRender(currencies, daysSince) {\r\n\r\n    // fetch meta first for loading speed\r\n    this.fetchMeta().then(() => {\r\n      // prepare all promises\r\n      const promises = [];\r\n      for(let currency of currencies) {\r\n        promises.push(this.fetchHistoday(currency, daysSince));\r\n      }\r\n    \r\n      // resolve, then render\r\n      Promise.all(promises).then(() => {\r\n        console.log(\"History prices updated (\" + promises.length + \" series).\");\r\n\r\n        // re-render\r\n        let newResModel = this.state.resModel.clone();\r\n        let newUserModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, newResModel);\r\n        this.setState({\r\n          userModel: newUserModel,     \r\n          resModel: newResModel\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  fetchHistoday(currency, days) {\r\n    return new Promise((accept, reject) => {\r\n      fetch(config.restURL + 'histoday?range=' + days + '&tokens=' + currency.code)\r\n      .then((response) => {\r\n        return response.text()\r\n      }).then((body) => {\r\n        let repacked = [];\r\n        for (let t of JSON.parse(body)) {\r\n          let pair = new CurrencyPair(currency, resModel.usd);\r\n          repacked.push(new Ticker(pair, t.l, new Date(parseInt(t.t, 10) * 1000)));\r\n        }\r\n        resModel.dailyTickers.set(currency, repacked);\r\n        accept();\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchMeta() {\r\n    return new Promise((accept, reject) => {\r\n      let currencies = this.getCurrenciesToFetch(this.state.userModel);\r\n      if(currencies.length > 0) {\r\n        fetch(config.restURL + 'meta?tokens=' + this.toTokensString(currencies)).then((response) => {\r\n          return response.text()\r\n        }).then((body) => {\r\n          let tickers = JSON.parse(body);\r\n          for (let i = 0; i < tickers.length; i++) {\r\n            let currency = resModel.findCurrencyByCode(tickers[i].c);\r\n            currency.meta = JSON.parse(tickers[i].m);\r\n          }\r\n          accept();\r\n          return;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ \r\n      _notificationSystem: this.refs.notificationSystem,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.action === \"PUSH\" &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    // start fetching prices based on user model\r\n    this.fetchCurrencies().then(() => {\r\n      this.isDemo().then((isDemo) => {\r\n        let showHelpPanel = false;\r\n        let newModel;\r\n        if(!isDemo) {\r\n          // check if cookie is not set, then it's the first load, and set it always\r\n          showHelpPanel = cookie.load('showGettingStarted') === undefined;\r\n          cookie.save('showGettingStarted', \"1\", { path: '/', maxAge: 31536000});\r\n\r\n          // if app, set model from local storage if any, or empty\r\n          let portfolioJson = localStorage.getItem('portfolio01');\r\n          if(portfolioJson != null && portfolioJson !== '') {\r\n            let portfolioObject = JSON.parse(portfolioJson);\r\n            console.log('Loaded portfolio from local storage.')\r\n            newModel = this.updateUserModel(portfolioObject, portfolioObject.changeCount);\r\n          } else {\r\n            newModel = this.updateUserModel({}, 0);\r\n          }\r\n        } else {\r\n          // if demo, set model from demofolio file\r\n          console.log('Loaded default portfolio.')\r\n          newModel = this.updateUserModel(demofolio, 0);\r\n        }\r\n\r\n        this.setState({\r\n          isHelpPanelShown: showHelpPanel,\r\n          isDemo: isDemo,\r\n        });\r\n\r\n        if(newModel.transactions[0] != null) {\r\n          let daysSince = newModel.getDaysSinceFirstTx();\r\n          this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), daysSince + 2);\r\n        }\r\n\r\n        // start checking recent prices periodically\r\n        this.fetchRecentPrices();\r\n        setInterval(this.fetchRecentPrices, 60000);\r\n      });\r\n    });\r\n    \r\n\r\n    if (document.documentElement.className.indexOf(\"nav-open\") !== -1) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n  // function that shows/hides notifications - it was put here, because the wrapper div has to be outside the main-panel class div\r\n  handleNotificationClick(position) {\r\n    var color = Math.floor(Math.random() * 4 + 1);\r\n    var level;\r\n    switch (color) {\r\n      case 1:\r\n        level = \"success\";\r\n        break;\r\n      case 2:\r\n        level = \"warning\";\r\n        break;\r\n      case 3:\r\n        level = \"error\";\r\n        break;\r\n      case 4:\r\n        level = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.state._notificationSystem.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n      message: (\r\n        <div>\r\n          Notification text\r\n        </div>\r\n      ),\r\n      level: level,\r\n      position: position,\r\n      autoDismiss: 15\r\n    });\r\n  }\r\n\r\n  // TODO: merge show hide to one\r\n\r\n  showHelpPanel() {\r\n    this.setState({ isHelpPanelShown: true });\r\n  }\r\n\r\n  hideHelpPanel() {\r\n    this.setState({ isHelpPanelShown: false });\r\n  }\r\n\r\n  showAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: true });\r\n  }\r\n\r\n  hideAddTradeDialog() {\r\n    this.setState({ isAddTradeDialogShown: false });\r\n  }\r\n\r\n  showAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: true });\r\n  }\r\n\r\n  hideAddFundingDialog() {\r\n    this.setState({ isAddFundingDialogShown: false });\r\n  }\r\n\r\n  showEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: true });\r\n  }\r\n\r\n  hideEditTradeDialog() {\r\n    this.setState({ isEditTradeDialogShown: false });\r\n  }\r\n\r\n  showEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: true });\r\n  }\r\n  \r\n  hideEditFundingDialog() {\r\n    this.setState({ isEditFundingDialogShown: false });\r\n  }\r\n\r\n  \r\n  hideConfirmNewPortfolioDialog() {\r\n    this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n  }\r\n\r\n  addTransaction(tx) {\r\n    let isOldest = true, hasNewBalance = true;\r\n    // check if historic prices need to be updated\r\n    if(this.state.userModel.portfolios[1] != null) {\r\n      let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n      isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n      hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n    }\r\n\r\n    // add transaction and sort\r\n    this.state.userModel.transactions.push(tx);\r\n    this.state.userModel.transactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(this.state.userModel.transactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  updateTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) > dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, add, sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== this.state.editedTransaction;\r\n    })\r\n    newTransactions.push(tx);\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n\r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction added. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  removeTransaction(tx) {\r\n    // check if historic prices need to be updated\r\n    let firstDate = new Date(this.state.userModel.portfolios[1].genesisTx.time);\r\n    let isOldest = dateUtils.getDaysSince(new Date(tx.time)) >= dateUtils.getDaysSince(firstDate);\r\n    let hasNewBalance = !this.state.userModel.portfolios.slice(-1)[0].balances.has(tx.pair.base);\r\n\r\n    // remove, and sort\r\n    let newTransactions = this.state.userModel.transactions.filter((item) => { \r\n      return item !== tx;\r\n    });\r\n    newTransactions.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n  \r\n    // update userModel\r\n    let newModel = new UserModel(newTransactions, this.state.userModel.positions, this.state.resModel);\r\n    let newChangeCount = this.state.changeCount + 1;\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: newChangeCount\r\n    });\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', this.getPortfolioJson(newModel, newChangeCount));\r\n    }\r\n\r\n    // updade historic prices if needed\r\n    if(hasNewBalance || isOldest) {\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n    }\r\n\r\n    console.log(\"Transaction removed. \" + newModel.transactions.length + \" transactions in user model.\");\r\n  }\r\n\r\n  setEditedTransaction(tx) {\r\n    this.setState({ editedTransaction: tx });\r\n  }\r\n\r\n  newPortfolio() {\r\n    // if there are unsaved changes, show confirm dialog\r\n    if(this.state.changeCount > 0 && !this.state.isConfirmNewPortfolioDialogShown) {\r\n      this.setState({\r\n        isConfirmNewPortfolioDialogShown: true\r\n      });\r\n    } else {\r\n      console.log(\"New portfolio created\");\r\n      // save to model\r\n      this.updateUserModel({}, 0);\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', '');\r\n      }\r\n\r\n      this.setState({ isConfirmNewPortfolioDialogShown: false });\r\n\r\n      ReactGA.event({category: 'User', action: 'New'});\r\n    }\r\n  }\r\n\r\n  saveCurrentAndCreateNewPortfolio() {\r\n    this.savePortfolio();\r\n    this.newPortfolio();\r\n  }\r\n\r\n\r\n  updateUserModel(fileFormatPortfolio, changeCount) {\r\n    let transactions = [], positions = [];\r\n    // parse fileFormatPortfolio and get transactions \r\n    if(fileFormatPortfolio.transactions) {\r\n      transactions = this.stringifiedToObjectsTransactions(fileFormatPortfolio.transactions);\r\n    }\r\n    // parse fileFormatPortfolio and get positions \r\n    if(fileFormatPortfolio.positions) {\r\n      positions = fileFormatPortfolio.positions;\r\n    }\r\n    \r\n    // update userModel with new transactions\r\n    let newModel = new UserModel(transactions, positions, this.state.resModel);\r\n    this.setState({\r\n      userModel: newModel,\r\n      changeCount: changeCount\r\n    });\r\n\r\n    return newModel;\r\n  }\r\n\r\n  openPortfolio(files) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      // TODO: check if format ok, version number\r\n\r\n      // save to local storage\r\n      if(!this.state.isDemo) {\r\n        localStorage.setItem('portfolio01', reader.result);\r\n      }\r\n\r\n      // parse json string to object\r\n      let portfolioObj = JSON.parse(reader.result);\r\n\r\n      // set new model, and get prices\r\n      let newModel = this.updateUserModel(portfolioObj, 0);\r\n      let firstDate = newModel.portfolios[1].genesisTx.time;\r\n      this.fetchAllAndRender(this.getCurrenciesToFetch(newModel), dateUtils.getDaysSince(firstDate) + 2);\r\n\r\n      ReactGA.event({category: 'User', action: 'Open'});\r\n    }, false);\r\n    if (files.length > 0) {\r\n      reader.readAsText(files[0]);\r\n    } else {\r\n      //this.props.showError(new InpulidationError(\"Portfolio file should be in JSON file format.\"));\r\n    }\r\n  }\r\n\r\n  savePortfolio() {\r\n    // create json string\r\n    let portfolioJson = this.getPortfolioJson(this.state.userModel, 0);\r\n\r\n    // save to local storage\r\n    if(!this.state.isDemo) {\r\n      localStorage.setItem('portfolio01', portfolioJson);\r\n    }\r\n\r\n    // save to file\r\n    let file = new File([portfolioJson], \"my-forkfolio-\" + this.state.userModel.transactions.length + \".json\", {type: \"text/plain;charset=utf-8\"});\r\n    FileSaver.saveAs(file);\r\n\r\n    this.setState({\r\n      changeCount: 0\r\n    });\r\n\r\n    ReactGA.event({category: 'User', action: 'Save'});\r\n  }\r\n\r\n  getPortfolioJson(userModel, changeCount) {\r\n    let fileTransactions = [];\r\n    for(let tx of userModel.transactions) {\r\n      let trade = {\r\n        isTrade: tx.isTrade,\r\n        isBuy: tx.isBuy,\r\n        pair: tx.pair.base.code + \"/\" + tx.pair.counter.code,\r\n        baseAmount: tx.baseAmount,\r\n        counterAmount: tx.counterAmount,\r\n        time: tx.time.getTime(),\r\n        comment: tx.comment\r\n      }\r\n      fileTransactions.push(trade);\r\n    }\r\n    let portfolioFile = {\r\n      version: 1,\r\n      credit: \"This json file is created by ForkFolio App at https://forkfol.io\",\r\n      transactions: fileTransactions,\r\n      changeCount: changeCount\r\n    }\r\n\r\n    return JSON.stringify(portfolioFile, null, \"\\t\");\r\n  }\r\n\r\n  stringifiedToObjectsTransactions(fileFormatTransactions) {\r\n    // got through file transactions, and create objects from pair strings\r\n    let transactions = [];\r\n    for(let t of fileFormatTransactions) {\r\n      let pairStr = t.pair.split('/');\r\n      let base = resModel.findCurrencyByCode(pairStr[0]);\r\n      let counter = resModel.findCurrencyByCode(pairStr[1]);\r\n      if(base !== null && counter !== null) {\r\n        let pair = new CurrencyPair(base, counter);\r\n        let tx = new Transaction(t.isTrade, t.isBuy, pair, t.baseAmount, t.counterAmount, new Date(t.time), t.comment);\r\n        transactions.push(tx);\r\n      }\r\n    }\r\n\r\n    return transactions;\r\n  }\r\n\r\n  render() {\r\n    let confirmNewPortfolioDialog = (\r\n      <ConfirmNewPortfolioDialog\r\n        isDialogShown={this.state.isConfirmNewPortfolioDialogShown}\r\n        hideDialog={this.hideConfirmNewPortfolioDialog}\r\n        createNew={this.newPortfolio}\r\n        saveCurrentAndCreateNew={this.saveCurrentAndCreateNewPortfolio}\r\n        changeCount={this.state.changeCount}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\r\n        <Sidebar {...this.props}\r\n          newPortfolio={this.newPortfolio} \r\n          uploadPortfolioFromFile={this.openPortfolio} \r\n          downloadPortfolio={this.savePortfolio} \r\n          showHelpPanel={this.showHelpPanel} \r\n          userModel={this.state.userModel}\r\n          resModel={this.state.resModel}\r\n          changeCount={this.state.changeCount}\r\n        />\r\n        <div\r\n          className={\r\n            \"main-panel\" +\r\n            (this.props.location.pathname === \"/maps/full-screen-maps\"\r\n              ? \" main-panel-maps\"\r\n              : \"\")\r\n          }\r\n          ref=\"mainPanel\"\r\n        >\r\n          <Header \r\n            location={this.props.location}\r\n            userModel={this.state.userModel}\r\n            resModel={this.state.resModel}\r\n          />\r\n          {this.state.isDemo ? (\r\n            <div className=\"demo-content\">\r\n              <DemoCard />\r\n            </div>\r\n          ) : \"\"\r\n          }\r\n          \r\n          <Switch>\r\n            {dashboardRoutes.map((prop, key) => {\r\n              if (prop.collapse) {\r\n                return prop.views.map((prop, key) => {\r\n                  if (prop.name === \"Notifications\") {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        key={key}\r\n                        render={routeProps => (\r\n                          <prop.component\r\n                            {...routeProps}\r\n                            handleClick={this.handleNotificationClick}\r\n                          />\r\n                        )}\r\n                      />\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Route\r\n                        path={prop.path}\r\n                        component={prop.component}\r\n                        key={key}\r\n                      />\r\n                    );\r\n                  }\r\n                });\r\n              } else {\r\n                if (prop.redirect)\r\n                  return (\r\n                    <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                  );\r\n                else\r\n                  return (\r\n                    <Route\r\n                      path={prop.path}\r\n                      //component={prop.component}\r\n                      key={key}\r\n                      render={routeProps => (\r\n                        <prop.component\r\n                          {...routeProps}\r\n                          handleClick={this.handleNotificationClick}\r\n                          userModel={this.state.userModel}\r\n                          resModel={this.state.resModel}\r\n\r\n                          isHelpPanelShown={this.state.isHelpPanelShown}\r\n                          hideHelpPanel={this.hideHelpPanel}\r\n\r\n                          isAddTradeDialogShown={this.state.isAddTradeDialogShown}\r\n                          showAddTradeDialog={this.showAddTradeDialog}\r\n                          hideAddTradeDialog={this.hideAddTradeDialog}\r\n\r\n                          isAddFundingDialogShown={this.state.isAddFundingDialogShown}\r\n                          showAddFundingDialog={this.showAddFundingDialog}\r\n                          hideAddFundingDialog={this.hideAddFundingDialog}\r\n\r\n                          isEditTradeDialogShown={this.state.isEditTradeDialogShown}\r\n                          showEditTradeDialog={this.showEditTradeDialog}\r\n                          hideEditTradeDialog={this.hideEditTradeDialog}\r\n\r\n                          isEditFundingDialogShown={this.state.isEditFundingDialogShown}\r\n                          showEditFundingDialog={this.showEditFundingDialog}\r\n                          hideEditFundingDialog={this.hideEditFundingDialog}\r\n\r\n                          addTransaction={this.addTransaction}\r\n                          removeTransaction={this.removeTransaction}\r\n\r\n                          updateTransaction={this.updateTransaction}\r\n                          setEditedTransaction={this.setEditedTransaction}\r\n                          editedTransaction={this.state.editedTransaction}\r\n                        />\r\n                      )}\r\n                    />\r\n                  );\r\n              }\r\n            })}\r\n          </Switch>\r\n          <Footer fluid />\r\n          {this.state.isConfirmNewPortfolioDialogShown ? confirmNewPortfolioDialog : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport indexRoutes from \"./routes/index.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard.css?v=1.1.1\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\nimport ReactGA from 'react-ga';\r\n\r\nconsole.log(window.location.pathname + window.location.hash);\r\n\r\nfunction initializeReactGA() {\r\n  ReactGA.initialize('UA-112760038-1');\r\n}\r\n\r\nfunction render() {\r\n  console.log(\"Rendering..\");\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <Switch>\r\n        {indexRoutes.map((prop, key) => {\r\n          return <Route \r\n                  path={prop.path} \r\n                  key={key}\r\n                  render={routeProps => (\r\n                    <prop.component\r\n                      {...routeProps}\r\n                    />\r\n                  )}\r\n                 />;\r\n        })}\r\n      </Switch>\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n}\r\n\r\ninitializeReactGA();\r\nrender();\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\n\r\nclass ConfirmRemoveTransactionDialog extends Component {\r\n\r\n  getType() {\r\n    if (this.props.removedTransaction != null) {\r\n      return this.props.removedTransaction.isTrade ? \"trade\" : \"funding\";\r\n    }\r\n  }\r\n\r\n  getDescription() {\r\n    if (this.props.removedTransaction != null) {\r\n      return (this.props.removedTransaction.isTrade ? \"Trade\" : \"Funding\") + \": \" + this.props.removedTransaction.toShortString();\r\n    }\r\n  }\r\n\r\n  getDate() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Date: \" + this.props.removedTransaction.time.toISOString().split('T')[0];\r\n    }\r\n  }\r\n\r\n  getComment() {\r\n    if (this.props.removedTransaction != null) {\r\n      return \"Comment: \" + this.props.removedTransaction.comment;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Modal\r\n                show={this.props.isDialogShown}\r\n                onHide={() => this.props.hideDialog()}\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Confirm remove</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p>\r\n                    Are you sure you want to remove this {this.getType()}?\r\n                  </p>\r\n                  <br />\r\n                  <p>\r\n                    {this.getDescription()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getDate()}\r\n                  </p>\r\n                  <p>\r\n                    {this.getComment()}\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button\r\n                    simple\r\n                    onClick={() => this.props.hideDialog()}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    bsStyle=\"default\"\r\n                    fill\r\n                    wd\r\n                    type=\"submit\"\r\n                    onClick={() => this.props.removeTransaction()}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmRemoveTransactionDialog;\r\n","\r\n\t\t\r\nclass CoinGeckoPrices {\t\t\r\n    // gets usd prices from coingecko api\r\n\tstatic async getTokenPriceInUSD(address) {\t\r\n\t\tlet url = \"https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=\" + address.toLowerCase() + \"&vs_currencies=USD\";\r\n\t\tconst response = await fetch(url);\r\n\t\tconst myJson = await response.json();\r\n\t\tif(myJson[address.toLowerCase()]) {\r\n\t\t\treturn Number(myJson[address.toLowerCase()].usd);\r\n\t\t}\r\n\t\t\t\r\n\t\treturn 1;\r\n\t}\r\n}\t\t\r\n\r\nexport { CoinGeckoPrices };\r\n"],"sourceRoot":""}